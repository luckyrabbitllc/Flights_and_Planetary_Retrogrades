(* Content-type: application/vnd.wolfram.cdf.text *)

(*** Wolfram CDF File ***)
(* http://www.wolfram.com/cdf *)

(* CreatedBy='Mathematica 11.0' *)

(*************************************************************************)
(*                                                                       *)
(*  The Mathematica License under which this file was created prohibits  *)
(*  restricting third parties in receipt of this file from republishing  *)
(*  or redistributing it by any means, including but not limited to      *)
(*  rights management or terms of use, without the express consent of    *)
(*  Wolfram Research, Inc. For additional information concerning CDF     *)
(*  licensing and redistribution see:                                    *)
(*                                                                       *)
(*        www.wolfram.com/cdf/adopting-cdf/licensing-options.html        *)
(*                                                                       *)
(*************************************************************************)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[      1064,         20]
NotebookDataLength[   1912510,      37611]
NotebookOptionsPosition[   1891431,      36920]
NotebookOutlinePosition[   1891809,      36936]
CellTagsIndexPosition[   1891766,      36933]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Planetary Retrogrades and Flight CANCELLATIONS in the USA from Oct 1987 to \
May 2017 by Renay Oshop\
\>", "Title",
 CellChangeTimes->{{3.709571663874242*^9, 3.709571666811844*^9}, {
  3.7095900025293245`*^9, 3.709590005494931*^9}, {3.709592511870119*^9, 
  3.7095925213660645`*^9}, {3.7095928303843822`*^9, 3.7095928381669817`*^9}, {
  3.7096506472509456`*^9, 3.7096506577921057`*^9}, {3.709681273598765*^9, 
  3.7096812793599453`*^9}, {3.7097521709599333`*^9, 3.7097521758759327`*^9}, {
  3.709763045529912*^9, 3.709763046104029*^9}, {3.709921632162698*^9, 
  3.709921638126911*^9}}],

Cell[TextData[StyleBox["Mercury retrograde is said to be correlated to events \
of delay, disappointment, and difficulty. \nQuestion: Does Mercury Retrograde \
truly correlate to flight delays?", "Chapter"]], "Text",
 CellChangeTimes->{{3.709826646622883*^9, 3.7098267088827486`*^9}, {
  3.7098267391109962`*^9, 3.709826782458953*^9}, {3.7098296826294813`*^9, 
  3.7098296858271427`*^9}}],

Cell["\<\
There is full data on all American flights that is available at the following \
URL!

Specific page for download of this data https : // \
www.transtats.bts.gov/DL_SelectFields.asp?Table_ID = 236 & DB_Short _Name = \
On - Time

Collection of data from this site was in the evening of Jul 21, 2017 Mountain \
Time\
\>", "Text",
 CellChangeTimes->{{3.7096803322958956`*^9, 3.709680332306899*^9}, {
  3.7097451679674716`*^9, 3.7097451887647324`*^9}, {3.7097630097165728`*^9, 
  3.709763027815282*^9}, {3.709826789375383*^9, 3.709826806731969*^9}, {
  3.7098268400028453`*^9, 3.709826873570781*^9}}],

Cell[BoxData[
 StyleBox[
  RowBox[{"\n", 
   RowBox[{
    RowBox[{"Full", " ", "data", " ", "at", " ", 
     RowBox[{"https", ":"}]}], "//", 
    RowBox[{
     RowBox[{"www", ".", "transtats", ".", "bts", ".", "gov"}], "/"}]}]}],
  FontWeight->"Bold"]], "Input",
 CellChangeTimes->{{3.709650627050807*^9, 3.7096506270618134`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"months", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Jan\>\"", ",", "\"\<Feb\>\"", ",", "\"\<Mar\>\"", ",", "\"\<Apr\>\"",
      ",", "\"\<May\>\"", ",", "\"\<Jun\>\"", ",", "\"\<Jul\>\"", ",", 
     "\"\<Aug\>\"", ",", "\"\<Sep\>\"", ",", "\"\<Oct\>\"", ",", 
     "\"\<Nov\>\"", ",", "\"\<Dec\>\""}], "}"}]}], ";", 
  RowBox[{"years", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"missing", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"missing", "=", 
  RowBox[{"Reap", "[", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"year", "=", "2001"}], ",", 
      RowBox[{"year", "\[LessEqual]", "2011"}], ",", 
      RowBox[{"year", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"monthnum", "=", "1"}], ",", 
         RowBox[{"monthnum", "<=", "12"}], ",", 
         RowBox[{"monthnum", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"month", "=", 
           RowBox[{"months", "[", 
            RowBox[{"[", "monthnum", "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"element", "=", 
             RowBox[{
              RowBox[{"Import", "[", 
               RowBox[{
                RowBox[{"ToString", "[", "year", "]"}], "<>", "month", "<>", 
                "\"\<.csv\>\""}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", " ", 
           RowBox[{
            RowBox[{"Not", "[", 
             RowBox[{"FileExistsQ", "[", 
              RowBox[{
               RowBox[{"ToString", "[", "year", "]"}], "<>", "month", "<>", 
               "\"\<.csv\>\""}], "]"}], "]"}], ",", 
            RowBox[{"Sow", "[", 
             RowBox[{
              RowBox[{"ToString", "[", "year", "]"}], "<>", "month"}], 
             "]"}]}], "]"}], 
          RowBox[{"(*", "CHECK", "*)"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";"}]}], "]"}], ";"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.709810265266201*^9, 3.7098103461577754`*^9}, {
  3.7098104000318136`*^9, 3.709810592974347*^9}, {3.709810833455621*^9, 
  3.7098108495629225`*^9}, {3.7098116071691513`*^9, 3.7098116217101307`*^9}, {
  3.709812330365331*^9, 3.7098123463956165`*^9}, {3.7098124579644775`*^9, 
  3.7098124963373375`*^9}, {3.709812643497491*^9, 3.709812659706812*^9}, {
  3.7098127970789585`*^9, 3.7098128021489973`*^9}, {3.7098136538044987`*^9, 
  3.7098137012942286`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Null", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"2010Jun\"\>", ",", "\<\"2010Jul\"\>"}], "}"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7098124470322466`*^9, 3.709812490782201*^9, 
  3.709812640989978*^9, 3.709812791232761*^9, 3.709813430452735*^9, 
  3.7098137036547127`*^9}]
}, Open  ]],

Cell["\<\
NOTE : The June and July 2010 Files were inaccessible in the BTS website. So, \
I will stop collection in Dec 2009. => 22 Years Actually\
\>", "Text",
 CellChangeTimes->{{3.709813845537783*^9, 3.70981392068018*^9}, {
   3.7098141761705303`*^9, 3.7098141777258472`*^9}, 3.7098268212919807`*^9, {
   3.709918801926758*^9, 3.7099188107995605`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Acquire flight data (month by month)and collate year by year. Note that the \
major security events of Sept 2001 and their attendant flight cancellations \
are included in the analysis and were removed as outliers. (Mercury was \
prograde during this time.)\
\>", "Chapter",
 CellChangeTimes->{{3.7097452490540857`*^9, 3.7097453425092354`*^9}, {
  3.7097545270711575`*^9, 3.709754533937563*^9}, {3.7098268937449503`*^9, 
  3.709826935290536*^9}, {3.7098288220861716`*^9, 3.709828838124488*^9}, {
  3.7098297077636757`*^9, 3.709829724270087*^9}, {3.7098512189134617`*^9, 
  3.7098512265200357`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"months", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Jan\>\"", ",", "\"\<Feb\>\"", ",", "\"\<Mar\>\"", ",", "\"\<Apr\>\"",
      ",", "\"\<May\>\"", ",", "\"\<Jun\>\"", ",", "\"\<Jul\>\"", ",", 
     "\"\<Aug\>\"", ",", "\"\<Sep\>\"", ",", "\"\<Oct\>\"", ",", 
     "\"\<Nov\>\"", ",", "\"\<Dec\>\""}], "}"}]}], ";", 
  RowBox[{"years", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"year", "=", "1987"}], ",", 
    RowBox[{"year", "\[LessEqual]", "1987"}], ",", 
    RowBox[{"year", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rawyear", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"monthnum", "=", "10"}], ",", 
       RowBox[{"monthnum", "\[LessEqual]", "12"}], ",", 
       RowBox[{"monthnum", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"month", "=", 
         RowBox[{"months", "[", 
          RowBox[{"[", "monthnum", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rawmonth", "=", 
         RowBox[{"Import", "[", 
          RowBox[{
           RowBox[{"ToString", "[", "year", "]"}], "<>", "month", "<>", 
           "\"\<.csv\>\""}], "]"}]}], ";", 
        RowBox[{"(*", "CHECK", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"rawmonth2", "=", 
         RowBox[{
          RowBox[{"Drop", "[", 
           RowBox[{"rawmonth", ",", "1"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rawmonth3", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"rawmonth2", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}], "]"}], 
             ",", 
             RowBox[{"rawmonth2", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "4"}], "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "rawmonth2", "]"}]}], "}"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"monthgathers", "=", 
         RowBox[{"GatherBy", "[", 
          RowBox[{"rawmonth3", ",", "First"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"monthavgs", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"monthgathers", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"monthgathers", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "All", ",", "2"}], "]"}], "]"}], "]"}], 
              "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "monthgathers", "]"}]}], "}"}]}], "]"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"years", ",", "monthavgs"}], "]"}]}]}], "]"}]}]}], 
   RowBox[{"(*", "CHECK", "*)"}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"year", "=", "1988"}], ",", 
     RowBox[{"year", "\[LessEqual]", "2009"}], ",", 
     RowBox[{"year", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rawyear", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"monthnum", "=", "1"}], ",", 
        RowBox[{"monthnum", "<=", "12"}], ",", 
        RowBox[{"monthnum", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"month", "=", 
          RowBox[{"months", "[", 
           RowBox[{"[", "monthnum", "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"rawmonth", "=", 
          RowBox[{"Import", "[", 
           RowBox[{
            RowBox[{"ToString", "[", "year", "]"}], "<>", "month", "<>", 
            "\"\<.csv\>\""}], "]"}]}], ";", 
         RowBox[{"(*", "CHECK", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"rawmonth2", "=", 
          RowBox[{
           RowBox[{"Drop", "[", 
            RowBox[{"rawmonth", ",", "1"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"rawmonth3", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"rawmonth2", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}], "]"}], 
              ",", 
              RowBox[{"rawmonth2", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "4"}], "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "rawmonth2", "]"}]}], "}"}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"monthgathers", "=", 
          RowBox[{"GatherBy", "[", 
           RowBox[{"rawmonth3", ",", "First"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"monthavgs", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"monthgathers", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"N", "[", 
               RowBox[{"Mean", "[", 
                RowBox[{"monthgathers", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "All", ",", "2"}], "]"}], "]"}], "]"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "monthgathers", "]"}]}], "}"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"years", ",", "monthavgs"}], "]"}]}]}], "]"}]}]}], 
    RowBox[{"(*", "CHECK", "*)"}], "\[IndentingNewLine]", "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"year", "=", "2017"}], ",", 
      RowBox[{"year", "\[LessEqual]", "2017"}], ",", 
      RowBox[{"year", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"rawyear", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"monthnum", "=", "1"}], ",", 
         RowBox[{"monthnum", "\[LessEqual]", "5"}], ",", 
         RowBox[{"monthnum", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"month", "=", 
           RowBox[{"months", "[", 
            RowBox[{"[", "monthnum", "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"rawmonth", "=", 
           RowBox[{"Import", "[", 
            RowBox[{
             RowBox[{"ToString", "[", "year", "]"}], "<>", "month", "<>", 
             "\"\<.csv\>\""}], "]"}]}], ";", 
          RowBox[{"(*", "CHECK", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"rawmonth2", "=", 
           RowBox[{
            RowBox[{"Drop", "[", 
             RowBox[{"rawmonth", ",", "1"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"rawmonth3", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"rawmonth2", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"rawmonth2", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "rawmonth2", "]"}]}], "}"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"monthgathers", "=", 
           RowBox[{"GatherBy", "[", 
            RowBox[{"rawmonth3", ",", "First"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"monthavgs", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"monthgathers", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"N", "[", 
                RowBox[{"Mean", "[", 
                 RowBox[{"monthgathers", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "All", ",", "2"}], "]"}], "]"}], "]"}], 
                "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "monthgathers", "]"}]}], "}"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"years", ",", "monthavgs"}], "]"}]}]}], "]"}]}]}], 
     RowBox[{"(*", "CHECK", "*)"}], "\[IndentingNewLine]", "]"}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<years.mx\>\"", ",", "years"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7097453470761695`*^9, 3.709745388896739*^9}, {
   3.7097454608914895`*^9, 3.709745798448654*^9}, {3.709745828572827*^9, 
   3.7097461022399025`*^9}, {3.709750778389097*^9, 3.709750822054038*^9}, {
   3.709752124146743*^9, 3.7097521496315536`*^9}, {3.7097545046455617`*^9, 
   3.709754506947033*^9}, {3.709763085967502*^9, 3.7097631401246*^9}, {
   3.7097684654722*^9, 3.7097685125278416`*^9}, 3.7097696641252956`*^9, 
   3.7097697875329065`*^9, 3.7097698471841297`*^9, {3.7097699261866236`*^9, 
   3.709769998612792*^9}, {3.7097707970007367`*^9, 3.709770820174485*^9}, {
   3.7097709044094687`*^9, 3.70977091993565*^9}, {3.7097713993141174`*^9, 
   3.7097714125688334`*^9}, {3.709771663795309*^9, 3.7097716676731043`*^9}, {
   3.7097717647749996`*^9, 3.7097718060077534`*^9}, {3.7097720250130386`*^9, 
   3.7097720625337267`*^9}, 3.709773355710211*^9, {3.7097735779461317`*^9, 
   3.7097738268549614`*^9}, {3.7097738805389605`*^9, 
   3.7097739851343927`*^9}, {3.7097740183882055`*^9, 3.709774054927692*^9}, {
   3.709774094874877*^9, 3.7097741090027723`*^9}, {3.7097741711014957`*^9, 
   3.7097742337225075`*^9}, {3.7097743789342613`*^9, 
   3.7097743918399057`*^9}, {3.7097745868424516`*^9, 
   3.7097746164995284`*^9}, {3.7097747620297904`*^9, 3.709774779834439*^9}, {
   3.7097749219275527`*^9, 3.70977493245271*^9}, {3.7097821634401836`*^9, 
   3.7097821636392245`*^9}, {3.7098139355412264`*^9, 3.709813935750268*^9}, 
   3.7098262747730412`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Acquire Mercury retrogression data day by day for 30 years and run ANOVA and \
other tests \
\>", "Chapter",
 CellChangeTimes->{{3.7097452490540857`*^9, 3.7097453425092354`*^9}, 
   3.7097545197216516`*^9, {3.7097553395562496`*^9, 3.709755366620795*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"years", "=", 
  RowBox[{"Import", "[", "\"\<years.mx\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.709825555060497*^9, 3.7098255689513426`*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1987", ",", "10", ",", "19"}], "}"}], ",", 
               "0.005833672500339167`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1987", ",", "10", ",", "20"}], "}"}], ",", 
               "0.008952794357026587`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1987", ",", "10", ",", "21"}], "}"}], ",", 
               "0.006121199755152009`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1987", ",", "10", ",", "22"}], "}"}], ",", 
               "0.005572166349551508`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1987", ",", "10", ",", "23"}], "}"}], ",", 
               "0.0056829852790140365`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1987", ",", "10", ",", "24"}], "}"}], ",", 
               "0.005067441687159997`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1987", ",", "10", ",", "25"}], "}"}], ",", 
               "0.00817497310864109`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1987", ",", "10", ",", "26"}], "}"}], ",", 
               "0.005796710703693718`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1987", ",", "10", ",", "27"}], "}"}], ",", 
               "0.005372687704026115`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1987", ",", "10", ",", "28"}], "}"}], ",", 
               "0.011787020728898524`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1987", ",", "10", ",", "29"}], "}"}], ",", 
               "0.005269914194986825`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1987", ",", "10", ",", "30"}], "}"}], ",", 
               "0.0047377326565143825`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1987", ",", "10", ",", "31"}], "}"}], ",", 
               "0.009828931572629051`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1987", ",", "10", ",", "1"}], "}"}], ",", 
               "0.01036164160910199`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1987", ",", "10", ",", "2"}], "}"}], ",", 
               "0.005153241117439653`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1987", ",", "10", ",", "3"}], "}"}], ",", 
               "0.006648445002585507`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1987", ",", "10", ",", "4"}], "}"}], ",", 
               "0.007866203670895047`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1987", ",", "10", ",", "5"}], "}"}], ",", 
               "0.009011432414256892`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1987", ",", "10", ",", "6"}], "}"}], ",", 
               "0.006308301456278102`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1987", ",", "10", ",", "7"}], "}"}], ",", 
               "0.0026342451874366768`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1987", ",", "10", ",", "8"}], "}"}], ",", 
               "0.003371771528761211`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1987", ",", "10", ",", "9"}], "}"}], ",", 
               "0.0038560411311053984`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1987", ",", "10", ",", "10"}], "}"}], ",", 
               "0.004992176439907608`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1987", ",", "10", ",", "11"}], "}"}], ",", 
               "0.003209700427960057`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1987", ",", "10", ",", "12"}], "}"}], ",", 
               "0.024602906387293004`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1987", ",", "10", ",", "13"}], "}"}], ",", 
               "0.007332660612176253`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1987", ",", "10", ",", "14"}], "}"}], ",", 
               "0.004525192489531271`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1987", ",", "10", ",", "15"}], "}"}], ",", 
               "0.0031641308738386965`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1987", ",", "10", ",", "16"}], "}"}], ",", 
               "0.005125092723717041`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1987", ",", "10", ",", "17"}], "}"}], ",", 
               "0.007084348018596413`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1987", ",", "10", ",", "18"}], "}"}], ",", 
               "0.003772241992882562`"}], "}"}]}], "}"}], ",", 
           TemplateBox[{"265"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
              FrameStyle -> None, RoundingRadius -> 7]& )], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"2009", ",", "12", ",", "3"}], "}"}], ",", 
               "0.005146277339598366`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"2009", ",", "12", ",", "4"}], "}"}], ",", 
               "0.033915323255424776`"}], "}"}], ",", 
             TemplateBox[{"28"},
              "OutputSizeLimit`Skeleton",
              DisplayFunction->(FrameBox[
                
                RowBox[{
                 "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                Background -> GrayLevel[0.75], 
                BaseStyle -> {
                 "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                  ShowStringCharacters -> False}, BaselinePosition -> 
                Baseline, ContentPadding -> False, 
                FrameMargins -> {{1, 1}, {1, 2}}, FrameStyle -> None, 
                RoundingRadius -> 7]& )], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"2009", ",", "12", ",", "2"}], "}"}], ",", 
               "0.011659295847452759`"}], "}"}]}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{109., {5., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{90., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1, 15167562623507322558, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{104., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1, 15167562623507322558, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{78., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{93., {1., 18.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1, 15167562623507322558, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{135., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{163., {1., 18.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[1]]], "Output",
 CellChangeTimes->{3.709826249615841*^9, 3.709849506479372*^9, 
  3.709906384777398*^9, 3.709914875619356*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"years0", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"years", ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7097728447983313`*^9, 3.7097728505835166`*^9}, {
   3.7097750161858664`*^9, 3.7097750176061573`*^9}, {3.7097750494136744`*^9, 
   3.7097750928245687`*^9}, 3.7098496717635264`*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1987", ",", "10", ",", "19"}], "}"}], ",", 
             "0.005833672500339167`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1987", ",", "10", ",", "20"}], "}"}], ",", 
             "0.008952794357026587`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1987", ",", "10", ",", "21"}], "}"}], ",", 
             "0.006121199755152009`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1987", ",", "10", ",", "22"}], "}"}], ",", 
             "0.005572166349551508`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1987", ",", "10", ",", "23"}], "}"}], ",", 
             "0.0056829852790140365`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1987", ",", "10", ",", "24"}], "}"}], ",", 
             "0.005067441687159997`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1987", ",", "10", ",", "25"}], "}"}], ",", 
             "0.00817497310864109`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1987", ",", "10", ",", "26"}], "}"}], ",", 
             "0.005796710703693718`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1987", ",", "10", ",", "27"}], "}"}], ",", 
             "0.005372687704026115`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1987", ",", "10", ",", "28"}], "}"}], ",", 
             "0.011787020728898524`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1987", ",", "10", ",", "29"}], "}"}], ",", 
             "0.005269914194986825`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1987", ",", "10", ",", "30"}], "}"}], ",", 
             "0.0047377326565143825`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1987", ",", "10", ",", "31"}], "}"}], ",", 
             "0.009828931572629051`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1987", ",", "10", ",", "1"}], "}"}], ",", 
             "0.01036164160910199`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1987", ",", "10", ",", "2"}], "}"}], ",", 
             "0.005153241117439653`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1987", ",", "10", ",", "3"}], "}"}], ",", 
             "0.006648445002585507`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1987", ",", "10", ",", "4"}], "}"}], ",", 
             "0.007866203670895047`"}], "}"}], ",", 
           TemplateBox[{"8094"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
              FrameStyle -> None, RoundingRadius -> 7]& )], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2009", ",", "12", ",", "17"}], "}"}], ",", 
             "0.006317889603192197`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2009", ",", "12", ",", "18"}], "}"}], ",", 
             "0.021602557037363607`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2009", ",", "12", ",", "19"}], "}"}], ",", 
             "0.15852361588989677`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2009", ",", "12", ",", "20"}], "}"}], ",", 
             "0.10506770267954064`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2009", ",", "12", ",", "21"}], "}"}], ",", 
             "0.015675705406743304`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2009", ",", "12", ",", "22"}], "}"}], ",", 
             "0.01862053768179815`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2009", ",", "12", ",", "23"}], "}"}], ",", 
             "0.027768595041322314`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2009", ",", "12", ",", "24"}], "}"}], ",", 
             "0.046135489858146625`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2009", ",", "12", ",", "25"}], "}"}], ",", 
             "0.03128468368479467`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2009", ",", "12", ",", "26"}], "}"}], ",", 
             "0.04615478292638373`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2009", ",", "12", ",", "27"}], "}"}], ",", 
             "0.016908212560386472`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2009", ",", "12", ",", "28"}], "}"}], ",", 
             "0.007507175977036874`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2009", ",", "12", ",", "29"}], "}"}], ",", 
             "0.022352550625207482`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2009", ",", "12", ",", "30"}], "}"}], ",", 
             "0.00864026585433398`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2009", ",", "12", ",", "31"}], "}"}], ",", 
             "0.015080497248828205`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2009", ",", "12", ",", "1"}], "}"}], ",", 
             "0.005024545192030032`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2009", ",", "12", ",", "2"}], "}"}], ",", 
             "0.011659295847452759`"}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{109., {5., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{90., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{108., {1., 18.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 2, 15167562623507322558, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{104., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{126., {1., 18.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 2, 15167562623507322558, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{78., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{93., {1., 18.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 2, 15167562623507322558, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{135., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[2]]], "Output",
 CellChangeTimes->{3.7099063872309055`*^9, 3.7099148769446263`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"years0", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7098496844571495`*^9, 3.7098496879508715`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1987", ",", "10", ",", "19"}], "}"}], ",", 
   "0.005833672500339167`"}], "}"}]], "Output",
 CellChangeTimes->{{3.709849672493678*^9, 3.7098496885659986`*^9}, 
   3.7099063916028085`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dates", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"DateObject", "[", 
       RowBox[{
        RowBox[{"years0", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"TimeObject", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"12", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"TimeZone", "\[Rule]", "\"\<America/Chicago\>\""}]}], 
         "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "years0", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.709754628673974*^9, 3.7097546537161055`*^9}, {
  3.7097708340223227`*^9, 3.7097708412618065`*^9}, {3.7097709256168137`*^9, 
  3.7097709355598507`*^9}, {3.7097751066253967`*^9, 3.709775111530402*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Short", "[", 
  RowBox[{"dates", ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.7097707660263906`*^9, 3.709770766826555*^9}, {
  3.7097751315505037`*^9, 3.709775133381879*^9}, {3.7097759990306764`*^9, 
  3.709776009039009*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         TagBox[
          RowBox[{"{", 
           RowBox[{
            TemplateBox[{RowBox[{"\"Mon 19 Oct 1987 12:00:00\"", 
                StyleBox["\"CDT\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"1987", ",", "10", ",", "19"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Tue 20 Oct 1987 12:00:00\"", 
                StyleBox["\"CDT\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"1987", ",", "10", ",", "20"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Wed 21 Oct 1987 12:00:00\"", 
                StyleBox["\"CDT\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"1987", ",", "10", ",", "21"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Thu 22 Oct 1987 12:00:00\"", 
                StyleBox["\"CDT\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"1987", ",", "10", ",", "22"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Fri 23 Oct 1987 12:00:00\"", 
                StyleBox["\"CDT\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"1987", ",", "10", ",", "23"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Sat 24 Oct 1987 12:00:00\"", 
                StyleBox["\"CDT\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"1987", ",", "10", ",", "24"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Sun 25 Oct 1987 12:00:00\"", 
                StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"1987", ",", "10", ",", "25"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Mon 26 Oct 1987 12:00:00\"", 
                StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"1987", ",", "10", ",", "26"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Tue 27 Oct 1987 12:00:00\"", 
                StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"1987", ",", "10", ",", "27"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Wed 28 Oct 1987 12:00:00\"", 
                StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"1987", ",", "10", ",", "28"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Thu 29 Oct 1987 12:00:00\"", 
                StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"1987", ",", "10", ",", "29"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Fri 30 Oct 1987 12:00:00\"", 
                StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"1987", ",", "10", ",", "30"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Sat 31 Oct 1987 12:00:00\"", 
                StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"1987", ",", "10", ",", "31"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Thu 1 Oct 1987 12:00:00\"", 
                StyleBox["\"CDT\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"1987", ",", "10", ",", "1"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Fri 2 Oct 1987 12:00:00\"", 
                StyleBox["\"CDT\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"1987", ",", "10", ",", "2"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Sat 3 Oct 1987 12:00:00\"", 
                StyleBox["\"CDT\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"1987", ",", "10", ",", "3"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Sun 4 Oct 1987 12:00:00\"", 
                StyleBox["\"CDT\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"1987", ",", "10", ",", "4"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Mon 5 Oct 1987 12:00:00\"", 
                StyleBox["\"CDT\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"1987", ",", "10", ",", "5"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Tue 6 Oct 1987 12:00:00\"", 
                StyleBox["\"CDT\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"1987", ",", "10", ",", "6"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Wed 7 Oct 1987 12:00:00\"", 
                StyleBox["\"CDT\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"1987", ",", "10", ",", "7"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{"776"},
             "OutputSizeLimit`Skeleton",
             DisplayFunction->(FrameBox[
               
               RowBox[{
                "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
               Background -> GrayLevel[0.75], 
               BaseStyle -> {
                "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                 ShowStringCharacters -> False}, BaselinePosition -> Baseline,
                ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
               FrameStyle -> None, RoundingRadius -> 7]& )], ",", 
            TemplateBox[{RowBox[{"\"Mon 14 Dec 2009 12:00:00\"", 
                StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"2009", ",", "12", ",", "14"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Tue 15 Dec 2009 12:00:00\"", 
                StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"2009", ",", "12", ",", "15"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Wed 16 Dec 2009 12:00:00\"", 
                StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"2009", ",", "12", ",", "16"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Thu 17 Dec 2009 12:00:00\"", 
                StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"2009", ",", "12", ",", "17"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Fri 18 Dec 2009 12:00:00\"", 
                StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"2009", ",", "12", ",", "18"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Sat 19 Dec 2009 12:00:00\"", 
                StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"2009", ",", "12", ",", "19"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Sun 20 Dec 2009 12:00:00\"", 
                StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"2009", ",", "12", ",", "20"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Mon 21 Dec 2009 12:00:00\"", 
                StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"2009", ",", "12", ",", "21"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Tue 22 Dec 2009 12:00:00\"", 
                StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"2009", ",", "12", ",", "22"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Wed 23 Dec 2009 12:00:00\"", 
                StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"2009", ",", "12", ",", "23"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Thu 24 Dec 2009 12:00:00\"", 
                StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"2009", ",", "12", ",", "24"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Fri 25 Dec 2009 12:00:00\"", 
                StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"2009", ",", "12", ",", "25"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Sat 26 Dec 2009 12:00:00\"", 
                StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"2009", ",", "12", ",", "26"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Sun 27 Dec 2009 12:00:00\"", 
                StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"2009", ",", "12", ",", "27"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Mon 28 Dec 2009 12:00:00\"", 
                StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"2009", ",", "12", ",", "28"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Tue 29 Dec 2009 12:00:00\"", 
                StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"2009", ",", "12", ",", "29"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Wed 30 Dec 2009 12:00:00\"", 
                StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"2009", ",", "12", ",", "30"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Thu 31 Dec 2009 12:00:00\"", 
                StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"2009", ",", "12", ",", "31"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Tue 1 Dec 2009 12:00:00\"", 
                StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"2009", ",", "12", ",", "1"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False], ",", 
            TemplateBox[{RowBox[{"\"Wed 2 Dec 2009 12:00:00\"", 
                StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"2009", ",", "12", ",", "2"}], "}"}], ",", 
                  RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                  RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                "]"}]},
             "DateObject",
             Editable->False]}], "}"}],
          Short[#, 100]& ],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{109., {5., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{90., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{108., {1., 18.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Composition[OutputSizeLimit`Defer, 
              Function[{OutputSizeLimit`Dump`x$}, 
               Short[OutputSizeLimit`Dump`x$, 100]]], 5, 15167506970941007129,
              5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{104., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{126., {1., 18.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Composition[OutputSizeLimit`Defer, 
              Function[{OutputSizeLimit`Dump`x$}, 
               Short[OutputSizeLimit`Dump`x$, 100]]], 5, 15167506970941007129,
              5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{78., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{93., {1., 18.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Composition[OutputSizeLimit`Defer, 
              Function[{OutputSizeLimit`Dump`x$}, 
               Short[OutputSizeLimit`Dump`x$, 100]]], 5, 15167506970941007129,
              Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{135., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{163., {1., 18.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[5]]], "Output",
 CellChangeTimes->{3.7097707673386593`*^9, 3.7097708441774035`*^9, 
  3.7097728060513935`*^9, 3.709775894587275*^9, 3.7097759743076096`*^9, 
  3.709776015176267*^9, 3.7097772764559064`*^9, 3.7097844235083237`*^9, 
  3.7098172529670773`*^9, 3.7098279031555457`*^9, 3.709906407832163*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "dates", "]"}]], "Input",
 CellChangeTimes->{{3.709769435014352*^9, 3.7097694397843294`*^9}}],

Cell[BoxData["8128"], "Output",
 CellChangeTimes->{3.709769440353445*^9, 3.7097707366773767`*^9, 
  3.7097727997491026`*^9, 3.7097758946362853`*^9, 3.709777276506916*^9, 
  3.7097844236333485`*^9, 3.709817253107106*^9, 3.7098279032185593`*^9, 
  3.7098502705092573`*^9, 3.7099064124291134`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"flightMerRx", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"PlanetData", "[", 
      RowBox[{
       TemplateBox[{"\"Mercury\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Planet\"", ",", "\"Mercury\""}], "]"}],
         "\"Entity[\\\"Planet\\\", \\\"Mercury\\\"]\"","\"planet\""},
        "Entity"], ",", 
       RowBox[{"EntityProperty", "[", 
        RowBox[{
        "\"\<Planet\>\"", ",", "\"\<RetrogradeApparentMotionQuery\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Date\>\"", "\[Rule]", "#"}], "}"}]}], "]"}]}], "]"}], 
     "&"}], "/@", "dates"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.709754591337324*^9, 3.7097545993799725`*^9}, {
  3.7097546583700604`*^9, 3.7097546629447217`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","nodat",
   "\"Unable to download data. Some or all results may be missing.\"",2,11,2,
   15166981765557368854,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7098281832014165`*^9, 3.7098305870642266`*^9}],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","nodat",
   "\"Unable to download data. Some or all results may be missing.\"",2,11,3,
   15166981765557368854,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7098281832014165`*^9, 3.709834013945055*^9}],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","nodat",
   "\"Unable to download data. Some or all results may be missing.\"",2,11,4,
   15166981765557368854,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7098281832014165`*^9, 3.709834015336342*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"EntityValue\\\", \\\"::\
\\\", \\\"nodat\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,11,5,15166981765557368854,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7098281832014165`*^9, 3.709834015533383*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<22 yrs MerRx.mx\>\"", ",", "flightMerRx"}], "]"}]], "Input",
 CellChangeTimes->{{3.709754669031969*^9, 3.7097547123238387`*^9}, {
   3.709777084995473*^9, 3.709777087568*^9}, {3.709813989185218*^9, 
   3.709813989357252*^9}, 3.7098484940211463`*^9}],

Cell[BoxData["\<\"22 yrs MerRx.mx\"\>"], "Output",
 CellChangeTimes->{3.7098484946192713`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"flightMerRx", "=", 
   RowBox[{"Import", "[", "\"\<22 yrs MerRx.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7098494417930045`*^9, 3.7098494624652753`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "flightMerRx", "]"}]], "Input",
 CellChangeTimes->{{3.7098502820036325`*^9, 3.7098502884189625`*^9}}],

Cell[BoxData["8128"], "Output",
 CellChangeTimes->{3.709850288917143*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Delete", "[", 
       RowBox[{"dates", ",", "pos"}], "]"}], ",", 
      RowBox[{"Delete", "[", 
       RowBox[{
        RowBox[{"years0", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "pos"}], "]"}]}], 
     "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.709776899338133*^9, 3.7097769383551254`*^9}, 
   3.70977697737212*^9, {3.7097811775118403`*^9, 3.70978118277592*^9}, {
   3.7098433344069147`*^9, 3.709843362165651*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxU3Ak0ld3bP3BDOKGUMqQkmU5pUIRKOA2mkgZESpLQpNnUYAwNCkUqJUPm
SjI2EBVCI49IkzgyRLNI6f917fdd6//2e9b6rc86zjn3nq6993Xvcys771y1
WUhAQKBISUBg6P/xLyQmoZU3ffe9wQP6R4zg/HvwsdsyCRHj9w+5rRNeHX59
vev8A0OWlUls5V2rHftHY4L/kE2M4PeqY/5E7wscsucW+LmCZsXtep8hp5we
+vs/JRe3nNk85Pq7Q3/vuXDkxPhtQxZth7mp51fmxuwcsq50Uisvy62Ie3XP
viG7GsCZYhXV85ZuHXKMKzyYYjouYNa5IZdHwOa/7OVfcQ4PufcW/Piy0ASh
o3uGrM6H37V9q03v2jJkW6nkVt7yoNnnJQfp80PmwoVHX2n5DjtE5d8EH8op
/tfb5kHlD4cHuFlHJfleVP5C+KnCw4KXNlRekw9wb4am5HFpKq+n5JVW3tni
WuGXLzyp/LpwglxWsbgpvb/eCT5QoixyrpS+v/IE3JU6faV4MdVnXz4cO9z+
mkUx/T23GZYqv/4uU5A+z04ipZX3SsZZtVolbMhhc2CNlZ+ef4ym9ircAOuM
l97xzm3vkNuPwur3l7zRUg4esnwufNdihtvPhoAhm72FrWNiRAIfUPt6c1Jb
eXJvZHfnR/sOOW02PHt5lPLoOvr8hnVw6vVFB0Tqw4fMCYV3WmiPq5Gh9+vf
gHVq9ab35tHfuzfBfiUuxtEHdg85ViQN31dnZCzvS+1TOROeaCIvmunjR+W3
hw0Xcnsc71yn8gfDH3a8VJ1mf5HKfw1+4a/ArdKg+glrgKVV7y6aFUvlKRRK
b+VVPwns/VeUReWfBkdqnDm3+PF5Kv8aWKDK/Ns8kaNU/gB4/gNRw036VF7v
TLhPRch36n6q77T/4KCT67euYf2/4R9sm1Di7fGR2oszNaOVt1j6s+b59XT9
+tZwlWTmRiMxet39MLx8//a6tGB6f2waHKni1avPoe+rfAEfTW1RHT/yOJX/
D8wJcTnu/oRe52pktvIcdw8anq2l99uthMvyR45R6aHXww7AjSrJQoOz6fsK
r8A72q0sZ+8NofI/hYPK064V/0eW/w2PfmbX6DmDPs9MNauV1+LY7J95K47K
vxxW2syZrz1An5fmDW/LU70oujaUyp8It76utuieQf2f8xh+ICkaYvTvGJX/
F+wlNGWmFOtv7spXW3k24ofKI3Xp72OXwiqzo3fs8aL2qNwPn7kzpe2oKr2/
Lx6uGFf/9UhrNJW/Cr6bZPpn8418Kv8PeG3Z6NtFtvep/BOvtfKOvP2UuUDl
DJXfDLbPuH7DYBTFg/Y9cLDxnpBNBaz8F+GMSQefKryg9jKrgL+ZnlT9mBdE
5f8KK7W9WalkT04bfx39ve31rNuXaXw3LIEzBPpTgxqpvTi7YK9M1U/3j8ZQ
+c/DD4RsbReOiqXyP4CtpYJsb86l74/tgUu/7tFwP5NL5ZfPbuXNatz95ZXW
bSr/QlhlklhvjFYilX8HPGztreRXO6l+7M7CDtPVNqafpf4bVgofd311SUWd
6ruwC1aSnhE3XZH6b7vMjVbepsPt5ty/1N7yxrDGr0urHe5dovJvhZ/HFE2Z
dJLGs/cZ+FSu4/w1a25Q+YvhmU8O11UH11D52+EEBU6YzuNyKv+YnFbe98ZZ
H+8dpfGmvwA+tdRIrKP7ApXfDfbfdP7RyMXUnrGRsHFj+4NDE05T+W/Dbx+t
sD4bEUHl58N12n9ebvpK7ccddbOVF229NdRMn+rPbh5ssFtfTdiRHOYC9xkb
V89Wps8vPAnnH43V3xdeSuUvhGNarcbVLsmk8rfAGy0UHFQF0qj8I3LRn2Uq
nIY50PV468FtWRPnC+1j/X8jPFbP/OXPMzQ/NByHZ+z7pfgtkczJh+2lfP+K
GaRS+d/Dn9ZqjczfQ/3BXTwP/XnRWQ/b01SeWB3Ya67xvUJxao9KR/jnzs5L
uk70el8YHBQ+t8l+DsV37k1449Q3Srdl6Xrs3sCuSWc8ymbR54eJ5aM+cspU
NA2iqPyzYO9t35Xa5tN4bneAP3ULTTF0peuTD4HvdQWO2JgbSeXPhmOax690
ekH2fgX7XHnA1Rmg+Jo2rADxtzD95Lsqup6GGfCce6vne7yheMuxh4f1TOPc
fUz9VT8InnR5pcMDtQIq/1VYKmpM2rMXV6n8L2HHLxx7qxHUfpWChajfp39v
6mmy+U8TDv5rO35RLdUv1xae4X7wyPtuih92/rDj95dB0nn0elgGbLX1hmCY
HbmwDubsqHuhtZ8+r30QflfkM1g1ntY38lOKWnlx/o1anVL0utlq+F1pVv1/
62k8eR+C5dsvfI7l0PelpcIfg7xqDNLo7xuew/VeTasftrD2/wNv3f77sLQt
zXf66rdaeZJTy6bPGU/lc18B/1FaZS1gSfUX6wub3NB2DjKh+FGZDDvskB2U
CTpB5X8CR2q1t3/0puvh9sN6FXnmI6bT9dup3G7ldUuOXOUy5ySV3xJOHeUu
HpDC4r8XLDe8SPnIVGq/9gT4sZp+yrw8Nv/XwAI+WSfX8Q9S+Xvhm69/73n4
mvqf96Q7+Pu78zL3eLDyW8DPwl2P7dZl7b8PPrqp/NQSC28qfzw8dmeTynwJ
Wr/pP4Jbk+yyztnS+s79O8xZfuNP4Upav8Uq3sV6c8O/i6bJrP+bwg7KW05t
uLCLyr8bNvVds+mgkQuVPw7OfPg8V16A1o925XD0IfcEhZ/bqfxf4BqjmY5R
12m9VqhQ3Mozy3X5ICFKbl8Mn59my09X30Hl3wnbrv1Y38Jh659zcPeuC9aq
PBb/78PDFhk/nTSZrietG/6xZOK/YXNpvdIgV4L4kOAvMMeBzf8L4TnXRo4W
D2Ptvx2u3fVjTl4cvd89Br4pbnRkTuIpKv+9kv+NXxSfKzvhU9znmp9bab7Q
HXMP8Wxq/IYn62n95roAdlGWsK9c6DrkGLd7/2f9XB4JL5t5pseilvpP7204
SUo4O0yb3q/eBvv3PF4htdt5yLajSrEevHM4INqVHDIPTpfQrFgmvHHI+S6w
08PhU3xiaL3WdhI2dhb0+q1C3y9bBJf8J/Z+QYDbkE1a4M3xllqNbL3pOaKs
lfeoeOm0aZFU/hQ9eIZHXOv7AHL9Rnhypa++6hWqb9ETcD3HVVG7muZj3XzY
IvaX4chP1D9c38NHt9+pkZ5N9R8jfr+VZ/RC8Z3qfHK5DtzzaL/SbGuq/15H
+Pkt7ZXT9tB8on4U1s9df2HeReovtjfhlot/nJ600PtD3sBpdQ+GFVhSf84X
e4D1fGWaYYoPladtFhzletjgjQf1X9l1sFdVnYa8DCt/CNx20H9d4Akqn2c2
rNEh053YS/0t5RUc3eG6UCyQ+lv9sIeYD3SiXVxD11P5Z8IxEUoeD9OpPXTt
4dfXYt0l8qj/ugbBb57VdRqfpOuLuTpk6cne62fQ95W/hKcJb667tJDWB72C
5RgPN7lCwl2s/NPgbX7j5FQ+UnltbWGvjWJFsbeofCH+8OXIzZKTjlH75mfA
b132q/CHUfna6uC6sD/259Oo/mT/wX/f5GheEqf3m0ypaOVtuJ59YJYixSvP
1XDg1W3bmwIoXqUcgveqrl8nFkvxpj4Vnuyv8/jFTlq/ir6AuSI3cko1qLy6
f+CbAlY3MkJpv+aqXon29kysbatj+78V8OUs+x1yMhRfy33h5Rsj326YSuOr
Nxme5jdXLn8/9Qf1p7BTwgljfX9bKn8/XH82+j/XNDMqv8oj7D9iP99Kcnai
8lvCP4ZPmOU+lvpnmxes+U0qSLaS+qdsInzV943orljav5nUwNUT78pKvaX2
9eyFdS4m908wovenTKpq5anGakjf/0T1W28BB1wIqZqeuYnKvx9eaadRxYt3
pPLHw72B3xKVjlP9uz6C9yhMvKfzYxWV/zs8NqRVNX0+9a9yxepWnuxZcWVD
Lv19rymcZ3FmUrvMOir/HrjFs9ngoC99vm0cvPT2Em/fSnMqf/mQRdJs/021
ofJ/gfnFM01mnqLra1OowXh+kSkpfHINlX8J/K7x+Wfz+3ZU/p2wc2SWzC9t
6s+e5+Af6TL/XFQofqfch9WOlMR5FlL/ru+G2/P0PEaIUnwRlX+M+fPE6zPD
Zam9dRfC6/Si7+tvpfZ23Q7PPhqnqpxB3xcTA5ukDJvj8mc1lf8eHKU9Z9EH
C4qHvZ2wyuv0yknnKZ6pyzzB+kcmImtVvzuV3wi+NNunxyCM6itkC/xSxjwz
S4T6d/5puPh63vK3yqz8d+G9mREOSjrWVP52ODnXSL72L7WnifRTrM9CE5S2
GVJ5PQ1ghaLZy6Z40eeluMLXjrg5+v1YSeWPGHp9zY59DytpPhO9DU930bQq
a6fP0+XDrpx9FcKlrP9LPWvlCS317a+VZf1/Luz26GmCyW02/jfBb/uve3ke
pfL1hsOlVU5BbvdZ/qMQXhHxUf6BJYt/H+Cm5dar9xnT+AiRfI75RbHELXcO
XU++Ljw6b2zHpHSW/3GCQ8fKrElRo/4sexz+6qn3faIlrRdM8mCxftN40Q9U
/57vYIO2C4aN8Wz8D3/Ryuv6tiLy0RuKT/Xa8N/d7SXqtTR/ijrCW87OL89Z
RdevGwaPWrl/d2Yn7bdcc+D6D4KvPe5QfIh5Dd/5a//S7msylV+0tpVn+S/8
dxGH1q+9WrBqSuOUrwk0XtUd4BMHNnzOimflPwJfD+mqdf1G4yfkOvyuIK74
Uw+1d34jXLxpq9PnWIpPbcJ1rbx/tjMf7t1E6yHZGbCTwfKHR1MpHpvYwVvz
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
BW6QqvHLCKP1tMkzeH/Xrscx/VT/nr/hmvstrs3L2PkvVUM+r/K1xXPBWsov
1C+Hh6vbHApgv8cS9YG/T2lbr7Oe+qNuEvzRdnDB5QT6PtfHsMpJud/9NdQ+
Mb/gE1ffuE/XZflPZSM+r6Qu4MbnpbQ+6F0Kp42OOaCwkcavuifscOJbyrgQ
Kp/tZbg3tKpy2XiKnyFV8Kzm31GvJWn/lf8DthuYMxgiw86/TjRGvBSrmrHO
mrW/OWzqUufwZh/FN5O9sKVF9+DzcJb/uAh3S8tlfUug8ZlSAXMaVm1zX8PO
v32F29/XtS8zos8TncDj8ySdXCRs77PzvybwCBndW1WSbP+3C5bPGLVnyybK
R8Sch7PM7SxW+tH1lj+AixV8Dk1QYudfe+D6YpN/zxZR/1UftxD1mXkgOfoR
jR/bRfDbqICiOBHW/jvggkv1xZMOkfPPwmv0JnL0VFn5S+F7nwRvitXQfCr7
CXYfyAif84vitYnsIj7v+cLSLsnpLP9tDG/V/U+sop3t/7fCpXNF+9td6fX6
M/C9Z2HzTCNZ+UvgnaeS8hadYudfO2BH00Waho9pPLmOWcznbZ5fqLv3H513
ilkAS+9aczzwCxv/brCtnlLHfZYv6Y2EMxXrMrxXs/5/BzaYO29L5kTqf7Zt
8MSHC4UdjGg9FTJqCZ+33XnePaf7ND/mz4Ob2+Ptvtiy+OcCf9Sc09Aqz9r/
FHzxXNAyG0kW/4rgimIzicERrP1b4Nkxggb+Z6i+UkaY8HnRk3L3vXBh+S89
2Cr59kZvlj8QdYaXvzCt2sPWF7on4Jvxyj+LhFn/z4fXjH9VU/CF+nfMe5P/
s18vFzdF+7Wqq917Q/XdqwNfFF01rWQ/zVfqG2CXxnCx1KPs/O9RuOKdDl/G
kJ3/vQnPEfqy99ddas/8N3BTiyhn9zkqX5uYGeaHFqt1otOpv8vOhp9eNt/b
cJfFv3Xw9S/i+I/2r54hcArXrC4vmd3/yYbXaWobz2bnD+tfwTVbNi/QKmTn
n0XMMV5/OL7y6aH61p0Jf3kw/+b1YfR+V3vYRSPOqiOOxb8gePRxn8GsUdS+
5VfhqPpXP36MoOvrfQkrf92cWy7H8l9CFliPS/LHZW+m9ZftNLh6+lSRw3G0
/guxhZ1TNcr+E2f5f3/Y7N9Xj+/H2PnvDDiy/3nf8RG0H5D9Dz7c5j7m3jQa
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
/j5Y3thRS7CTPf/5ErzF8tRg0wGW/6uET7Zdu6UzksX/b7CB0vEDFuz5IH0T
0vi8aPHo4tcz2fOvTeGLJi3rjV9Q+ex2w3Ifd7iGnqB8WNgF+MWYCQtKn7Pn
Pz2EbXcIB4yWY7//+Jw2dH8wp2VuNHv+jUI6+vsJu/JnM+l6zRbDaV/dlmrE
0Pzs7QH/Ev0vZrIv3R9Ji4Xl2t8ZzvtD9ddQNvT3S9TOaRiw3/90D3nWF4FH
I2i86stlID69Pr5Jvovlf3mwku6ft8OsaDzFboNLxD9UfF1Pr1dGw1aTTJeU
LKXr6yuBPQ8OC70lxZ5/0wkv73I4JGrH8t9jM9F/ZKYdGHxI66EwQ1giONIz
y5iup9Ad3vS14Uq0C81n7VFwtILt6JBK6q/yd+Gm+J5X8T10HsPsIzzjhLRK
/Q1aP3iPzsL6TLreONGDPf98Pvy47XaV4gDtFxs2w1mDgocWj6P65UTAC7RK
w58Ls+f/3ILvFq+etnGAxot7KyyR1rN+pjrVZ+zIq3zesEzFgtUDtJ6o1Ifv
nkr4KJzGzj87w9L6/albhdj933A4jxPyfjJ7vqFdAWy/027zxGe03whrhtv7
1321TKHXCyWuYT3VfW+t+QNaD7fPgSc/Fxt4+IPqR94JjugKdazeytY/x+B3
q94cWKzP8r+5cJW/ct3bnXQ+Je0tHPltbtdsXVqvN3Cu83m1YmYFBex8B0f7
+v+e96PxpL8ePu56Rtn0Hzv/HQp3fZY5ucGd+k/sDdiy+L8gc7Z/rmyCm3ud
tNSOUX/oE8nG/OrXvG/4Mvb8by1416/hG498pnyR3VrYPDh3QYkhO/8dDF/t
TFiRGMjm/2twznyDA7Xm7P5/Azz1m71e7GRan8sL38B+Z86TGUfD2f5PEz6y
KCrqZBl7/ofNkO2jeG5SbP3rB7tN2XUhw539/jUDjooOfRScxM6/1cFW0xZ+
D4pj578HYfG+BVozrOn7U7g5WH8MnxbxfTJdf/0qWKL7cU/kGLb+PQSvcHbe
P4I9b0Q3FZ4kONzMWIjlf57D0+3/M+IY0vwaMwCn7lcXW8vyT+VqN/k8XVu7
2nYDyuf0WsE7lWs59lPY8y984XbLOZlu7PfttsnwKHMZryPs9xQhT+B9E7Vc
Mp6y33/3wUlVX6r4kuz89+RcPu/jBr079yJZ/sMSdgmKn72zlr7PxAs+d22j
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
/9bD+1ce+CuiR/Mf+CpbOFe0vt5PaGH3j4DZcI3TIjnDLbT+yRK+1hzyII3y
N3B94D/ZzXtD6ij+mwIn7Pc4k6tI1/svvPELr+aV/TTfeWZVCydU94vonTh2
/evWwt/TTCbkzmTzu4SOwgZPntW0OTFrJMFew02TVf6w/IiO1bD7700Lt0ux
1yN/w/Pt1XRXr2AuVnrRwjm4PzLtbyVbb9y3BjadKV6c8IbNT1Q6BIdsj6z8
UseOzzIBHvXLbMnPKhrvqII3/XQ+HCjEynfWICyvHyKnH8Lab+60ly0cE8uE
UEWaTythCj+bfMGjQZfi3d7wiWtzFifspHz/V2E3gY1Wb/jY9yVWwJmjV4uG
nKb9Hvvg9K6VCjH3Kd+fQjXq25u7Dob/6e+tgh8OdY5Yxkf5vvbDcp8S53uu
pXjXFXj5JK1R1yaz9jawHN7xTLl5zwDrL2X3wpJPuiSedNF+b3KvWjhFu7lx
R0VovftKWOVZQ7K9JMX79sFZJzT6Iym+4X0ZPuHpGxlF862TSuFG1YMVF1so
33U3/Fv6NmfnJNb/EJataeHEDM+7qTaa5ruuqPk33ywuIUWSfb/Tbni7pUXw
PrqfRsfAke09NWkyzKVP4ceys31yT7PjH+iExbt1l/W/Y/VPWaYW/Rt9Rd5l
lD/cSh+eunjSe+5C2u/RDXaddVmv8x77vuxo+G2SmOHsjxTvLIJVXNIGzSZS
vosOeHl7X0pWA6uPRpJ1LZzydoEfC6NYeffmwMfSvF76Uz60pJ1wSsk18+r/
xDvPwz1abqceFbD6I/wI7jzNe7n9ATs/Wu1wROjKksfH2f3eacJrPK+8O1H5
XJTy3S6BS3Wt9DY0sfGtUif4V+saqSPz2H55A2dhfZ03UxSs2POVcgHcUNMT
OrKY4n1f4KSVFQMX3tB+n+PqWzjqI6uvSsrRfPfF8AKJoY28Rux6t26HI+JX
3P/UZcKOPwy+vFnD60415fvMhfk/JByNX0DzvZvhR0LNfkP6FO8Y09DCWaJj
vbeD5rPXa8GWT4xUuEcp37E9vCq5c7eEH+U7CIHFAn03nalm9d/pPuz2wdnj
Me3HGd0EZy+2+XSgnPI9j3zTwll8ZXefXSbNd1aHbQ9Mf9AuyNpn5a1w4WHz
lrq72ez4T8H8262/7HagfK8Z8OFL+w3f/mblL/sDXP03stGL5ku1Cr9t4ez8
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
D8gbrjJ6TPHfKDhjDt/lw7tpvl8RvG51wfwLjex8a32DCwaPNvHYsf6dk8Q4
Lqf71IW8TAva720ZnODkO2w3geI/LnB1zbOUPAea73cONq1x37LWhJ0P5Yfw
+/rmI6N0ab+3NjhVMCNi3G1WngLHi3M5xlmfDw/Q/uLZujA9H1O+3x3w/t35
pfFX2Xig1Fm4U3D2+LpcynedD/8YmK+cT8+v3lx44QEd4+KjlO9CbDyXox0y
vyAwjOJf2vApx8MP7iuz+V/C2+Etc/oX3NVl8UitUHh5rMbl0jtsfptTDnxY
cszVEi/2evRnuLLJW1z1CuU7Hj2By+kbvWSe0Wb2+QOacFTtrUmqbRT/t4On
3pqWXfmBlW+rYJj3TPxHP9r/MDALvrUt4+M52s8+uxG2MluVLf6b8t2KTuRy
YvduWJ1D+49JqcOWU45ZTvzEnreNbOG17Xn7VktT/CsIlsz03z1jFMU/7sGX
G7xH5W9g17f+PVx9YPvoKZRPUlhYAufz0H4RLX3K97AANshXlL8UyOqT0yY4
6ni0a5cmXf8A+Oyby/uNQ9j3l96BY37uS/ASov0O38BFc7qOe9N8bWVBSdxv
wwofDvKw/o3VXHhbXcairRY039Uatk02uO1Kf5/tD09ocPOSnkPr3W/BcnMu
tyrrsP6JVD2cWpanfdiB4l98Urg+orIbh2j9ifdsWFfzrOrjcHb/S7KEDWwW
Z/r9ZuWj3gf21L/+J5jG44VTYJPZ0/Zd+sKeP7VqYZFdOTtTjWm+619YwfXO
OfsVFP+fKY36NPzi0jhXyve7Fm74tnN43maKfxyBI/c8VXO4Tvk+kuC7MW96
k06y9t2qGhY4/TjK/TQ73sDf8Ho72wu5oaz9zVaSQX+k5+bQbkc6/jVwylHd
zLMRNN/zEFx148C+4Xa2f5xRAnz4x1CanSMbH/eugr/Yhkc25LH1G0mDcFft
n/4kZ5YvpH7aJLQn/k/0lxxl4xHCpvD31uGw1UXseLW84ZZpMveav1H85yqc
rSZg1TSV1b/oCniS1Nw8MyU2vlnaB//6LcCr84PF5wfkJ3M5998umiZXxfoX
yqtg4U0z7BbcZM9rVvv/2XfzQml/9nsD4+DU6P68Q1+esuMvg2Piwv0v9Rew
4/8JT+RbrfCC8rlLTZFFe5+0VnrSK8r3bQQrXD3qz2PC4lvee+CV+jai8jsp
/nkJ3pS9u/PIQsp3Uwy/Dn0+7/dI1v4Ld8Elox6d3h3L6rvWpCloP+dqKk3y
ZvFbJwM4WFElaOwN9nui3eGAlZH899/RfncX4LHRleHySizeN/AYtghX1R/b
ytZTKH+HT16vWy3xk5UvKyk5lH+XEUa+tP9MoB78skGpz5DWL2fvgu9tuio9
lMbqb2skXHdpV3aiLK13KISPBEj7fnhM7f9XeO2rMx/HUD5X74nyKD9Bh4OP
N7Hzn7QUPr3hXlDh2nJ2/M5wusqy7+qSRez4z8Fh12p28Oxk5UPrAbx3/y2v
qu0v2PG3wm4LbfWWiLD4ZrS4AtqLMaX5erMp34kOLF0+wcdbjeL/jvC+p7NX
HL3N7vfK4fC9Zu9nrqo03zUPtqm1lrJRovUuLXDqo46g07Npv+OxU3F+6h/7
+MdS+78I3tnuFbVpL43/OsCPpCZb7n/Czq/RGVh/69avt5+x9tg7G1bUat4c
t/ohO/5PcG1abUfDeNZ+14+ahvp6dEPEbxOWH0hYE154cayN7hwa/9gGX69/
v+1DPeV7Og2rTFt54Jcf1f9MeL2iwC1z2t+i9CP87cR0iafj2fjVgIgilxMX
mdCxaDz7fGU1OH5vzx3Ve6y9stoCJ6SHmfzOZ9czMBCe57RodMlxGv+4C6/u
dL6RrUDz/d/BCp777Y8sovn+I6ajvqu//36ch41fGM2HeU7LCyrPovE/G9ii
82oEP43PJ52Ac7buOnLwGu33mQaPMZ9f2+vLXhd+Ay9xqLs+8xS7X2sJKKF9
P9WlxFnH7DQH1hax0oh9SPv9WsHypbs3v9Kn8Q+/f7Y0CZJ8zMbLBlLhhY5i
sZMnsfZR+TXMNZOc4ujP4k9WvDO4nPCUKUI65XT9VWC7jmVnVGh8J3s93DVk
yP8+lfUPWo/BFO+ifCfJsPA1ueVHddjxGNXAnbk5Gu6HWfny/gNfGXjUss6H
9ntVVuZy6gWbP5j2svJZb6H8f88rdP87AsfrNbwR02X3F60b8LgNO6Rik9l8
QKeX8Lfm9pxbbex5OXoIXn1ya2R5KT3/Kc7kchbfNHLcS/NpNUzhouKIkhY+
9nscvWFT9Q+NoRns/hx5FeZMNku+uY/9nuIK+PTet6EO0ux89fXBXu6ed+cr
s3ikksIsLmdjisWVwTI2H8tyFZwlMX55SSc9/+6Hy9cUrHDTovkfcXB1sIoH
vxY9/5bBfUO8wmMmsPiaRA98ICJuztWdNN9pigqe7z33fOZco/3+jOD8+Lf6
03Mp38ce+JbXpJl+9ez76y7BP/uO1d0up+Mvgceqtju6rqf5Tl3wsJBBxh17
Wu89aTb6q50NxhdEab93A/i/45/u8KhZ/XPlhVm8su8CrBvydleMHSsvSk/g
NZkh91dspvne3+GOhtkPt9YyB0ipcjnnOzsLZY/Q868e3Cjju1PgNsX/d8HT
7lSLP69k9U8iCm4L4g94/ZhdD8NCOD05OtZEn+LfX+HioB2JM7/TfncT56D/
8O7J8Cza/6duKeyca8MZT/ErIRe4WHJtypXZlO/lHKwwYXhLujYd/wN4cslu
/KP5jq0w5ael+X7ic//n+blPB9aXuFi1J4jyHeyAsxMGVow5Suu9w2HtKyt1
djhQ/D8PHm/SMCZ1NcX/WuDSJRb3aoKYuWPn4fk9YNd57jCbryahDTstLFoo
bEXxPwdYY6/bavVCWu96BjZzSecNtGLXMzEbFrA4KXx9DGuf6z7BlpwJ04WW
0nr30fNRv3l6w0fX0H5fmnC4b7LDnleU730b/G5xtKyKCh3/abh4ZP8dNz/2
/uJM2GeeQuHn7ZTv/CM8MruuqmQ8u18riS7A/VntvIPjSfZ7LNXgqCexWyuC
WHkM2AKvPJbjf6mc1rsHwq4rTPcIUb5C7l14f85TWYNYmu/4Hr6l657nXUX5
vkcs5HLcI2ZwjJfTfO/5sKBE+8j4xex5OtEGTsmNO60rS/HvE7DaE4UTIo9Y
eRW6AydaWCdv3k35Xt7AU/f2vXL9Rc//Ampo3z22cVUjaL73HPhSe4vlm6OU
78IKnja2NMOpgfKd+sG+PcNbEr1Z/VW69c9T95137qF8n69hI/VVq8MoHhLA
q472OnXuo6xGmu+vAu/+NIZ3/QZWXrnrYR+eGkU/a/Y8JOED/3Fsq74+TPv9
JcOnZh04MG0h+3vPmn+ft+iiUusJynf/B74UsHvTigWsP1KnrIHnn2OvE/5y
2PUSWgvbKDiH2sbQfN8j8B//ostdVfT8ewP+qezbNzeU8j2/hHmMBeZFLGTt
VfEQvO2YQueZBlrvPV2Ty/FPsVxTvJO130pr4IsNYh07PlC+l4Owa/dDTkA6
G98MuA7XCLc5B/Sz/mpWJbxp6pSZib9YfecOwLFHVZRvtdB+d9O0cH50RV9f
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
nsuR0BghfutOITv+ZfCaA/s1HafT8bvA1+bKqI8boPnP52G+aR9X21P7ZfUQ
jgyqyfObztrHwDZ4xIp+jZEzKP47PpLLWdX6fFTNcvZ81KoLh01q48yaw54n
pZzgmGVNDqkitN/lWfhbsZ/VPVl2Przz4dielybNnux8J3FhlW/eFu+vUPkX
i0J/fYv2E6toWv+xGH7rpPpohhnLH6O1HZ60aInQrSBWH5xC4ZiWjsw06wfs
+HNg5bF97x4n0/F/huNjVIp8NlP+l9HR+D2to00UhVh9UNaCDwb5uEispv0e
7eDOBo+9Bqup/AfD0hXCZz/QepLsLHjHyrsNyRMo/t0I/y6z5omj5xWpkRe4
HB9VvYIQJVZ+jdThccXmDg+VaL9LW1h9y+m9XwRp/UMQHN/UOUv/Jbse9ffg
Wzte33nRQNf/A3y9YqNWsTDLR6QlfBH9IZOyFq1k9nlOC+Av1V8tsw5S/pNN
sEP1UZk+fcp3HAB/5OeNMd/B8tkM3IG1Lt/bYPmU1Q/lt3D5yjX7XvWy62sl
GMPldJfNdn1Zyc534FxYREZwTJgb7fdqDVN+f/b5rf6w38XpI3/rsfMhdRte
K9K0PMad7n/18IhNJ4Xf0HiMN98lLmdfxLDSrhKK/86GD6nbRP0xZuev3hKW
iXB5zhtD+S984T+jF8QaR7HzoZVy6d/8Zen6MCfW/3KqhWOLTdeuekf1/y/8
bUfc6KzprLyVzoxFe1EsNKR7lB3vwFrYvYMbu+Eme15TPgqPmKc5ccCD5v8n
wUoWzQ7Fuux8BlbDntbLH3yhfIfZv+EzMdlLf2rT/G+ly1xOAP/ZHar6FP83
h/frdo+7SM8vRofg09+b1/puZvcf7wT4O0+1A+9iyn9VBds8OLIk6SWt/xmE
VZY739/azj5fWDEO/avliiW+X1l90TKFD+wu+bpuNPv9Tt6w5SS3n1a03330
VThv0hWLPbNYe1xaAa/qLP687Qbrbw30wR95dq3psaT1Hwrx6D/+rRw1UZDV
V6tV8LQgiScp3dT/2Q+HXtge5/uQ9juNg4dFdE0H7Vh71FoG7w9Ie3KWQ/Pf
e2CpqbJPZ2lS/pMpV7gc65N3s/kOsf6CtxFsxVNRM6xK138PPPGmWHDJf/b7
vgQfvPRTUmsJ7fdRArtVLwp8VUbrf7rgTy/8Nnz/zuw06Sr6//vfS4ql0frv
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
Acf7eBcZXGTjK8FjsJ1AHcfrFM1/3IETOCvdV/ym/Y7fwSpbgup9I1n/ETvq
HfoPh1jFbVUU/1WGD372jykxp/5vC7xk6sKkhIns9ykdhQuMp7fwLaT9jlPh
hduM99+Pofm/t7CshY/+qavsfskdhi1Wxf2eM5+1h3al2jbOSPh9Wd9hdryS
prDYTrmpG69T/PswHNJjXa5D+SU+N+B2c6lV3QN0//8HV00UiTTdQfH/Qbgy
8yp3rys7HkHFOjzvZO1uZMhR+zeBtZvP88e1s/7K0Q+uFHiyqNCS+v9rcNJo
1aqPf6j+x2v4v7yj+k9FWfvr74e/PU/iPxdIxz+zHv1Dwo5qH0ea/zSGhd39
VDzofTfUG3b5PTKt6STrb3MTYKGEdTOd4yj+Wwan852dNriLxYMk++DR3mH5
WlTvwUi+AeP1c/cH/QvY8fmsgROf5wtElVP9dw/4QKG7t7owzf9dafi3PizN
degZmy8WfAGv+c7j9bKK6r/3wMb7PrfOkWfH5zj1PcZn5SLfV1dR/f9VcNeE
2c0C3uz5VHoANju8cWgCxV/74+DeRWd3CXyh8U8JPO7VsOvJB2y8afEd/niV
V1+I1q+GSjeiv9zFY32N4mm5K+DYm9EOZS9Y/9XuAkslbq/fvILWv1yAu77H
x/C+Zn/f6Ck8cGLZroqnVP+lC/74beTkqit0/FOa2jgXQqSrqimfUUIfnjYs
lrOgmrUXwz3wxcHr/+VG0X5f0fDgsqrE2gesvSYXwM2vNxx4SPsf1LTD89pN
jey9Kf4z6QP67xtn1B2HWXvU1oM76u+Wu/2i+I8DLN1ZItVJ+3/EnIY3XH13
wiKDHW/JI/iKtNTTalo/0fcZ3ua8tGKdCMW/RD/ifXBLvPn6Gsp/XQx/uCgg
MqJE8V87WN9pxg2bVKp/Egkbn69f9kGT8j9z4QetdZ42Smx8LNEC97Rc95Dt
o+Mf19zGWSzGI+4rwfoPr4Ww2Y9PNz4qUvzHFo6XW6eRTvU0a042/6u3tnWO
JY1X+LPh1zcbV/VRfor2R1h1YfCpGTvp/U/4Uxun823w8+d72P0UowmPJFzq
MBWi+M8O+Hh73S8ZWp/SFwpPvrDkuUk2O/+KmXDG3Tre7bGU/9gI9wzzZ/bs
oPXPAi34e5tTn7o60Ph/AXyKb8uij4MU/7GESwP/+P9WZ+1BIhhO17kcIbqQ
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
rl+0lI23+FfAcS1bomNl2d/TdoH/znkiP3UlHX+sIru/7yWIs/FGzBO47kPu
mTPzKf+1E5Yczmw8dYP9vT6J2Wh/3Zf+HLvN7l9FDuxZ5Pv0zlL2/c2c4XcO
6rM9VdjzIPgcfLz8/AHnAMr/fAwPbfh7cOZT9nxu+wKP2nxqc+YpZglxJYwH
lFvcTGn9quFSuMXA+u/B0+x+8nKEZz719RYJYfkUyWfg4kXBK/i30vHnwat3
vvS3LKb2z4Ul+ne9e9hL+X9ic3B+hgoL4q9T/tsS+HTKK6ELRjT/tRve6jNv
Yc4IHX8UvDNki8m0kzT/8QD2XJ1UxRdP6z9a4Z6BPJPTM9nfMxs/F9d/tIJF
IpfyX3VgB+270ya0Ufx3JzzVTENQpobi/+FwyeMVVi4/Kf8xB75lslhQSIr6
/2Y4K2JPZnogxX9FlHH/3Nywxzmf9n/Ugt156oKSDlP+rzU87WKchugumv8L
g1M39/lI91H8JwtWD44WLsim+F8TXKam5iK5gJ3fGMF56K9ihmYfHE/1X9Rh
mn9hx9tnBQ+9TTrW+4z9PcUQWL0zfXvLZ+r/M+BH9ZXj3lG9/OAG+LuFfOBA
D9U/H6PC5fhqB91MmUP9nyr8sPPJdXcXNv6U2AY/H90zmPyX3X+GQbDxVfG7
D/5X/ycNLtS+cUuX8m+Ta+G6M7YX55yl+N/o+VzO0zqnC7dM2P3DrwLrrdUM
PazC8oW0zeEj9bEP5m5mn9sHwDndka0C52j90y3Yus5kmwat5yuphmcO9ppP
1GPPm74R+PZNl7ozq2j901xVLuf9YLjTrlI2vjTbDFdPL/q6Nol9/+Aj8HwF
QbkFu6j9p8BRXRWKClQPoq0S5vu0eiCkjeK/QzDvUGTbuAsU/5+thvc3y1Fe
Gtns+nlthONPW+7aHcnu5+SDcP5DXrfNx9j4uuY6/Eve9sN3Dh1/BRzyQW6z
CC/FPwfgxbN+8t+keon2sxZwOVYDxvw19ex8xqyH16WNdf/5v/o3PnDf2OF0
416WD9WXCDc1/vuHnn+v4BnsH/Z9zH7DjxqEXGOz2d8Pnq7O5chkRB+uEmXt
J3stLH4v7+94Wv/b5gnvvbdb8+tell8lEQ9/0trZFevK9jMyfAkruJ/ZvvMJ
s9cveJa+9vF4D7beNXmaBpdz3qXqoIIQ+7zGCOZh/7Dfz+8OT622z23Yyqx9
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
4Dy7X5Rmr0d/stdlR9Mtqv+wEc7qzlWUpPU9oQdhz60hny/T+t/c67Apr8eY
rGGa/3gDTwyKObHuBl3/AfjD9LeHil9Q/vOsDTi/ns82GFD9Np/1cJWpiLLe
fVr/4gOHBzjbN1jQ/Z8I5410D/F+p/v/FZxWNTlU4S3Nf/yGHy5bOOBpTusf
ppugP7U6b7OC6jPEroVVYnN/bhuk+V9PWL1qLUe9n9Z/XIXP2yXtc1tN9b9e
wsHhC5JuCFL88xcc5tYdtvw6+/uh0zbiefr42Y+ZQ6x/yDWCGwy/x02Upuvv
Bu8anJqvnk35v5dhrwXnw3/l0PzXc7is5a3rbV2q//MDDrkxsyKtn41/U2Q2
cTn9mZ88L8jS838lPHHzv//R/J8rfLlM/Q7fEXZ8OhfhuJtHrXr30fPvGWyS
+XVljRnN/3yDu50dziYrU/67pCnOp/uOfCNan9y/HM5wtX4e6crOt9I+uMRl
pdzCUJr/OQ+fzuoONK+k8U8RfLZ5Tk+yBu1/8RUWvD4gov0f9X+TN+P8jptx
P6Cf+n99uCjrpcwBUxr/7IHjN7+6V0L7f/lEw2k8WqYlVO8spQAelhC2d86h
/R/b4TmezyUfSbN8EMFJW9DfrO4o9R5m4zcdPfhaX95/SkJ0/A7w5c2qE6O6
af77NPzmV7G3Ga1HL30E/zTavafrPM1/f4YdJ7/a56dA89+iZmjPVo/t/zTT
+78OLCg+3SRInz0vSnbC4eXc/iMZlP8UDvOmK8gPt1P9yxx4aJSLrEI6rf9r
hjdcTVuRa0nxXxFztPec3LMehqx/yNaCkyd0PTN3ofG/NRzREOAu/5zef8Pg
uommeYq7KP8pCx61VsMhgNYLejXBKrXvws0cKf9b0ILL8SsXMw+h+uw16rBc
wfCWhGha/7wdXsLD13CQ8hu0Q+CxASsfHbWk/M8MuNmup2zdaTYej2mAnwp+
5zy6Q/lPY7ZyOTYXlDxMN1H8SxU2SrwlZ7aH9R+K22C/WTJnNFTZ/WgWBL+e
F7jIiZfiP2nwGltxrbxzbP4suxaekBHwRjKS4l+jt+F5UVKwrngC5T+pwLMv
ST2fsZbyf8xh4U3+hxMjKf4TAK9Yf26lcAvl/9yC3ZI19aNH2PerqYYdWwQK
3ThU/4THkst5Wy5/XZniNdpzYfG492/1XdjzyX4zvET61o+bUbT+8wj8Ya6q
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
18MicbwnzOj9lN8XTpG4kqx7lN2v2knw160hC0XPs/Np/woe55lT2U3x85jf
sN3bjMgpHhT/nP6Jy7keWajRQ/XJ+9bCf7dcOnWG9jNQ9IKNpy4Rf9dMz794
+ILE1TOlS9j3D34JNy44bPYrnK7/L9jG4veih7do/mtaC543ekvt+v5Q/HM1
zPWwXhzFQ/WP3GGZV3Muf/Ol+c/LcFzqo+ajjez7JT+Hn9iGRTlMZePFmh8w
z7QfrzefYONRftlWHN/9TV5/ZSn/1xAu6HGM5af9fexd4ZbIkz+e1tLz/yKs
YXND4e1eqn/zDHZ1v6Cg3EHxz2/wZPNb7rn9NP8l9RnjE+dZidfWU/zTAK6s
r83bZ0j1X/bBTqP38fvYU/93HjaL0hQ0PEfxvyK4jleCu+QNu98lOuFmnft+
lfT7DCXauJzNDr9P+w9Q/WN9WKZ6woyUC3T998D3Jy0/M2UHzf9Hw8+j8t+u
X0j5/49hVbOxMWaBNP/3BY64azDu2Rv2++wncXG/rI93shGg9Q968Kvr81Kn
VlP83wFualJ6z7uLnn+n4Y1/EjPlpaj+WR6c0ChaEqxH9Z/a4KzTs5dFrWDt
L1i0Hc9D8TOL9pdT/u9iOPXSWd1zFH9vs4Mt7zXOTtGi+Z8o+FrmnEkXvNjx
GT6Ad+iEm44xoOvfAvNcHfk0bwXtfzvuC8YndsW5D7Z9Zce/EJ7mes0xdKSb
Hf9O+GX29oYb27vY8YfDn2rLK6xzm9nxZ8PLv8jHmXu8Y8f/EX7H61LnE1/B
jl+4g8s5FcRnNHnWS3b8mvAXnyDltyYsn1vRGr4ev1VV6iCLN5idgP3XvXwm
/Y05OBO2fnN7cbA0i99kN8JLcqxKSuTY520CX7mcTSvvzlzazt5HJNRh+YjY
spogFp8xtILjJn1esl6avX96BcOHZOqz5rmy+dXkdDjix7M1D/ax50FNPXzt
hcqP+dXs+cg/phPtc13iZj0RNj+nrQo77fjyNjuV2v9WWLg1y+/LbPY+GnMM
nj55Rq0NracuuQMfDzo59GQD7f/wDn4T31nhJE7Xf3QXzs/7ppfZcVT/fR58
nPPXvPMVjX/M/n1+g893DdUzyD4Kn4z06BO6SNc/Fe5pKJ/qOo7i/9Ww04O9
iT5GNP8/Am/+utimgNYPeM35xuUorv5RP1aA9j81hR8V3Ri1mUvj/8PwQK5D
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
Xw3PF11WKzJI55kPw+sfL9pSl85+v07BkctZrmadu0uL9TcCVvCFWrv9i3NZ
f6azH/aUe7pH7ikrr9M1WGdgweaX9P2jn8ORJp/OXKT5e+kP2L95yzTFdnY/
BuWdUH+vX39t68rqm6IFbLp3d7ukGLOtN3x22Z2N3X9o/HMFzkhViKn1oud/
OZwa2Wm+XpTyeQ/ABourdA6WUDx/qjPmgzkOB0/8YffHbClsM3PXOvsH7Pt7
e8GBqcvFTzxh/54UD8u5HClR8WL1te4pHHe6XWJzMpW/D7abnXDuzxXazy3n
gvHt2307f25i98/JDLZ5dP3g46tsv0/0btil4YjVxnusfZXGwanimV8mRbLr
nVUKh7pIV3e9Yf0/t+ff39uzrbvPk95n/s+VyzEeaXivqMI+z9wU9kq+0WT2
m/azesC2LY2/DljTeVbn4fcX6h6d+cmuR0Mx3KBU655Xw9qP0De4cVLqzgSK
J+rJuqF/SBF0WFXLnqcui+DWhOrdV5ez/QGxO+ALfm0rRNLZ/KosGpbQ+lXj
F86eF0MFsN2dUWt+nmPlU/4Mq8g8lMkwYf2dnZQ7l3N0p8z0/9LY/Qw3goPN
KldlqLLvk+UKr18+7YrJa1Y+7ln4z4+kHJ6llM83D35+cPnJfZQPypwLX70n
XPtbgvIZS+7AfGmXznvem7SfzxBe/0jt4423tJ/RCZ4e/1D25X6a/5+Gb83I
5YyzoHyej+Fjtq9nDG5jz2OXD3DBEvsU6xXs+8eO28nljHntFttP8eay+XB9
XFvnk1u0n9EB3v+l7JU05b9UPgEvErT2vVhP8fysnf+3nsTix+Hv4LMlvT0b
f29k5Rfdhfs1+kNsBy/t59aBS/m8pguOpfnvVvjd/dq9UxI3sPJHwi+6899w
HNh6vu8DmHeZs+jvkxTPbYUDbl6pjRFm16NhjAfqy9OR+NlF7N+FtGGXqb2G
tyh/i549jA509d1QymcQDhf9lL14sjCflT8DjrvDt/rIVPb+fNkbWGlfetke
eh9jSGA3yjPX83D5WspnqwE/LhSYPece5bPZADu+Ltrxg97HDA+Br0XvvMDR
p3jmbbgvJ49vvyi7ftxG+K3crPQiFxbvleXfw+WIeqal2wiyv28+BzbV2Gni
KU3nOdrBeu0WVk8zKZ/zYfhu3dlTw6MpnpsGdy1eYvX3DO1nq4d5Nt39FanP
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
4Pddrpd8GqbzDA3g2ClLKhpp/+OQI7yjJ3+otoD2f52CZ9+PPH7Oid0vu0fw
s0dHDdbo03lW7+Hnz9yEu6vY8ylrbDKeNy/6pB1CaP6vB/MuXf/LJYjivw4w
X9WXkt9/2f0wPw4rbXRL3ynFnq++D+HNTdNOTHxD+Rza4e0rr/KtrKL97CI3
uZzzEl4dE+g8QiEdONs2x+TdDPb99LbAhQo34wNPU/mPwr/rNF8b6lD86z4s
PWuwSlGPzrNqgf88L30iIkj5DIRS8PtSohsLC+h9Zi2YO+berPwLbD5ptwlW
kyrI3POalSc8DOZJ1mt1FqH93HfhP3/VXQdEaT93M7wsPEIwgOK1sgKp6C84
XR6DEuz+mqvDEcYJ245TvhDf9bD6adVdtk2svicfgVPf8+uOz6f97Olw18mx
v35H0fy/Eb5hFfdlMuX/1+NLQ/m4GRnClbSfezY8OcX7zNMldJ7nWvhnWeuW
igTa7xmU9u/9UCGvwmVs/DaUCqfKGV8ViqR8tnXwfrm+At45rP7ZjbqF52lC
1YKwuXT/VeGfmyepr7Kg+LcNrOzjqH76HntecA/C3m/nP3k2QvGvm7DR5GeD
LgKs/Zm/gtd9eJQ1Yzntf/wD76lLfvo1m84zU0rH5682URMazeZjDdbwys70
b9d8Wf0U8ocjN0QUezazeL5eEtwePf/M4goWv3SphjWmnn02N47le4gdhm0s
FFc+5mP5n8oUbmM+XfNf4fhc9jwZWgE721ctMDJl8TDl/bCR8azJwep0nuM1
GJNhCZ8Sep/hOVz57G7/Rcr3l/UD1oi1MspfT/Fv+Tv4fvuVq3tpviNrAfvV
BKvkSdF+V29YjGvr43iazjO9AjeprTMJofzqyeVwZY2Z/B9hlr+7YQA2Sfi2
JTCPPQ+Fpt5Ff/HHa6sS7TfRWwp/Ks790H6A8nl7wd9Lkt351tB+/ng416CZ
ZyiE7v9TOObNuwlCdlT/e+HjalPmJixm4y9luQw8X2oDf9wtZ9fXzgwu3Pr5
8otkyue8G56ecbQpTo09/7Pi4LCk2QOvNSn+WwInTdydVb+D9n92w9qe19Ny
6fxi84n3uByzBKclGaMon+9i+L6w6siiENr/uRO+FLfqhO1mtj7eEAM737e+
O+s7yx8mVAR7zPmY+sid7Q/W+wKrVybnTnJmv+8ifR/9yVLH+iMOFP80hmWU
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
j/z7+3durluhy+pnlvIPzN9ism6kB1D8dxWcIxW1UWMvq0+yAbBX12BZLuV/
NL8B68raiNySofLXwOvVT0mabqH3X37B6tGHqnU+sflBw8wh1OdVPFPf/GD9
idBKeKLhv//T+vcBOObd0ev7P1L7T4SzGlY/qJJiz/fYKjguIMapldb3y4bg
NYHeQQdCWX0cmv4Tf2/p81vpD1h5lS3hrP6u8mQpev75wFPtzA3XDFP8/yq8
KE5bYUM9xf8r4EePn8teVab1j+9wRq5/TMpZymc2bRjjy93JezaUMZsvgxs8
Q1Vex7Of990Ln3wydeqzIdYfJF+C7cZGLZj5jdp/Gayyxrxi2U2K//fDgkYq
GuuLKJ/T5F/oT8zEpftpf3WSKWxcJVco6EfneXnA3Vs/Nwdepf1PcbC33cNw
XVov0imBPZQ6vepmUD7jb7B1a+euv5R/Plr2N+b/q9Mjv7tR/otF8MQ5Z5WF
yyj+swOu3m2h8c2f3v+NgU1Olm3kJtL4vxAW/e1/c/Mx1n5DP8PN8yVmW9Hz
OVPqD5730pFPtt2l+JcR/Her+Nj1MTT/d4PfX8oTkdzLrr9ZFKwT5cIvb8nq
g3cePMnPKfT3StZfJHHhnrZI22JP1n/XSY5wOb8ct4w3j6f43wJ4wrv921y2
0/5vZ/ip8Xx9+fd0ntdp+F1gkfWZS/T+52P4eHVxx1p6XpR+gFeV/G7TuETn
eY37i/txVLj38yfa/6YPL+SbGa57jvZ/bIetR6ukTDOl+OcJ+OFqqd8N9bT/
JwuWNnyi1HCJPe8638FtGsMbLOi8T2mxUV2c4wea3mXS+TtmunD+FZfHMuMo
/rUVjpC7cbStnN5/joTNyzi5MUHsetU9gIP0k5ItBtjvC7TB7dqni59m0P5P
YZ4ujs9Et5O1P9nnO2nDvVKb8R/F/+3hrRYPkj+m0f7PcDjj5bir85PY82ww
A65fl615I5biX2/hmf1Hv0vcpviXIG8X50aWeNu0VbT/TQPWCJ6n4C9G59lv
gMMHlrs57WHtsTMEPjlUOzEsk32+9B148ff+w9G0P9esCZ606NXPN+cp/wU/
XxdHbeLArNZA1t8lzYF/D6ca+4mz+VOdHSwWX7TkDeXDFAiGQ82sV/FQvged
W3Ds2WaJOkd6/7kePmjZPPEj5QuP5uHv4sQvvlHbeYTiH2pwY2VY9QUZyme9
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
GwyPNM04GzOd6l03w8M23x5PUaf+fXEc/j0nSanrMOX3sYQ/ewZpte9g318/
EPbdrdFRSPXZPbLhmBb/lKQAGt82wuPztDxFy9n3SeCPx/tFYYPDRjl2vriL
YLcfUXF+tJ9y0Bwuj2n5soHma+QC4JhoPgktSdY+WF6FVzh87XDIoPy2L/77
/dNrA7i3Kb/JPzhht36akT+733sWJOB8BcdtdvzAPl/CDD6yp+OEEI3nDY7A
0eMy77bIMHtlwUOCC9Rimim/QT288XGWqv8hWt/2B9ZMNU4SeMf6H6H5ifj7
laLLXCkfg9pG+B23S/rxV/Z5Tr5wW7tYw5bp7PwkZMBKIoljLKn+PLcWXnvy
oQ/3DRs/D/6Cp23tafGVp/pOc8/i+RAOUe+cT/kNNsA7/CUWzUhk93OYFzxw
TGu7cRNz4UW4yFVdXIeP9nc/gYdNNx84vY49XxI/4Ughh4bZJ3ew45dJQv89
3K8qMY3Zax2cdmD2l/j5rD5k1qGk/+ZT6hvu0H7Lpguw6RjX92UerL0Uegzf
ea5bFkH799S+w+Y5NalVj6m+l9Q5Hqc+VdxoSxdrrxIM4FPSP7+0b6D8Fgfg
LRsLF1bfoP3t52CjRi2/rrXseOQewXKXzm68Hcf+nuUXOLN+f/mrt5TfYXoy
j6M8bNIwQZniO6vhqqTXSoNrWX/b4warNbd1Go5gljgLz+2dZ17hT/X9HsKf
bud+f9LEPt/rE3zPOOSLJdXPypI4j+u1VGfcaDna364LL3M2zX51nsXDhPbC
OetMlvrkU3wrHk77PqtSKZXFb5zuw8Xup9o3O7J6Dgkf4OsdtSrOu1j8kDvl
At6XxgXunHehiB3/Srh3Zd8FswH29+Sc4QWu2jqvmim+HwNLuQWsXvKX6hve
gx3UtDifqX5cYQ88PDYkbtt9Fi/omZiC8V0Q/9MEE/b3JLTgRSkqPmridPyO
sOzIilWfaf+DVzT87a+RhIkfG+9k3YXtdOyLhmk9StM7OOycxJzKj5TfQTSV
x+GLSrueSuuH1dRhocUz+zMq2L932gkH7rkw43k15XeOhHcHqG/7Gk/rOwvh
gkxx4edfWPsy+BauqDP/zU/1IuVELuL7T/RtdPlC+Q1U4eDHb7/VXKb8xtvh
i3M2Te0oYOenMALeqRTjUaVN8xt58KOCtZ/VzrD4gUQ73PL7xItf49h4wWBs
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
XPk/bGRXpQ==
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{2.7690732*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->
   FrontEndValueCache[{{Automatic, Automatic}, {Charting`FindScaledTicks[
       (Charting`getDateTicks[Automatic, {Automatic}, 
        (Map[DateList, {
          SlotSequence[1]}]& )[
         SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, Automatic]& )[
        SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
       (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
         (Map[DateList, {
           SlotSequence[1]}]& )[
          SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
         Automatic]& , {Automatic}, 
        (Map[DateList, {
          SlotSequence[1]}]& )[
         SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
        SlotSequence[1]], {Identity, Identity}]& }}, {{
     Automatic, Automatic}, {{{2.6823744*^9, 
        FormBox["\"1985\"", TraditionalForm], {0.008333333333333333, 0.}}, {
       2.8401408*^9, 
        FormBox["\"1990\"", TraditionalForm], {0.008333333333333333, 0.}}, {
       2.9979072*^9, 
        FormBox["\"1995\"", TraditionalForm], {0.008333333333333333, 0.}}, {
       3.1556736*^9, 
        FormBox["\"2000\"", TraditionalForm], {0.008333333333333333, 0.}}, {
       3.3135264*^9, 
        FormBox["\"2005\"", TraditionalForm], {0.008333333333333333, 0.}}, {
       3.4712928*^9, 
        FormBox["\"2010\"", TraditionalForm], {0.008333333333333333, 0.}}, {
       2.7139104*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.7454464*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.7769824*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.8086048*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.8716768*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.9032128*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.9348352*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.9663712*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.0294432*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.0610656*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.0926016*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.1241376*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.187296*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.218832*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.250368*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.281904*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.3450624*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.3765984*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.4081344*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.4397568*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 
        0.}}}, {{2.6823744*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.8401408*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.9979072*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.1556736*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.3135264*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.4712928*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.7139104*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.7454464*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.7769824*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.8086048*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.8716768*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.9032128*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.9348352*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.9663712*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.0294432*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.0610656*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.0926016*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.1241376*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.187296*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.218832*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.250368*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.281904*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.3450624*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.3765984*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.4081344*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.4397568*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{2.7690732*^9, 3.4712496*^9}, {0, 0.9999429744525548}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{3.709843366798608*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pos", "=", 
  RowBox[{"Position", "[", 
   RowBox[{"flightMerRx", ",", "_Missing"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.709831160007625*^9, 3.709831179567666*^9}, {
  3.7098433403961515`*^9, 3.7098433415563917`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1828", "}"}], ",", 
   RowBox[{"{", "5603", "}"}], ",", 
   RowBox[{"{", "5605", "}"}], ",", 
   RowBox[{"{", "5606", "}"}], ",", 
   RowBox[{"{", "7694", "}"}], ",", 
   RowBox[{"{", "7696", "}"}], ",", 
   RowBox[{"{", "7972", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.709780978421756*^9, 3.7097813894936204`*^9, 3.709792436990982*^9, {
   3.709843324870945*^9, 3.709843342179522*^9}}]
}, Open  ]],

Cell[BoxData[";"], "Input",
 CellChangeTimes->{{3.7098434893509336`*^9, 3.7098434912203207`*^9}, {
  3.7098435344112453`*^9, 3.7098435368837557`*^9}, {3.7098436891402197`*^9, 
  3.7098437106346626`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sept11", "=", 
  RowBox[{"DateObject", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2001", ",", "9", ",", "11"}], "}"}], ",", 
    RowBox[{"TimeObject", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"12", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"TimeZone", "\[Rule]", "\"\<America/Chicago\>\""}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7098436439158745`*^9, 3.7098436497990904`*^9}}],

Cell[BoxData[
 TemplateBox[{RowBox[{"\"Tue 11 Sep 2001 12:00:00\"", 
     StyleBox["\"CDT\"", FontColor -> GrayLevel[0.5]]}],
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2001", ",", "9", ",", "11"}], "}"}], ",", 
       RowBox[{"TimeObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
           RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], "]"}], 
       ",", 
       RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.7098436313072686`*^9, 3.7098436504972343`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pos1", "=", 
  RowBox[{"Position", "[", 
   RowBox[{
    RowBox[{"years0", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
    RowBox[{"Max", "[", 
     RowBox[{"years0", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7098433923928995`*^9, 3.7098434670793314`*^9}, {
  3.7098435057673264`*^9, 3.709843512053625*^9}, {3.709843544032233*^9, 
  3.709843661425493*^9}, {3.709843714987561*^9, 3.7098437373541837`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "5095", "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7098434688777027`*^9, {3.7098435069515705`*^9, 3.709843512869795*^9}, {
   3.7098435476259785`*^9, 3.7098435677141285`*^9}, 3.7098436202389836`*^9, {
   3.709843656316437*^9, 3.709843661821578*^9}, {3.709843719939643*^9, 
   3.709843738047326*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dates", "[", 
  RowBox[{"[", 
   RowBox[{"pos1", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.709848077511075*^9, 3.7098480908018217`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  TemplateBox[{RowBox[{"\"Wed 12 Sep 2001 12:00:00\"", 
      StyleBox["\"CDT\"", FontColor -> GrayLevel[0.5]]}],
    RowBox[{"DateObject", "[", 
      RowBox[{
        RowBox[{"{", 
          RowBox[{"2001", ",", "9", ",", "12"}], "}"}], ",", 
        RowBox[{"TimeObject", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
            RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], "]"}], 
        ",", 
        RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], "]"}]},
   "DateObject",
   Editable->False], "}"}]], "Output",
 CellChangeTimes->{{3.709848089610575*^9, 3.7098480912829227`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pos2", "=", 
  RowBox[{"Position", "[", 
   RowBox[{
    RowBox[{"years0", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
    RowBox[{"RankedMax", "[", 
     RowBox[{
      RowBox[{"years0", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "2"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7098481094216695`*^9, 3.709848157104523*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "5096", "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.709848134053759*^9, 3.7098481586298394`*^9}, 
   3.7098482382712984`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pos3", "=", 
  RowBox[{"Position", "[", 
   RowBox[{
    RowBox[{"years0", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
    RowBox[{"RankedMax", "[", 
     RowBox[{
      RowBox[{"years0", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "3"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7098482216888695`*^9, 3.7098482427462206`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "5094", "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.709848224002347*^9, 3.7098482430842905`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pos4", "=", 
  RowBox[{"Position", "[", 
   RowBox[{
    RowBox[{"years0", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
    RowBox[{"RankedMax", "[", 
     RowBox[{
      RowBox[{"years0", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "4"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.709848313529849*^9, 3.7098483198011436`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "5097", "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7098483205613017`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pos5", "=", 
  RowBox[{"Join", "[", 
   RowBox[{"pos", ",", "pos1", ",", "pos2", ",", "pos3", ",", "pos4"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7098437613691463`*^9, 3.709843770806097*^9}, {
  3.709848164510053*^9, 3.7098481770687156`*^9}, {3.7098482461559253`*^9, 
  3.70984824695409*^9}, {3.709848278340576*^9, 3.7098482799349055`*^9}, {
  3.709848327159665*^9, 3.709848333213916*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1828", "}"}], ",", 
   RowBox[{"{", "5603", "}"}], ",", 
   RowBox[{"{", "5605", "}"}], ",", 
   RowBox[{"{", "5606", "}"}], ",", 
   RowBox[{"{", "7694", "}"}], ",", 
   RowBox[{"{", "7696", "}"}], ",", 
   RowBox[{"{", "7972", "}"}], ",", 
   RowBox[{"{", "5095", "}"}], ",", 
   RowBox[{"{", "5096", "}"}], ",", 
   RowBox[{"{", "5094", "}"}], ",", 
   RowBox[{"{", "5097", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.709843771323203*^9, {3.709848172513707*^9, 3.709848177336706*^9}, 
   3.709848247282258*^9, 3.709848280404004*^9, 3.7098483335299807`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"pos5", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1828", "}"}], ",", 
     RowBox[{"{", "5603", "}"}], ",", 
     RowBox[{"{", "5605", "}"}], ",", 
     RowBox[{"{", "5606", "}"}], ",", 
     RowBox[{"{", "7694", "}"}], ",", 
     RowBox[{"{", "7696", "}"}], ",", 
     RowBox[{"{", "7972", "}"}], ",", 
     RowBox[{"{", "5095", "}"}], ",", 
     RowBox[{"{", "5096", "}"}], ",", 
     RowBox[{"{", "5094", "}"}], ",", 
     RowBox[{"{", "5097", "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7098494854450235`*^9, 3.7098494888227224`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Delete", "[", 
      RowBox[{"dates", ",", "pos5"}], "]"}], ",", 
     RowBox[{"Delete", "[", 
      RowBox[{
       RowBox[{"years0", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "pos5"}], "]"}]}], 
    "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7095796286261916`*^9, 3.7095796859129286`*^9}, {
   3.7095802045952053`*^9, 3.7095802062025337`*^9}, {3.7095911477536173`*^9, 
   3.709591174294055*^9}, {3.7095914477110777`*^9, 3.709591450805712*^9}, {
   3.709754767913229*^9, 3.709754776827057*^9}, 3.7097753235759835`*^9, {
   3.7098437829846134`*^9, 3.7098437990729375`*^9}, {3.7098478894282074`*^9, 
   3.709847905383505*^9}, {3.709848184541193*^9, 3.7098481886550426`*^9}, {
   3.709848251099947*^9, 3.709848256040968*^9}, {3.709848337664836*^9, 
   3.7098483525109043`*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{RowBox[{"\"Mon 19 Oct 1987 12:00:00\"", 
                 StyleBox["\"CDT\"", FontColor -> GrayLevel[0.5]]}],
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1987", ",", "10", ",", "19"}], "}"}], ",", 
                   RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                   RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                 "]"}]},
              "DateObject",
              Editable->False], ",", "0.005833672500339167`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{RowBox[{"\"Tue 20 Oct 1987 12:00:00\"", 
                 StyleBox["\"CDT\"", FontColor -> GrayLevel[0.5]]}],
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1987", ",", "10", ",", "20"}], "}"}], ",", 
                   RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                   RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                 "]"}]},
              "DateObject",
              Editable->False], ",", "0.008952794357026587`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{RowBox[{"\"Wed 21 Oct 1987 12:00:00\"", 
                 StyleBox["\"CDT\"", FontColor -> GrayLevel[0.5]]}],
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1987", ",", "10", ",", "21"}], "}"}], ",", 
                   RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                   RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                 "]"}]},
              "DateObject",
              Editable->False], ",", "0.006121199755152009`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{RowBox[{"\"Thu 22 Oct 1987 12:00:00\"", 
                 StyleBox["\"CDT\"", FontColor -> GrayLevel[0.5]]}],
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1987", ",", "10", ",", "22"}], "}"}], ",", 
                   RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                   RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                 "]"}]},
              "DateObject",
              Editable->False], ",", "0.005572166349551508`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{RowBox[{"\"Fri 23 Oct 1987 12:00:00\"", 
                 StyleBox["\"CDT\"", FontColor -> GrayLevel[0.5]]}],
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1987", ",", "10", ",", "23"}], "}"}], ",", 
                   RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                   RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                 "]"}]},
              "DateObject",
              Editable->False], ",", "0.0056829852790140365`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{RowBox[{"\"Sat 24 Oct 1987 12:00:00\"", 
                 StyleBox["\"CDT\"", FontColor -> GrayLevel[0.5]]}],
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1987", ",", "10", ",", "24"}], "}"}], ",", 
                   RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                   RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                 "]"}]},
              "DateObject",
              Editable->False], ",", "0.005067441687159997`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{RowBox[{"\"Sun 25 Oct 1987 12:00:00\"", 
                 StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1987", ",", "10", ",", "25"}], "}"}], ",", 
                   RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                   RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                 "]"}]},
              "DateObject",
              Editable->False], ",", "0.00817497310864109`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{RowBox[{"\"Mon 26 Oct 1987 12:00:00\"", 
                 StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1987", ",", "10", ",", "26"}], "}"}], ",", 
                   RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                   RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                 "]"}]},
              "DateObject",
              Editable->False], ",", "0.005796710703693718`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{RowBox[{"\"Tue 27 Oct 1987 12:00:00\"", 
                 StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1987", ",", "10", ",", "27"}], "}"}], ",", 
                   RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                   RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                 "]"}]},
              "DateObject",
              Editable->False], ",", "0.005372687704026115`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{RowBox[{"\"Wed 28 Oct 1987 12:00:00\"", 
                 StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1987", ",", "10", ",", "28"}], "}"}], ",", 
                   RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                   RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                 "]"}]},
              "DateObject",
              Editable->False], ",", "0.011787020728898524`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{RowBox[{"\"Thu 29 Oct 1987 12:00:00\"", 
                 StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1987", ",", "10", ",", "29"}], "}"}], ",", 
                   RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                   RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                 "]"}]},
              "DateObject",
              Editable->False], ",", "0.005269914194986825`"}], "}"}], ",", 
           TemplateBox[{"8095"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
              FrameStyle -> None, RoundingRadius -> 7]& )], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{RowBox[{"\"Wed 23 Dec 2009 12:00:00\"", 
                 StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2009", ",", "12", ",", "23"}], "}"}], ",", 
                   RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                   RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                 "]"}]},
              "DateObject",
              Editable->False], ",", "0.027768595041322314`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{RowBox[{"\"Thu 24 Dec 2009 12:00:00\"", 
                 StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2009", ",", "12", ",", "24"}], "}"}], ",", 
                   RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                   RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                 "]"}]},
              "DateObject",
              Editable->False], ",", "0.046135489858146625`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{RowBox[{"\"Fri 25 Dec 2009 12:00:00\"", 
                 StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2009", ",", "12", ",", "25"}], "}"}], ",", 
                   RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                   RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                 "]"}]},
              "DateObject",
              Editable->False], ",", "0.03128468368479467`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{RowBox[{"\"Sat 26 Dec 2009 12:00:00\"", 
                 StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2009", ",", "12", ",", "26"}], "}"}], ",", 
                   RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                   RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                 "]"}]},
              "DateObject",
              Editable->False], ",", "0.04615478292638373`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{RowBox[{"\"Sun 27 Dec 2009 12:00:00\"", 
                 StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2009", ",", "12", ",", "27"}], "}"}], ",", 
                   RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                   RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                 "]"}]},
              "DateObject",
              Editable->False], ",", "0.016908212560386472`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{RowBox[{"\"Mon 28 Dec 2009 12:00:00\"", 
                 StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2009", ",", "12", ",", "28"}], "}"}], ",", 
                   RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                   RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                 "]"}]},
              "DateObject",
              Editable->False], ",", "0.007507175977036874`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{RowBox[{"\"Tue 29 Dec 2009 12:00:00\"", 
                 StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2009", ",", "12", ",", "29"}], "}"}], ",", 
                   RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                   RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                 "]"}]},
              "DateObject",
              Editable->False], ",", "0.022352550625207482`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{RowBox[{"\"Wed 30 Dec 2009 12:00:00\"", 
                 StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2009", ",", "12", ",", "30"}], "}"}], ",", 
                   RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                   RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                 "]"}]},
              "DateObject",
              Editable->False], ",", "0.00864026585433398`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{RowBox[{"\"Thu 31 Dec 2009 12:00:00\"", 
                 StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2009", ",", "12", ",", "31"}], "}"}], ",", 
                   RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                   RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                 "]"}]},
              "DateObject",
              Editable->False], ",", "0.015080497248828205`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{RowBox[{"\"Tue 1 Dec 2009 12:00:00\"", 
                 StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2009", ",", "12", ",", "1"}], "}"}], ",", 
                   RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                   RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                 "]"}]},
              "DateObject",
              Editable->False], ",", "0.005024545192030032`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{RowBox[{"\"Wed 2 Dec 2009 12:00:00\"", 
                 StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2009", ",", "12", ",", "2"}], "}"}], ",", 
                   RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                    "]"}], ",", 
                   RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                 "]"}]},
              "DateObject",
              Editable->False], ",", "0.011659295847452759`"}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{109., {5., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{90., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{108., {1., 18.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 10, 15167133528138137613, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{104., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{126., {1., 18.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 10, 15167133528138137613, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{78., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{93., {1., 18.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 10, 15167133528138137613, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{135., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{135., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[10]]], "Output",
 CellChangeTimes->{{3.7098478901293535`*^9, 3.7098479119518623`*^9}, {
   3.7098481950363617`*^9, 3.709848212823037*^9}, {3.709848262838373*^9, 
   3.7098482887697315`*^9}, {3.709848345732503*^9, 3.70984836008947*^9}, 
   3.709849520922355*^9, 3.70984955602861*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"data", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7098438054502554`*^9, 3.709843811823572*^9}, {
  3.7098480080447206`*^9, 3.709848012995743*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxU3Ak0ld3bP3BDOKGUMqQkmU5pUIRKOA2mkgZESpLQpNnUYAwNCkUqJUPm
SjI2EBVCI49IkzgyRLNI6f917fdd6//2e9b6rc86zjn3nq6993Xvcys771y1
WUhAQCBPSUBg6P/xLyQmoZU3ffe9wQP6R4zg/HvwsdsyCRHj9w+5rRNeHX59
vev8A0OWlUls5V2rHftHY4L/kE2M4PeqY/5E7wscsucW+LmCZsXtep8hp5we
+vs/JRe3nNk85Pq7Q3/vuXDkxPhtQxZth7mp51fmxuwcsq50Uisvy62Ie3XP
viG7GsCZYhXV85ZuHXKMKzyYYjouYNa5IZdHwOa/7OVfcQ4PufcW/Piy0ASh
o3uGrM6H37V9q03v2jJkW6nkVt7yoNnnJQfp80PmwoVHX2n5DjtE5d8EH8op
/tfb5kHlD4cHuFlHJfleVP5C+KnCw4KXNlRekw9wb4am5HFpKq+n5JVW3tni
WuGXLzyp/LpwglxWsbgpvb/eCT5QoixyrpS+v/IE3JU6faV4MdVnXz4cO9z+
mkUx/T23GZYqv/4uU5A+z04ipZX3SsZZtVolbMhhc2CNlZ+ef4ym9ircAOuM
l97xzm3vkNuPwur3l7zRUg4esnwufNdihtvPhoAhm72FrWNiRAIfUPt6c1Jb
eXJvZHfnR/sOOW02PHt5lPLoOvr8hnVw6vVFB0Tqw4fMCYV3WmiPq5Gh9+vf
gHVq9ab35tHfuzfBfiUuxtEHdg85ViQN31dnZCzvS+1TOROeaCIvmunjR+W3
hw0Xcnsc71yn8gfDH3a8VJ1mf5HKfw1+4a/ArdKg+glrgKVV7y6aFUvlKRRK
b+VVPwns/VeUReWfBkdqnDm3+PF5Kv8aWKDK/Ns8kaNU/gB4/gNRw036VF7v
TLhPRch36n6q77T/4KCT67euYf2/4R9sm1Di7fGR2oszNaOVt1j6s+b59XT9
+tZwlWTmRiMxet39MLx8//a6tGB6f2waHKni1avPoe+rfAEfTW1RHT/yOJX/
D8wJcTnu/oRe52pktvIcdw8anq2l99uthMvyR45R6aHXww7AjSrJQoOz6fsK
r8A72q0sZ+8NofI/hYPK064V/0eW/w2PfmbX6DmDPs9MNauV1+LY7J95K47K
vxxW2syZrz1An5fmDW/LU70oujaUyp8It76utuieQf2f8xh+ICkaYvTvGJX/
F+wlNGWmFOtv7spXW3k24ofKI3Xp72OXwiqzo3fs8aL2qNwPn7kzpe2oKr2/
Lx6uGFf/9UhrNJW/Cr6bZPpn8418Kv8PeG3Z6NtFtvep/BOvtfKOvP2UuUDl
DJXfDLbPuH7DYBTFg/Y9cLDxnpBNBaz8F+GMSQefKryg9jKrgL+ZnlT9mBdE
5f8KK7W9WalkT04bfx39ve31rNuXaXw3LIEzBPpTgxqpvTi7YK9M1U/3j8ZQ
+c/DD4RsbReOiqXyP4CtpYJsb86l74/tgUu/7tFwP5NL5ZfPbuXNatz95ZXW
bSr/QlhlklhvjFYilX8HPGztreRXO6l+7M7CDtPVNqafpf4bVgofd311SUWd
6ruwC1aSnhE3XZH6b7vMjVbepsPt5ty/1N7yxrDGr0urHe5dovJvhZ/HFE2Z
dJLGs/cZ+FSu4/w1a25Q+YvhmU8O11UH11D52+EEBU6YzuNyKv+YnFbe98ZZ
H+8dpfGmvwA+tdRIrKP7ApXfDfbfdP7RyMXUnrGRsHFj+4NDE05T+W/Dbx+t
sD4bEUHl58N12n9ebvpK7ccddbOVF229NdRMn+rPbh5ssFtfTdiRHOYC9xkb
V89Wps8vPAnnH43V3xdeSuUvhGNarcbVLsmk8rfAGy0UHFQF0qj8I3LRn2Uq
nIY50PV468FtWRPnC+1j/X8jPFbP/OXPMzQ/NByHZ+z7pfgtkczJh+2lfP+K
GaRS+d/Dn9ZqjczfQ/3BXTwP/XnRWQ/b01SeWB3Ya67xvUJxao9KR/jnzs5L
uk70el8YHBQ+t8l+DsV37k1449Q3Srdl6Xrs3sCuSWc8ymbR54eJ5aM+cspU
NA2iqPyzYO9t35Xa5tN4bneAP3ULTTF0peuTD4HvdQWO2JgbSeXPhmOax690
ekH2fgX7XHnA1Rmg+Jo2rADxtzD95Lsqup6GGfCce6vne7yheMuxh4f1TOPc
fUz9VT8InnR5pcMDtQIq/1VYKmpM2rMXV6n8L2HHLxx7qxHUfpWChajfp39v
6mmy+U8TDv5rO35RLdUv1xae4X7wyPtuih92/rDj95dB0nn0elgGbLX1hmCY
HbmwDubsqHuhtZ8+r30QflfkM1g1ntY38lOKWnlx/o1anVL0utlq+F1pVv1/
62k8eR+C5dsvfI7l0PelpcIfg7xqDNLo7xuew/VeTasftrD2/wNv3f77sLQt
zXf66rdaeZJTy6bPGU/lc18B/1FaZS1gSfUX6wub3NB2DjKh+FGZDDvskB2U
CTpB5X8CR2q1t3/0puvh9sN6FXnmI6bT9dup3G7ldUuOXOUy5ySV3xJOHeUu
HpDC4r8XLDe8SPnIVGq/9gT4sZp+yrw8Nv/XwAI+WSfX8Q9S+Xvhm69/73n4
mvqf96Q7+Pu78zL3eLDyW8DPwl2P7dZl7b8PPrqp/NQSC28qfzw8dmeTynwJ
Wr/pP4Jbk+yyztnS+s79O8xZfuNP4Upav8Uq3sV6c8O/i6bJrP+bwg7KW05t
uLCLyr8bNvVds+mgkQuVPw7OfPg8V16A1o925XD0IfcEhZ/bqfxf4BqjmY5R
12m9VqhQ3Mozy3X5ICFKbl8Mn59my09X30Hl3wnbrv1Y38Jh659zcPeuC9aq
PBb/78PDFhk/nTSZrietG/6xZOK/YXNpvdIgV4L4kOAvMMeBzf8L4TnXRo4W
D2Ptvx2u3fVjTl4cvd89Br4pbnRkTuIpKv+9kv+NXxSfKzvhU9znmp9bab7Q
HXMP8Wxq/IYn62n95roAdlGWsK9c6DrkGLd7/2f9XB4JL5t5pseilvpP7204
SUo4O0yb3q/eBvv3PF4htdt5yLajSrEevHM4INqVHDIPTpfQrFgmvHHI+S6w
08PhU3xiaL3WdhI2dhb0+q1C3y9bBJf8J/Z+QYDbkE1a4M3xllqNbL3pOaKs
lfeoeOm0aZFU/hQ9eIZHXOv7AHL9Rnhypa++6hWqb9ETcD3HVVG7muZj3XzY
IvaX4chP1D9c38NHt9+pkZ5N9R8jfr+VZ/RC8Z3qfHK5DtzzaL/SbGuq/15H
+Pkt7ZXT9tB8on4U1s9df2HeReovtjfhlot/nJ600PtD3sBpdQ+GFVhSf84X
e4D1fGWaYYoPladtFhzletjgjQf1X9l1sFdVnYa8DCt/CNx20H9d4Akqn2c2
rNEh053YS/0t5RUc3eG6UCyQ+lv9sIeYD3SiXVxD11P5Z8IxEUoeD9OpPXTt
4dfXYt0l8qj/ugbBb57VdRqfpOuLuTpk6cne62fQ95W/hKcJb667tJDWB72C
5RgPN7lCwl2s/NPgbX7j5FQ+UnltbWGvjWJFsbeofCH+8OXIzZKTjlH75mfA
b132q/CHUfna6uC6sD/259Oo/mT/wX/f5GheEqf3m0ypaOVtuJ59YJYixSvP
1XDg1W3bmwIoXqUcgveqrl8nFkvxpj4Vnuyv8/jFTlq/ir6AuSI3cko1qLy6
f+CbAlY3MkJpv+aqXon29kysbatj+78V8OUs+x1yMhRfy33h5Rsj326YSuOr
Nxme5jdXLn8/9Qf1p7BTwgljfX9bKn8/XH82+j/XNDMqv8oj7D9iP99Kcnai
8lvCP4ZPmOU+lvpnmxes+U0qSLaS+qdsInzV943orljav5nUwNUT78pKvaX2
9eyFdS4m908wovenTKpq5anGakjf/0T1W28BB1wIqZqeuYnKvx9eaadRxYt3
pPLHw72B3xKVjlP9uz6C9yhMvKfzYxWV/zs8NqRVNX0+9a9yxepWnuxZcWVD
Lv19rymcZ3FmUrvMOir/HrjFs9ngoC99vm0cvPT2Em/fSnMqf/mQRdJs/021
ofJ/gfnFM01mnqLra1OowXh+kSkpfHINlX8J/K7x+Wfz+3ZU/p2wc2SWzC9t
6s+e5+Af6TL/XFQofqfch9WOlMR5FlL/ru+G2/P0PEaIUnwRlX+M+fPE6zPD
Zam9dRfC6/Si7+tvpfZ23Q7PPhqnqpxB3xcTA5ukDJvj8mc1lf8eHKU9Z9EH
C4qHvZ2wyuv0yknnKZ6pyzzB+kcmImtVvzuV3wi+NNunxyCM6itkC/xSxjwz
S4T6d/5puPh63vK3yqz8d+G9mREOSjrWVP52ODnXSL72L7WnifRTrM9CE5S2
GVJ5PQ1ghaLZy6Z40eeluMLXjrg5+v1YSeWPGHp9zY59DytpPhO9DU930bQq
a6fP0+XDrpx9FcKlrP9LPWvlCS317a+VZf1/Luz26GmCyW02/jfBb/uve3ke
pfL1hsOlVU5BbvdZ/qMQXhHxUf6BJYt/H+Cm5dar9xnT+AiRfI75RbHELXcO
XU++Ljw6b2zHpHSW/3GCQ8fKrElRo/4sexz+6qn3faIlrRdM8mCxftN40Q9U
/57vYIO2C4aN8Wz8D3/Ryuv6tiLy0RuKT/Xa8N/d7SXqtTR/ijrCW87OL89Z
RdevGwaPWrl/d2Yn7bdcc+D6D4KvPe5QfIh5Dd/5a//S7msylV+0tpVn+S/8
dxGH1q+9WrBqSuOUrwk0XtUd4BMHNnzOimflPwJfD+mqdf1G4yfkOvyuIK74
Uw+1d34jXLxpq9PnWIpPbcJ1rbx/tjMf7t1E6yHZGbCTwfKHR1MpHpvYwVvz
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
BW6QqvHLCKP1tMkzeH/Xrscx/VT/nr/hmvstrs3L2PkvVUM+r/K1xXPBWsov
1C+Hh6vbHApgv8cS9YG/T2lbr7Oe+qNuEvzRdnDB5QT6PtfHsMpJud/9NdQ+
Mb/gE1ffuE/XZflPZSM+r6Qu4MbnpbQ+6F0Kp42OOaCwkcavuifscOJbyrgQ
Kp/tZbg3tKpy2XiKnyFV8Kzm31GvJWn/lf8DthuYMxgiw86/TjRGvBSrmrHO
mrW/OWzqUufwZh/FN5O9sKVF9+DzcJb/uAh3S8tlfUug8ZlSAXMaVm1zX8PO
v32F29/XtS8zos8TncDj8ySdXCRs77PzvybwCBndW1WSbP+3C5bPGLVnyybK
R8Sch7PM7SxW+tH1lj+AixV8Dk1QYudfe+D6YpN/zxZR/1UftxD1mXkgOfoR
jR/bRfDbqICiOBHW/jvggkv1xZMOkfPPwmv0JnL0VFn5S+F7nwRvitXQfCr7
CXYfyAif84vitYnsIj7v+cLSLsnpLP9tDG/V/U+sop3t/7fCpXNF+9td6fX6
M/C9Z2HzTCNZ+UvgnaeS8hadYudfO2BH00Waho9pPLmOWcznbZ5fqLv3H513
ilkAS+9aczzwCxv/brCtnlLHfZYv6Y2EMxXrMrxXs/5/BzaYO29L5kTqf7Zt
8MSHC4UdjGg9FTJqCZ+33XnePaf7ND/mz4Ob2+Ptvtiy+OcCf9Sc09Aqz9r/
FHzxXNAyG0kW/4rgimIzicERrP1b4Nkxggb+Z6i+UkaY8HnRk3L3vXBh+S89
2Cr59kZvlj8QdYaXvzCt2sPWF7on4Jvxyj+LhFn/z4fXjH9VU/CF+nfMe5P/
s18vFzdF+7Wqq917Q/XdqwNfFF01rWQ/zVfqG2CXxnCx1KPs/O9RuOKdDl/G
kJ3/vQnPEfqy99ddas/8N3BTiyhn9zkqX5uYGeaHFqt1otOpv8vOhp9eNt/b
cJfFv3Xw9S/i+I/2r54hcArXrC4vmd3/yYbXaWobz2bnD+tfwTVbNi/QKmTn
n0XMMV5/OL7y6aH61p0Jf3kw/+b1YfR+V3vYRSPOqiOOxb8gePRxn8GsUdS+
5VfhqPpXP36MoOvrfQkrf92cWy7H8l9CFliPS/LHZW+m9ZftNLh6+lSRw3G0
/guxhZ1TNcr+E2f5f3/Y7N9Xj+/H2PnvDDiy/3nf8RG0H5D9Dz7c5j7m3jQa
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
/j5Y3thRS7CTPf/5ErzF8tRg0wGW/6uET7Zdu6UzksX/b7CB0vEDFuz5IH0T
0vi8aPHo4tcz2fOvTeGLJi3rjV9Q+ex2w3Ifd7iGnqB8WNgF+MWYCQtKn7Pn
Pz2EbXcIB4yWY7//+Jw2dH8wp2VuNHv+jUI6+vsJu/JnM+l6zRbDaV/dlmrE
0Pzs7QH/Ev0vZrIv3R9Ji4Xl2t8ZzvtD9ddQNvT3S9TOaRiw3/90D3nWF4FH
I2i86stlID69Pr5Jvovlf3mwku6ft8OsaDzFboNLxD9UfF1Pr1dGw1aTTJeU
LKXr6yuBPQ8OC70lxZ5/0wkv73I4JGrH8t9jM9F/ZKYdGHxI66EwQ1giONIz
y5iup9Ad3vS14Uq0C81n7VFwtILt6JBK6q/yd+Gm+J5X8T10HsPsIzzjhLRK
/Q1aP3iPzsL6TLreONGDPf98Pvy47XaV4gDtFxs2w1mDgocWj6P65UTAC7RK
w58Ls+f/3ILvFq+etnGAxot7KyyR1rN+pjrVZ+zIq3zesEzFgtUDtJ6o1Ifv
nkr4KJzGzj87w9L6/albhdj933A4jxPyfjJ7vqFdAWy/027zxGe03whrhtv7
1321TKHXCyWuYT3VfW+t+QNaD7fPgSc/Fxt4+IPqR94JjugKdazeytY/x+B3
q94cWKzP8r+5cJW/ct3bnXQ+Je0tHPltbtdsXVqvN3Cu83m1YmYFBex8B0f7
+v+e96PxpL8ePu56Rtn0Hzv/HQp3fZY5ucGd+k/sDdiy+L8gc7Z/rmyCm3ud
tNSOUX/oE8nG/OrXvG/4Mvb8by1416/hG498pnyR3VrYPDh3QYkhO/8dDF/t
TFiRGMjm/2twznyDA7Xm7P5/Azz1m71e7GRan8sL38B+Z86TGUfD2f5PEz6y
KCrqZBl7/ofNkO2jeG5SbP3rB7tN2XUhw539/jUDjooOfRScxM6/1cFW0xZ+
D4pj578HYfG+BVozrOn7U7g5WH8MnxbxfTJdf/0qWKL7cU/kGLb+PQSvcHbe
P4I9b0Q3FZ4kONzMWIjlf57D0+3/M+IY0vwaMwCn7lcXW8vyT+VqN/k8XVu7
2nYDyuf0WsE7lWs59lPY8y984XbLOZlu7PfttsnwKHMZryPs9xQhT+B9E7Vc
Mp6y33/3wUlVX6r4kuz89+RcPu/jBr079yJZ/sMSdgmKn72zlr7PxAs+d22j
aoIhe/5rAqy6YFtl3ie2/6+G+zbO3lkjy87//oRvZ1c8NNzO8l+T8rD/y0jc
mmVG+xNdC/jLnd3etVdpvLnugx8smMQ7Ik/zVcwlWP7DF/O7xhTfyyvhg12H
Yg01aLz3foN/OZx+w53Onn+hmI948Tu+YFEPtbetKVzfF3qlLp39/ns3nHb/
8P0j/4+qO4+nqmv/B24OTVKZSihJSaMpUR0hSkQlUikklKEJzYYSRUihJBpI
KClkrKgMESVEI8UJJZExqd+ndT3f3+t57rt/3q9znHP23mutvfa11rrWCHr+
i4FDTubbbWxg9Z/7FM520PnpnEbrX3/AsRLjPhWcZe2docx9HJ+cz1/eAXr+
04fLvmosjohjn5/oBjedH2O7dBbFf6LhlIGAJv75rD0Segw7XNj5KPUbe12j
A/7kfcLQ14byv0hmoz3vOPfb3Y/yv3DgM8KOr6aGsO8v3pn9L35uODJUiuKf
5+GWNQE7t3Jp/tMjeMD/WWSfMx1/O8wnPL+88CZbHxAwIaeFs+1Ynmw3xUez
lsAXvuiLVVM+aq4TnOr14cgPXXZ8EhHwiFVGjxX5aP1rAZxdviDp+kF2v/T8
Aq/5beUZWUjxj3G5uD/GpS4NM6Dn/8VwyL6HE/fH0/V3hEVtj1wU/0Tzv8Lg
vaVKxyXfUvnPhce1m+9qrmDfH9kMrxlsmztwkeZ/jclr4UQtlkl6957mf2nB
vdMqREVus/utkj3M0/Phrvp2Wv8eAud6rFLIT2f1LeA+/KWcN9L1AatfWU3w
Qj6Rm9ZhlP9nZD769y2lFmc/svMjoQHvCe8zFfGg+b9bYV+9ew2mV9l4gucp
eHDL48l6Ouz9iRnwKMnu084p7HjrPsAJAtk2eyJY/1VIpAD984db46vm0vzv
hTDP86qkKZPY84TjZrjJ0Fo+VYL1DyNP/nv90Mo6FcqfXZwOWxrJhMpTPK7v
LVwbaFxy1JTKv9CDFk6c9YGq96sp/j0Ptmw3jlxzivL/b4QTC4uXLKf5vFnH
4alFa8IdaH4s9zac7m2yxyGaxW8lGmCNiI/bl+1m18OQ/2ELZ7SsmpX4OJr/
rgq3d2noXNVm8bvEDbBh6vOP4Tso/68vrPm4/1oV5fcVSoWV067kB3Sz+7FG
Hfzty6+MUWo0/5/nEZ4/U5RurKf1BpGzYH5h09WWxuz4itfBL342uSQGsvPf
dxS+v0nsptcb9n6lm/AmroZIYtMadvyv4BRfmcOSQax8BwzDU1zOLZm3kZ3/
rBmFOH+xhbbzt9Dxm8OT7aN5friy6y1xGLZx71z7dgrrLxgmwsNbKz9X36f5
3y/g8+Hx6ysOsvt74i/YbcYqh4ROmv+oWIT+6Ls2vY6p1P6bwcoxtjdmUPnU
OAD3rFHxbRVm18vxGjy+P/jDq0msvEc+hzOiK+20T9P4Vz9s/nCDfE0n+319
Co9xvc95KASU0PiPCXxtePPEwRtU/j3hw9fPl40Xo/l/8fC35xoza3Po/vcM
fqVS9Vk0leJfPfBdu8wdF76z8iIh96SFU1yiK6Qbzq6foTHcZDS5t72K8t/s
hYc+8O9Y95m1z4mx8Gelik6X3TT+UwL/HeFvm7SYxv+64QvHO5enuFL8f/LT
Fs6WfQcFfP6z/sUQNnOq0Jwpy65PpAe86O3b81kUvy2+CFv8ueK+04eu/xM4
eK6sUCTlg1Xq/OfPf+eb/Sf/sXRxC8dKLE6LO5by3yyHxzXrRq/9xp7nslyL
/60HDjdWWMr6o9wo+E38qxNcTTr+Ilhu2dZ3DrQe3/AbTPtzsPy5nhIleJ5S
tQ+7nU7lfxnco3PRcpjyWda5wI7Cd46qVbDrI3QeVnaf07h3H83/fQjvOdW/
UUmPxr/b4PRi8SVenRT/H1/awvFxkvO4ZcHOX7Eu3FWdeLDrJe3/sQN2Nr8g
rNTB5kMpnYU3u72JL9Rh86cs8+GHL5YOPtxF6z+4cJ7n4fUqR1i8J0usDOVD
dMmNjFg6fm04bVflPV3KNyOxHa7cYXnfk/I5GIbCr0LVPs69TfP/c+BaQY/q
nrWsP5T4GaZ8sez61I1+hvrm1Viz2YnyX2jB3mXhP9JH0vx/O1hxT9C6t2GU
/z8Yfmq81nKxGbu/RGbBh+89Uz4dT/PfG2FLW7VLnrTfSJ9oOepH4/WKKQWs
/6CkDs8cd1fo+CH2vG1pC1/s2BYsf5CVz4Ag+Pu4Yb9jyyj+eQ8e3vzc55w+
xb/fw3/y780xv0vrf4Qr8Dzk5Cvh5EvzHxbA8oEPef0GKP/dJvjc7xPr2xMo
/3MA/OD7MseblP+y7g48fXOMRnMbrf94W/FvPsqdR/mhFP8UfN7CsbtupT2n
jz0POM6FPUdFqPq0susTaQ3reu6Ydf0J1X9/+Pwx0QCFCjr+W7DM9u5KvwGK
/9bD+1ce+CuiR/Mf+CpbOFe0vt5PaGH3j4DZcI3TIjnDLbT+yRK+1hzyII3y
N3B94D/ZzXtD6ij+mwIn7Pc4k6tI1/svvPELr+aV/TTfeWZVCydU94vonTh2
/evWwt/TTCbkzmTzu4SOwgZPntW0OTFrJMFew02TVf6w/IiO1bD7700Lt0ux
1yN/w/Pt1XRXr2AuVnrRwjm4PzLtbyVbb9y3BjadKV6c8IbNT1Q6BIdsj6z8
UseOzzIBHvXLbMnPKhrvqII3/XQ+HCjEynfWICyvHyKnH8Lab+60ly0cE8uE
UEWaTythCj+bfMGjQZfi3d7wiWtzFifspHz/V2E3gY1Wb/jY9yVWwJmjV4uG
nKb9Hvvg9K6VCjH3Kd+fQjXq25u7Dob/6e+tgh8OdY5Yxkf5vvbDcp8S53uu
pXjXFXj5JK1R1yaz9jawHN7xTLl5zwDrL2X3wpJPuiSedNF+b3KvWjhFu7lx
R0VovftKWOVZQ7K9JMX79sFZJzT6Iym+4X0ZPuHpGxlF862TSuFG1YMVF1so
33U3/Fv6NmfnJNb/EJataeHEDM+7qTaa5ruuqPk33ywuIUWSfb/Tbni7pUXw
PrqfRsfAke09NWkyzKVP4ceys31yT7PjH+iExbt1l/W/Y/VPWaYW/Rt9Rd5l
lD/cSh+eunjSe+5C2u/RDXaddVmv8x77vuxo+G2SmOHsjxTvLIJVXNIGzSZS
vosOeHl7X0pWA6uPRpJ1LZzydoEfC6NYeffmwMfSvF76Uz60pJ1wSsk18+r/
xDvPwz1abqceFbD6I/wI7jzNe7n9ATs/Wu1wROjKksfH2f3eacJrPK+8O1H5
XJTy3S6BS3Wt9DY0sfGtUif4V+saqSPz2H55A2dhfZ03UxSs2POVcgHcUNMT
OrKY4n1f4KSVFQMX3tB+n+PqWzjqI6uvSsrRfPfF8AKJoY28Rux6t26HI+JX
3P/UZcKOPwy+vFnD60415fvMhfk/JByNX0DzvZvhR0LNfkP6FO8Y09DCWaJj
vbeD5rPXa8GWT4xUuEcp37E9vCq5c7eEH+U7CIHFAn03nalm9d/pPuz2wdnj
Me3HGd0EZy+2+XSgnPI9j3zTwll8ZXefXSbNd1aHbQ9Mf9AuyNpn5a1w4WHz
lrq72ez4T8H8262/7HagfK8Z8OFL+w3f/mblL/sDXP03stGL5ku1Cr9t4ez8
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
D8gbrjJ6TPHfKDhjDt/lw7tpvl8RvG51wfwLjex8a32DCwaPNvHYsf6dk8Q4
Lqf71IW8TAva720ZnODkO2w3geI/LnB1zbOUPAea73cONq1x37LWhJ0P5Yfw
+/rmI6N0ab+3NjhVMCNi3G1WngLHi3M5xlmfDw/Q/uLZujA9H1O+3x3w/t35
pfFX2Xig1Fm4U3D2+LpcynedD/8YmK+cT8+v3lx44QEd4+KjlO9CbDyXox0y
vyAwjOJf2vApx8MP7iuz+V/C2+Etc/oX3NVl8UitUHh5rMbl0jtsfptTDnxY
cszVEi/2evRnuLLJW1z1CuU7Hj2By+kbvWSe0Wb2+QOacFTtrUmqbRT/t4On
3pqWXfmBlW+rYJj3TPxHP9r/MDALvrUt4+M52s8+uxG2MluVLf6b8t2KTuRy
YvduWJ1D+49JqcOWU45ZTvzEnreNbOG17Xn7VktT/CsIlsz03z1jFMU/7sGX
G7xH5W9g17f+PVx9YPvoKZRPUlhYAufz0H4RLX3K97AANshXlL8UyOqT0yY4
6ni0a5cmXf8A+Oyby/uNQ9j3l96BY37uS/ASov0O38BFc7qOe9N8bWVBSdxv
wwofDvKw/o3VXHhbXcairRY039Uatk02uO1Kf5/tD09ocPOSnkPr3W/BcnMu
tyrrsP6JVD2cWpanfdiB4l98Urg+orIbh2j9ifdsWFfzrOrjcHb/S7KEDWwW
Z/r9ZuWj3gf21L/+J5jG44VTYJPZ0/Zd+sKeP7VqYZFdOTtTjWm+619YwfXO
OfsVFP+fKY36NPzi0jhXyve7Fm74tnN43maKfxyBI/c8VXO4Tvk+kuC7MW96
k06y9t2qGhY4/TjK/TQ73sDf8Ho72wu5oaz9zVaSQX+k5+bQbkc6/jVwylHd
zLMRNN/zEFx148C+4Xa2f5xRAnz4x1CanSMbH/eugr/Yhkc25LH1G0mDcFft
n/4kZ5YvpH7aJLQn/k/0lxxl4xHCpvD31uGw1UXseLW84ZZpMveav1H85yqc
rSZg1TSV1b/oCniS1Nw8MyU2vlnaB//6LcCr84PF5wfkJ3M5998umiZXxfoX
yqtg4U0z7BbcZM9rVvv/2XfzQml/9nsD4+DU6P68Q1+esuMvg2Piwv0v9Rew
4/8JT+RbrfCC8rlLTZFFe5+0VnrSK8r3bQQrXD3qz2PC4lvee+CV+jai8jsp
/nkJ3pS9u/PIQsp3Uwy/Dn0+7/dI1v4Ld8Elox6d3h3L6rvWpCloP+dqKk3y
ZvFbJwM4WFElaOwN9nui3eGAlZH899/RfncX4LHRleHySizeN/AYtghX1R/b
ytZTKH+HT16vWy3xk5UvKyk5lH+XEUa+tP9MoB78skGpz5DWL2fvgu9tuio9
lMbqb2skXHdpV3aiLK13KISPBEj7fnhM7f9XeO2rMx/HUD5X74nyKD9Bh4OP
N7Hzn7QUPr3hXlDh2nJ2/M5wusqy7+qSRez4z8Fh12p28Oxk5UPrAbx3/y2v
qu0v2PG3wm4LbfWWiLD4ZrS4AtqLMaX5erMp34kOLF0+wcdbjeL/jvC+p7NX
HL3N7vfK4fC9Zu9nrqo03zUPtqm1lrJRovUuLXDqo46g07Npv+OxU3F+6h/7
+MdS+78I3tnuFbVpL43/OsCPpCZb7n/Czq/RGVh/69avt5+x9tg7G1bUat4c
t/ohO/5PcG1abUfDeNZ+14+ahvp6dEPEbxOWH0hYE154cayN7hwa/9gGX69/
v+1DPeV7Og2rTFt54Jcf1f9MeL2iwC1z2t+i9CP87cR0iafj2fjVgIgilxMX
mdCxaDz7fGU1OH5vzx3Ve6y9stoCJ6SHmfzOZ9czMBCe57RodMlxGv+4C6/u
dL6RrUDz/d/BCp777Y8sovn+I6ajvqu//36ch41fGM2HeU7LCyrPovE/G9ii
82oEP43PJ52Ac7buOnLwGu33mQaPMZ9f2+vLXhd+Ay9xqLs+8xS7X2sJKKF9
P9WlxFnH7DQH1hax0oh9SPv9WsHypbs3v9Kn8Q+/f7Y0CZJ8zMbLBlLhhY5i
sZMnsfZR+TXMNZOc4ujP4k9WvDO4nPCUKUI65XT9VWC7jmVnVGh8J3s93DVk
yP8+lfUPWo/BFO+ifCfJsPA1ueVHddjxGNXAnbk5Gu6HWfny/gNfGXjUss6H
9ntVVuZy6gWbP5j2svJZb6H8f88rdP87AsfrNbwR02X3F60b8LgNO6Rik9l8
QKeX8Lfm9pxbbex5OXoIXn1ya2R5KT3/Kc7kchbfNHLcS/NpNUzhouKIkhY+
9nscvWFT9Q+NoRns/hx5FeZMNku+uY/9nuIK+PTet6EO0ux89fXBXu6ed+cr
s3ikksIsLmdjisWVwTI2H8tyFZwlMX55SSc9/+6Hy9cUrHDTovkfcXB1sIoH
vxY9/5bBfUO8wmMmsPiaRA98ICJuztWdNN9pigqe7z33fOZco/3+jOD8+Lf6
03Mp38ce+JbXpJl+9ez76y7BP/uO1d0up+Mvgceqtju6rqf5Tl3wsJBBxh17
Wu89aTb6q50NxhdEab93A/i/45/u8KhZ/XPlhVm8su8CrBvydleMHSsvSk/g
NZkh91dspvne3+GOhtkPt9YyB0ipcjnnOzsLZY/Q868e3Cjju1PgNsX/d8HT
7lSLP69k9U8iCm4L4g94/ZhdD8NCOD05OtZEn+LfX+HioB2JM7/TfncT56D/
8O7J8Cza/6duKeyca8MZT/ErIRe4WHJtypXZlO/lHKwwYXhLujYd/wN4cslu
/KP5jq0w5ael+X7ic//n+blPB9aXuFi1J4jyHeyAsxMGVow5Suu9w2HtKyt1
djhQ/D8PHm/SMCZ1NcX/WuDSJRb3aoKYuWPn4fk9YNd57jCbryahDTstLFoo
bEXxPwdYY6/bavVCWu96BjZzSecNtGLXMzEbFrA4KXx9DGuf6z7BlpwJ04WW
0nr30fNRv3l6w0fX0H5fmnC4b7LDnleU730b/G5xtKyKCh3/abh4ZP8dNz/2
/uJM2GeeQuHn7ZTv/CM8MruuqmQ8u18riS7A/VntvIPjSfZ7LNXgqCexWyuC
WHkM2AKvPJbjf6mc1rsHwq4rTPcIUb5C7l14f85TWYNYmu/4Hr6l657nXUX5
vkcs5HLcI2ZwjJfTfO/5sKBE+8j4xex5OtEGTsmNO60rS/HvE7DaE4UTIo9Y
eRW6AydaWCdv3k35Xt7AU/f2vXL9Rc//Ampo3z22cVUjaL73HPhSe4vlm6OU
78IKnja2NMOpgfKd+sG+PcNbEr1Z/VW69c9T95137qF8n69hI/VVq8MoHhLA
q472OnXuo6xGmu+vAu/+NIZ3/QZWXrnrYR+eGkU/a/Y8JOED/3Fsq74+TPv9
JcOnZh04MG0h+3vPmn+ft+iiUusJynf/B74UsHvTigWsP1KnrIHnn2OvE/5y
2PUSWgvbKDiH2sbQfN8j8B//ostdVfT8ewP+qezbNzeU8j2/hHmMBeZFLGTt
VfEQvO2YQueZBlrvPV2Ty/FPsVxTvJO130pr4IsNYh07PlC+l4Owa/dDTkA6
G98MuA7XCLc5B/Sz/mpWJbxp6pSZib9YfecOwLFHVZRvtdB+d9O0cH50RV9f
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
nsuR0BghfutOITv+ZfCaA/s1HafT8bvA1+bKqI8boPnP52G+aR9X21P7ZfUQ
jgyqyfObztrHwDZ4xIp+jZEzKP47PpLLWdX6fFTNcvZ81KoLh01q48yaw54n
pZzgmGVNDqkitN/lWfhbsZ/VPVl2Przz4dielybNnux8J3FhlW/eFu+vUPkX
i0J/fYv2E6toWv+xGH7rpPpohhnLH6O1HZ60aInQrSBWH5xC4ZiWjsw06wfs
+HNg5bF97x4n0/F/huNjVIp8NlP+l9HR+D2to00UhVh9UNaCDwb5uEispv0e
7eDOBo+9Bqup/AfD0hXCZz/QepLsLHjHyrsNyRMo/t0I/y6z5omj5xWpkRe4
HB9VvYIQJVZ+jdThccXmDg+VaL9LW1h9y+m9XwRp/UMQHN/UOUv/Jbse9ffg
Wzte33nRQNf/A3y9YqNWsTDLR6QlfBH9IZOyFq1k9nlOC+Av1V8tsw5S/pNN
sEP1UZk+fcp3HAB/5OeNMd/B8tkM3IG1Lt/bYPmU1Q/lt3D5yjX7XvWy62sl
GMPldJfNdn1Zyc534FxYREZwTJgb7fdqDVN+f/b5rf6w38XpI3/rsfMhdRte
K9K0PMad7n/18IhNJ4Xf0HiMN98lLmdfxLDSrhKK/86GD6nbRP0xZuev3hKW
iXB5zhtD+S984T+jF8QaR7HzoZVy6d/8Zen6MCfW/3KqhWOLTdeuekf1/y/8
bUfc6KzprLyVzoxFe1EsNKR7lB3vwFrYvYMbu+Eme15TPgqPmKc5ccCD5v8n
wUoWzQ7Fuux8BlbDntbLH3yhfIfZv+EzMdlLf2rT/G+ly1xOAP/ZHar6FP83
h/frdo+7SM8vRofg09+b1/puZvcf7wT4O0+1A+9iyn9VBds8OLIk6SWt/xmE
VZY739/azj5fWDEO/avliiW+X1l90TKFD+wu+bpuNPv9Tt6w5SS3n1a03330
VThv0hWLPbNYe1xaAa/qLP687Qbrbw30wR95dq3psaT1Hwrx6D/+rRw1UZDV
V6tV8LQgiScp3dT/2Q+HXtge5/uQ9juNg4dFdE0H7Vh71FoG7w9Ie3KWQ/Pf
e2CpqbJPZ2lS/pMpV7gc65N3s/kOsf6CtxFsxVNRM6xK138PPPGmWHDJf/b7
vgQfvPRTUmsJ7fdRArtVLwp8VUbrf7rgTy/8Nnz/zuw06Sr6//vfS4ql0frv
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
6YR7JC7rB01m7aNUUprL+VF/9Mqe4yx+3q8PH8vq6bg6g+ofOcPOOekh0+vZ
eMjiHJwgvPtSigjN/z+GxV+Yry7Sp/n/L3C1ZP5i9Srm9okyOD7buA2ft1D8
RxcesZjDo7qX1r/aw50FT72Fimj/p1PwpumT8C/tf/QQzv7RG3+E8i0lP8Nr
A7w/Jk5jnxuOl+VyjMKeGQhr0frXRXCJhPTnLxNo//dd8ImwIypxdlT/NgLu
LY+adS6f8j9y4c/arY8uy1L87xMcryuwxUGV1v+LynE5/507JWIpTu8/2nDY
fs2Xlyh/qsQGPji9xPIZ1SvtC4N/Xd85vnw6rX+/D2tv7J77dQ57/pt9gFMW
CT07fpH9/mChKVxOZDS3zP8bu17ZGvCX6P7mNn12vtu2w6l+z93sHSn/NRT+
1LteK9mN1r/fg5+r9rrq0/3u/R72tpCPFL1K8W/+qXhe7C3TsbNj7a1GDXZJ
193L30X5r5ZwyOWmqN2Uz6F9HNY5L2Z15Ra9/92FV4/b5hcczT6PqYPLfPqf
7FxD+T+88hgvHFw/IFxC8Q8VeM7n5R5XJrL+VNEC5klp1G8KYPeDWSAcYDKz
tz+W3b/Bt+FZPik1eV/Y+De7Bi77b3e3DOUztvFM43KiBXpXFRXQ/j/K8KKs
Uu+Cq6x9GW6B7Qt1D/y5zPp7b394lZSP1mpT9v2Tb8IfO6uFDtH8Zk0VLN39
YPSn1TT/MQyX7g7UuP6K4l9K07mcWisxw1gO1f/YBL+Jmt7VT/kRMYdgPcm5
y87Es/65JBk+ZjTyoJfyCfoq4MzZc5Pl/lL+4yA8WLdzd78huz5mCjO4nN8N
YeNdZFj7DN4AF/0Z+3jqfsp/9YPDHZJdDorS+tck2FHJetISX3r/K4d13lTe
jB1H8c9++HhRjbJiPuW/zZiJ8bFmYPwlE/Z58jrYxm6jjBvlp9R4w1Oygxab
yLLrwZ8AB710Gb9aip0/7TL45Yybo8LE2PWz74UVvt+vPGlJ9X/lZ3E5/n4N
i0QdKP63Gl5z0uH5+V/s9/d5wDF2I6rbaT8fxStweTWn9iztZ2xWCo+76K/u
mc/Ob/BP+GvVIpP+MGr/cgrorzVkts7LZ+e3zVDh//obNh6X3A+flbh3LEya
fR/DONh5m+k0eWs2v+5dDI8ySbk+3pPy37rhuupDK11esfZSI62I+6G2cv2i
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
rD0JesIPZVKtd0iyv6dzBc68Lz7Pw5ddD8dS+Hy8e8WMAsr//QkP+fifOLKa
tbdSuedcTvWz7z9yXKn+syH8WMr7XvQaiv/uh6f1JU5rsaT9P+Pgce63Dvhe
pfovxfCUyv+073+k+c9uWDp8yx9FN2r/0qVczp0C35Q7f6n9r4ADGhRP5e+k
+jeucL/wtRfKTex9yDcW1jVPnW5pTP3fE3j/ylOjlthT+++EZbd1F5mosuMT
nPwC44EeRT1rP7r+HDh6if4D3mjWfhyd4VErkv/q0/xC7Dl4dmSG7/BFiv8/
hgPHmKoqRTxjx/8FvrgpKpDLw+JXShIvcb4//SdywYfdDxZL4WDzdh+FVsp/
d4THTBS6lreb7v8zcIHM7ey4Aap/kwcfKWv4/puX6j9xYbGrvx8bJ9D1Fy/j
cpb735eUoP13fZfA1sMiix2WUfvfDU81CI4sqaTnf1TZv3ylumO+o6n+90P4
fafRrZpu9jzXaS37Vx/HaErpbfY8dBz3isvRUyg1DdSl+L8ObD3NrefaZrr/
d8Jh3+oq7vGw98P+cHjpqrJVd/ZS/ZscuHN3YozmKJr/boZDyzNU7/dQ/RuR
1xhfTtPcrbGWPZ9ztWAdAQmjCVdo/Yc1PMZ5l73Vdpr/CYPLz5+b40nxDqMs
OFlceqTOktY/NMGn+WZfDLSj9R+C5VxOoWZ2L58n5T8sgGc759yxrKL3H0v4
hnf6itGKlP9xHP7t4riVh9ajJ9+Fba59O5yqwc5nTR1c/oRv8hRXZn6+N2i/
+1JlDiyl+O98eImTP8+427T/lQVc1vno+JdZtP45EH4V8tgjzZXiv7dhH3kT
zWIPyn+pgXc9azOqjmb5/IqjKjB+477aFGRO6/+VYYktnOyOBaw/DN5S8X/r
Pan+pT883nKT4ZlVVP/5Jqyj1rMitJjdj5Jv4a7m69GeXbT/2zB8Za7m0QIp
yn9T+g/vs1eF73o9Y+Oj5E1w78/w59OF6P3vEDxbu6wtMZziHzdghbUGkk+1
afz/Hzz90ZbJLrRezH4QfhSf6rqpguK/CpX/1uNsWuVB++mVbIAzH0f8FbzC
fn+fH1wsM0lkbBrtf3UNfu7oYeprS/nP5fCEjpcZjdFU/7MftnWbeW3aPdr/
Z0YV3v92j/svUIDyH9fBcbLKfacVKf/LB+7bGWMxht4vDRNg130BFY19FP8p
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
pivu01h92hIT+JLlGOW1xm7s+A/ArtmCuyRDWT0IxevwMge9F8pfWD6s2Rs4
8YTQQYXlbP+H4D+wrsarpE3ZtH/HzO9cDv9AZJL0ENVvN4aHdLPyAxVo/O77
/V+9Nt4/Z1bT/uWJcOb4jZfXurDxm045nCSuLCj31OGfHfthsftORYd+Ufxy
xg98H3f/AXU7yl9eB3tmBeUdofhAvze8x2WSQd89ls+rlAB75eXc1vvM6jta
lME9d0VOWDjR/kW9MF+NiGp/MtsvJVf+J8ZDGh9rLJey89e+Gn6iX6uh0s7W
90p5wkfVphe17Ga/z+gKvOrn5E9qcqzehW8pPD8qrru+2+6fU37Cw82C3crX
2fmtlevB+2igQsxiN/bzgqvgMS7i/cseUP7mfrjJLMG+7D7t3xQHv96obCW2
j/18bDEcMHJZo/MuO3+l3bDO2lUf+7oof036F5dzeF7LvIW0Hl1pBXxT6ftn
z/9H1X3HY/32/+PPCBmFMuqtoWQ2rBCKs5CKpCQtDdmVolAokpV2kpSGJCGV
SpRNEhKV0yqjoVPLTFLp++h4Xp/b7fe7rvc/95s4z+P1OvZ4HtKsfXbYAcsd
/2rMnU77t+PgvqWGnjF+7H6O7GJ4/+27eqqBziz9X+DPeiKrD9m6s/TLfcd4
QOHlZfXd7PtYcuDLdzflao5l93/4e8JTSmQUzF9Q/Ooz8HEV7/x3URS/ugAe
E3Zz/MfJLD+KfIJvzErmesmx8mowbgDv72iesI0Va2/c5sOt6av4k2dT/HI3
+GZg0LeF1J8pPwULXtDW475hHsyF5/NXvG7XZOehVT/Cvf2TfHkc2r8t9QN/
z7fb1beCfZ9II5j/h6PmyIesPGQ7w3f2BcvN52PPg3cc1p+cabTuL8tP8g9h
2eMLTzsVsL9v+R7u94o87UT3nfuPHsR4YmHjM4k62r9sALdcDaktMmL1Q8MW
WNtkcZ/YLYrfchSuVxpyUJvM6heDB/DPGYVJO/RZet3a4eDr6n0D1nR/qdhP
jJcUTlQ4UXtXPgee+LNDY00bpX8jPEXi3IT9y1n+Vj38799Luo36uYSVV4d7
cMC61u53UQ4s/S3w7sIdx++Lb2DpFxn6yLGaHiJgv5C9b542fD01pu/1Bvb7
8hvg9TZK093/t385As7R/irGpfUJ/zvw/RVN0Yb/i1/SDN+4cFHNNob2b4/8
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
epriV8pq8jgdkQHP6k0pfoMpvHHMqpAbzjT/5wH3CZVFjzFiv18eA9fLeQcp
1rPyM5j/7+eLLr1w30jp74Rb31wtSL1L8QvGavE47qeK5z+7RfGr58FzXpcm
d0Sw55ftCj+bMm5O+g1WPnkn4YWuVXf5btL8Vy5sJzKvq3kES59lB1xcGDgq
8Qcbf/hLaqN8P0x+PLncjqXfED48Vs5qeijrzzdshVuy1zyXDGf9fZHjcEdZ
0Mfcr8wGObBGc/m9aR/p/PY7eNT6s5lZdD4lTkIH7a+C44lmd9YfLNeHH/eN
k9BpY/udBzfDAulxLQpOFL/1CGwX72J4roCVB4cs+NbllzGbqb8a2Qav6Y2e
XuBA719UF/3r6s86vFS6v00XLjV+F3fxD8Wv2QgL+C+7uzqH5n+i4N/PFH+M
30r5/+6/f++tWSn+lO4vfAOHuT82SDtO81/Cc9A/m7S7sZnih4how5/3HzA6
PZXmP9fDTl/tXUokKX5NOGw8bvSc+YIsf8Tdhm2P6Xz4O525vAmuDSqqPjrT
kaVfUA/jhzeTzLnjtrH0z/7nM/lrqlxZ+hzWwPs+Rtu/ofgLkaHw4OAdbdl2
1l/LvgnvFuX475Ol+7vq4ax3fHscjdjnyfPr4+85x695ocb6K5Yz4DVhx2R3
+rH62t8eDrm25Fwr3Q+YEgwP5rwZscqa4remwtu9JQIq82n+tw5OOnRBdJDu
GzX4++/vJ/93qZzuu3NTM+BxRs+9nuDyiT3fuJVwyXbp2i+X2b8vD4KvFX+V
EUig+C3X4Y+ZXq9sqf+s+gKuEdy+w8qMlU+H3/DPd9vdUntZ+xCpPBf5N2yx
RC3d75u9HA7Lmjdl3B2a/94HjzvwUjqJ5oflr8HhO+69XT1I7/85PF/18Zx5
FL/J/yecU7RyZv5cVt5SphmiP9uzyHwk9e8brOG1Mk8epY2i+T9/+MuUOZdt
+tnfN0iE621+Hk/7SeW/Cj4hV1zce43i9w/AsjsFTT4sp/g1U4zQfvnfWmVs
Rvc3LoH3vMlqV6H4rqp74HPPLji9NKf47Zfg3yJq3NVHaf7/KVx6R/Gx/m32
edl9cPmxHbWtCTT/N9GYx5F4ukcheSbFL7eEXWd/Pb8pnvbve8Ojdk9P99hH
6b8Af4o9cdWD4n2J/DcP+WFxSurtUay8GpjDX4LGF3bTer2bF5y1Py5DlOZf
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
W+HJLoUnLL0uV2G9/nkbX9D3j30GR5t9OnWBxu9lP+DA5k1TlNvZ+xhQdEH+
vXbtlb07y2/KVrD57p3t0hLM9r7w6SW313f9of7PZTgzTelsnQ+1/xVwWnSH
5VpxisfdDxstrNbbX0rz+ZNdMR7Mddp/7A97PxaLYbvpO9Y43mff39cHDk5b
KnnsMft5cgKs4HaoVM2H5VfuEzj+ZLvUxhRKfy/sMDPxzJ/LtJ9bwQ392zd7
tv/cwN6fiwVs9/Da/kdX2H6f2J2wW8Mhm/V3Wfkqi4fTJLO+TIhmzzu7DA53
k63pfM3qf173v7+3a0tXrzedR/7PnccxHW54r6zGPs/SHPZJud5k8Zv2s3rB
9i2Nv/bZ0n1U5+D357kPT/1kz6OhBG5QqfPMr2XlR+Qb3DghbXsizScayHug
fkgVdlpRx9pTtwVwa2LNzitL2f6AuG3w+YC2ZWIZbHxVHgtL6fyqDYhk7cVg
Iexwe8Sqn2dY+lQ/w2pyD+QyzVh95yDjyeMc3i439b909j4jTeBQi6oVmers
+2S7w2uXTrls9oqlj3ca/vMjOZdvMcXjzYef7V96fA/Fc7LkwVfuitb9lqJ4
xNLbMF7aofee/wbt5zOG1z7U+Hj9De1ndIGnJjyQf7GXxv8n4ZvT8jhjrCge
5yP4iP2raQNbWHvs9gEuXOSYaruMff+4Mdt5nFGvPOL6aL65fC5cH9/W8fgm
7Wd0gvd+KX8pS/ErVY/BC4Rt/S/U03x+9vb/W09i88eRb+HTpT3d63+vZ+kX
34H3NfJD3Dt+2s+tB5cJ+EwVHk3j383w23t1uyclrWPpj4afdxW85jix9Xz/
+zD/Elfx38dpPrcVDrpxue6sKHseDaO8kF+eDCfMLGY/F9GF3Sb3GN+k+CsG
jjAq0JV3wikeQSRc/FP+wvGiApb+TDj+tsDKQ5PZ+ffy17DKnozyXXQeY1Bo
J9Iz2/tgxWqKR6sFPyoSmjnrLsWjWQc7vyre9oPOU0aGwVdjt5/nGNJ85i24
NzdfYK84e368RviNwoyMYjc23ysvuIvHEfdOz7ATZn/fchZsrrXdzFuW7mN0
gA3arWyeZFE85oPwHe7pE0MjaT43He5cuMjm7ynaz1YP82248yvakJVvAz5v
jEf67MRF7Vj5cdOAJ9VIjlKRZ/VV3Cr4Twa/QFo4y7/lB+CuuTZtJnfZ+xm8
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
Ub2Hnz31EO2qZu1T9ugUtDfPe2Wdwmj8bwDzL177yy2E5n+dYIHqL6W//7L3
YXkUVlnvkbFdhrWv/g/gjU1Tjo1/TfEc2uGty68ILK+m/exiN3icc1I+78bR
fYIienCOfa7Z22ns+xlsgouUbiQEn6T0H4Z/c7VfGevR/Nc9WHbGQLWyAd1H
1QL/eVb2WEyY4hmIpOL3ZcTXFxXSeWYdmDfq7oyC82w86bAB1pApzNr1iqUn
MgLmSzFodRWj/dx34D9/Nd37xWk/dzO8JDJKOIjma+WF0lBfcDq9BqTY+7XU
hKNME7ccpXgh/mthzZPqO+ybWH5POQSnvRfUH1tA+9kz4M7jo3/9jqHxfyN8
3Sb+y0SK328gkI708TIzRatoP/dMeGKq76kni+g+ztXwz/LWTZWJtN8zJP3f
+VARn6IlrP82mAanKZheEYmmeLRceK9CbyH/LJb/HEbcRHuaWD0vYja9f3X4
58YJmiusaP7bDlb1c9Y8eZe1F7z9sO+buY+fDtP81w3YZOLTATchVv4sX8Jr
PjzMnraU9j/+gXdxU558zaH7yFQy8PkrzTRERrLxWIMtvLwj49tVf5Y/RQLh
6HVRJd7NbD7fIBluj517amElm790q4G1Jp9+OjuexXuIG4LtrJSXPxJg8Z/K
lW5hPF37X9HYPNaeDC6DXR2r55mYs/kw1b2wiemMiaGadB/jVRiDYSm/UjrP
8Ayuenqn7wLF68v+AWvF2ZgUrKX5b8Xb+H57VWt6aLwjbwUH1Iaq5cvQfldf
WIJn7+d8ku4jvQw3aawxC6P46CkVcFWtheIfURZ/u6EfNkv8tik4n7WHIpPv
oL7447NZhfabGCyGP5XkfWjfR/G4feDvpSmeAqtoP38CnGfUzDcYRu//CXz2
9dtxIg6U/3vgoxqTZicuZP0vVYVMtC91wT/uVLDn62ABF23+fOl5CsVj3glP
zTzcFK/B2v/seDgieWb/K22a/y2Fk8fvzK6n++3lu2Bd72vpeXT/sOX4uzyO
RaLLoswRFI93IXxPVH14QRjt/9wOX4xfccx+I1sfbzgLu96zvTPjO4sfJlIM
e836mPbQk+0PNvgCa1al5E1wZb/vJnsP9cli5/pDTjT/aQrLqfJ0Ivlp/t8D
ltXJf9azhvZ/xsAlgn8OmZ5n5VO1AI5p97l9jI/dP+jQCVscVLoSnMryS+TY
+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
vKfrRMrUUpr//gbrqvE2G6+j+xjla3icd/7XVM096D6yBbDq0/slD6bTfWzb
4JbSiuy1PpT+s/D5He+iDxyleK5FcODhTIsJC2n+6zOs676+VE6b7uOTqcV4
vjO16indJ881gTlNHaHdcbT+6QGPdKoodvel9Z8YOPKaZYjDYXr/+XDV2jb3
bzZU//HgNzHtsjc9KR6x9Av83C521H1RSr8xHGFeXOvyi82HK7vCz7+/OvPG
lOVf+5PwtKTziZG0/yP8Eaz3lG/lA03K/x9g+VVB68UsKZ7VmJd4f0/rkkbH
0v5fQ9jtdMqE9JtU/rfC5dq30tfGs/Liewxum1ZrJD+WpSc5G5Ydme94zY3i
cb+FZb498p+bT/WfxCvkr2cjbvVT/Hk9fXhm1Gv51wPU/m+Gz/GPVVgazfqj
sdHw3gj7AtOprHyX3YeF+EN1fCaw/sZAK3ylW/Rk3T6K5yNah/pYYaqpvhr7
fva6cJT24coybdr/7wgnhNj3bH5L8egjYbl7/IkpWRTPNhMe82Dyw4wSmv9/
8+/3x1YoC5+m9y/MRX79s6dlfzbdx6EFR8g9Np9L91kkr4Ofryr4lvCA8n8Y
LNszjuNuS/v/b8Myop7GK2Mp/U3w3YgbO6PGsvzqIliP+kvf5V3UZpafY2fB
M9085S7R/W9lDvDBKUKq82Ko/3MQFuyY2dO7iNr/m3DRpsWjU0PYeNK+HuZY
BSm4jqH08zWg/5R919+9nfK/BrxjtubZzpOsf9ixCjY5fL/uvDbl/2DY7PCM
8s/vaP4vFQ6QfJ7s0k3xfF7BrzK8u/sesO+fPNzwL16iiEO0B8XjVm1E+TG/
miChQOt/Kxv/L/4Yzf8HwXXFM1O/utP6x3V47le+R13U34qthUPEnR4E+dD+
51+wmV3Iy4VmtP49vQn1S6WEQMJKev/LYRtr92VpdL+h/T44TF7puVQV3ceQ
BMdUrD5v8p3lj6xqWF3gyZGobxTPaBBumWS2VJbO38pOa+ZxZvD/OLUvlu6j
sIYHy/dkpTvQfcx+8NY3TfG6FB8++QqsIpOyMZvuP+JWwm2LswtWnGfzIUID
//69r+6SMToUz3rKa9S/FWMqrw5TPO8lcG2ki4rHH5r/3A2n2jzcHUL32Zdd
hIOvNkxISWTff6AcviWj1LxHjJUH5T7Y0b4zpfw5nX+Y+IbHUbr24H30e4rn
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
eJ6qIzs5alNVkrwPs/kC2ZVw53Oh2Z/p/h2LIFg8KFQ4vo7iOV+HRZ/Nzrdf
SOmvhY+65XM2UbxG7i9YM3reRYMUlj+FlIU6OS52E9Z7ilD8g+WwX7TCjYCT
NP+3Dx44ecCzlOLvxSbBI9d9vGRB8ZPKquEtZl1/93Ho/MMg3GC5VfvTfFr/
mCbcyXmqkLs27Sa9f2s4NMR7aK4eK9/hfvAk9j/2fLKuwG4FYgX+B2j8Xwnr
fynat3geyx+yA/A7g0v8rf40/p8i0skpNDutnpVM859L4Jkb/yYsSqL5n91w
8okdKas0aP/rRbhLpi1fRoruo30KBz2TXp8YzOZP9Prg9UdsW7V7aP/7xFGd
nOGvsjEq5hT/YREsM1329gvaj1K2C5acL2wg0Eb7n8/DecnXXVJEaf6/DHZ/
8lwudi6t/3TDSVajzlXT+lH4BNFOzqcTC38pF7D8kmUGm6UqKd1oY8+zYwes
flli0smllP/PwX847z6VlNJ9fCVw0muXLhO6/933K1zxquhogSrt/5YTw/P/
cdXu4Heq/zhw/RnPmy8ofo7QNnibrkWVdgirL/RiYYdEmW138mj/XyGcuD4t
OSSWPe/YT/AfyU3OY6dR/h8n3sl53m1zX5Lmhwbmw88Sm5/N20n3mbnDRzSL
xPMpHrf9aXilwdHCJYq0/zkPdvyitL3xGau/sj7CGz0GKt65svfRISXRyZko
8Pez+jWa/zSG60eIV5w8yOYTLVzgU0adyQP1lP4TsGSc/hndAvZ8kh/Cs3Si
7F0T2Pfnvoc1PYPPzKX7DoXGjEb6udojDG5T/Ie58C0fne2HftD+XyfY+MjO
T4evsfnK2KNwc9SSxth4uo/4ARzzZtKOS7nU/rXD6gVh/4U/pPVf8TGdnP5I
MX99G3r/evDyG8M5+pEUz30TLKbYUnF/Lp3/OAzPlOnXUVdm7XPHPbgz6Of7
T6to/2crPLE6M9SUR/GvRkmivJn6VTiMo/3fOnDfoS927zLpPrcNsGZqQGHC
Tlr/iYDfiOknWStT/Z8JTw23nSlSTPcxv4atU7+Pd06j+S8hqU4O187jYPli
2v+vCV/yiT4S9oH2P6+FIyc170+n8wADh2DOUYXSqCyK/3ALtl+iONWnmea/
GuGQPRNuquhS/S8gjfbh2sBlDzqfnjUTflmuODahnM5/rYZjfk/46aNA6T8I
Py6TeFH6mta/0v9fU3ceVnMX7QFcSUJRhpQhZUhEEQ2adJIkUpIGKQkVUhHN
pGhSSjSqKA1CydREKVJOohTSgEpJJyFTEnG/7173Ps993vefz1M65zftvX9r
770WHKd8e3nGdqpH2ghvzKm4Z+RE+dxHTOJxxJXLNJLofapxIWzLJmRo/mMz
/DZho/aE29T/+8N/JrmNuErv6w6X4DW9t28b61D+r2fw5O8JYSJR7H23ahgO
jLfSeviE3R8D8yfzOEpCLeXaVP9E1hT+uXTs1unaVI/SDy78dO1GXwbVM8iC
b756kPkzksY/T+Gz2zUfjTKn/n8IXvD+XtedzZTPf94UHif+YKKLvxLNfxjD
703DjHTtqP/zhsc6tS3fk8/Of1Y6/Fy57a2DE13/J/DBbKvLFd8on/0g/Htw
QuBfTfb9VWaL8zgyN/L5jb/S/qf18Nrtsp97OTT/5QHb8cQcH5VRPvdUOOdc
1IlMyj858Aiea1fuYc9h50/2B1zqvmOa7WLK/zNrKo+z9/AHuadWdPxr4WG/
KoFEWs9e4A5XjZNbFStG659T4KfCI5KlLtD8Nxe+N9YvRDeUtcf6X2GfFbze
K1qU/2aGBJ5PKeGdIpSfM0sflppb8zfPg55/N7jyw4mk6Vbs/AkmwWp3Tx8u
51I9g0pYadhL4eBsdr0dPsNzA9aWXiql/l9SEu3B1XHOF4Vp/nMVHPG4Mt84
heL/+2ArE8XHP9+z+0M2AS5+URCxR4Q9z+b34dDL40dt0aX1331w3TYzdZGx
dP3Fp/E4lw/O2fz1NI1/deBTQQVLF5SxeK/4XtgtynSo7hKLD+vHwv8EsuWc
t1H8twz2mha07hnNF2fx4EF5v9sZ3yif9aTpPM51UzszawGqx60N2y59NlaE
1surOMERtanl8n40/38adgyLuZFznOL/JfByT1vHwDRq/7rhgSfC9ebO1P+J
zuBxXp07eEl3Pjt/shqweoFzr8Qxdv7Nd8GZTQvOxYhTPdooeOlk7fW6lJ+g
oPi/n2fY7Dem+j7dnbD0paL1Iwzo+R8/k8eJ1rcevWwptX9q8OmOj4MT8qme
gT0c/rjomP8Qi9dlRcCDUr+VRtym+c8CeEpljUwv5VPkvoWlp465m3KUtfeD
wlJoL14lDOZPp/VPqvCR3Hszu17S+q/t8ETpWjHpWop/h8OzfrklhC1i7U1R
PrznNKfzvCy9/7XBGSKT1NX9aP3z2FloP6YJam58Re9/y+GWl3Of5gtRPmtb
eHTzZYkdw+z8Z4fCaVvaFs1VZOez6QZc1XkyT+cD1TN8DS8NOzLlWA87PrXR
0mjPFizSlqR8lk5L4c67O0eeovhsgjX8ym6uza4/9P4fBH96mC4YG0jrv/Jg
4ZyVaQdE2fMk1wKXitk+3XeBXW9LARke51JOUaoCrVcOVYBbNp7iil5h8fIi
S7hg3kLtMZT/uScQLl4j4P/XgOIfubDe92r1HT9p//NLWDq81KewlN5/+Wbz
OHd9wyLeHmP5/LLl4e6O6erjVrL7v2kzfNJzzuib81m+SqGj8OlCcQf7dvb5
apdhRQMRtXM2tP7tOTw7fb66cDY7Hwl/YW5P0oPIE+z55MrN4XEiM0cFvQlj
6+8GTWHJyrXuV86Vs+M/DA8d2VNy8Awbn1tehI0SXWQPStP+53pYo/DHA411
tP79N6xebHcwdwz7ec+8uTxOYrTRBx1Hin+YwH8Cq48f7qF6hj7wybLb6hOv
UPw7A/7yRmHQrpP2/9fC1sp7f+00o/jvICzGVcb/lM99zjycv7rGbfuOs+up
ZgT38i583a/Enm8nT3gwZXDhyslsP2xCGvxWvHn7WwvKd1sD/xT9JZ9wnl3P
wR/wvCdv1Uvp+slJy6L/qRF8GTmP9Y+WhrDe5xHjlo2g+O9BmPd8bsayMBZ/
LzoH34lcutlXiuWX6uHCd394ll+5ztZXSnyDtZ6OcY9xpPjfzPk8zqFXaTff
hlL+jzVw1OkjF0/R+0j2ftjU7FPMEhPK55wEN85MvXb0FM3/VMHWg6eqKyh/
tVo//KRDUftqFZsfcJomx+OM/6qan5bB2tsEPXjOyBNbRlWy54vrAkf8FLuU
8Ii1j4MJ8PxfEzd22lP+kwp47e8vlr7LKJ/5R1hJrG9G7xp2P4ROXYD761lO
3ygLyn/BgR/+4CV/p/pvPXvhe58mLf84mvIdx8F7onkLVh6j+F85rPlwSeuX
ixT/74ULss6mX7Fnz3f25IV4363WbM7So3pu2vC7so7iVTuonuFueOGxMfOc
XrH5PLUzcLzTf/+x9e1OpfCE/U1HMzfR9X8PNywrq//aztpHrpg8j7NLWDsh
fwvVs9SAP/r4FkkMUf4bBzhGZrX/kUnsfrI8BX/drRb7L4mO/zZsqH/PO3Ix
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
9w/+BE+0/ihm/ZHivxJmGN9zn/qYC7PP69aFrY3F38V30vO/DzZ5P/HlYDd7
v9GPh3utJm2Q/UP53+7Bn84K8I0bZv1N1gfYdvToCsWDdP9P2czjVI7a8c3o
FOV/1oHvBchrBcnR+HcPXBr9t7HAj32+Qwy8UKmmJuQI+3txd+EcM32+rjTa
/9UDX7+0vOuVI+X/mWjO4ywdcS373G6qf6EFx4tv4t82lua/HWFZb27k31ha
/xwNf8m7LsNvQvmf7sDGL+zLrwqw69f9Dh47qu80l9bHi4taYHx82qVoyzJ6
/tXh42GF3T++0PzPTjhj54zag/7s+LIi4dMJd1RVDWj/XxG82q20VVSI5n87
YdXDsk+FKd6gImKJ3/euU7hZRvN/qrBez49lbr20/2k77G2X9OI5jW+qwmG+
+pza1ZS/fCAf/pzrYXP+GI3/2uEbrTNFRQop/9NYK7Q31l/6dlC94ODl8LSJ
KhYrqN53gS3cfjHC/Uwoxb9DrXj/f3+C+E14dGRC1MUhyv/9GjZ446Ib40rx
/9Fb8HxFrRyqrqD1P0thr9l3l/rtovl/azi7QHWTVBnlfwmGhwKSA9oSaP/j
NXi6/wK+JmWqf9MCPzr3rHG7DMW/Ba3RXz0WGZT5TflPl8CJ44v+TplB67+2
wBlvJqbUU77XnuNwUJR1rGc+rf/Lg72at2lrUL1eg2Y4y2+av8sB9n28Rm7F
+80Q/7TftN4wezGsZm7Ku19L678tYM9U84nyWsxCgbCI5vW+7Reonl8OrH/0
n/PnZtb+OjXCk1aktPpIUfx7hA2P45H/TfiuLvs5dyF8ZW9iudwz1j4NmsEr
I2+eu5zL7jc5f3ic0PCb0cZU/+oS3N3Jt097I9XzewavPcP9MyWC3W9Fw/Ae
yZfRizso/8d8W5y/8p12SktYPFvCFPZ0nZyY8YKNtw38YLNUXctjyex8emXB
/wT11+xax/qX7Kfw4/frdRQ20PqvIdjF6Y9dpQKt/5q3jcf52yx1sZzW+6kZ
w5p8vGtl1D86ecP/uEueWoiy/iMhHZYKKv33wJXl0+I+ga8+1Ba7nEn5P37C
RT5XCn2uUPxjth2PIz7/fPW6vWz8a7kedpcv3sCzpfivB2wT/n2Bkjd7XotS
YXNRix2HBKje2yM4ccjxqn0M+/cSP2Dn0Q2JLy9T/a9Z23H+o1bdeDuf5Uvy
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
ofzOr+EnKryfRx9TfuPRGTzO9krHdctG0fzWUviyi//Kb5msveJaw60i7wZW
NlH7FwTvDxXgJqZRfctr8G5X7wez/On+b4FX7bzWanWF/X6oQCbeX0fLC3s8
Yd+vSAF2Tj9v4JnN5mN6LOEjTRoKpVQ/ROIYbHp/U/nx/ex91SAXTmiz2HN1
JbvfvV7C0kIOfl82sfshmy8L9/Mr6VdtVG+iSR4uNW2K/NHM2kshczj8YZzr
Pxv2fqt2FNZYsWtObiQd/2V4a0F04y1Dym/9HM5f++C930+q7/cXPhOkOtV9
A/Og3EW8H36bVvOskbWfcpvggH7jZv5gdryWh+EfmoJ3uqRof8dFONDKp+H1
OMrvXQ+X3AqfUs1P+Z1+ww4Wdr4pAVTfTzabx7nzIfnMOxua3zSB5e+P1Pa/
Sc+/D/y+uVjkyVSa38yAlZUbtZdG0vr2Wjhr58nd5x6yzxP6BTc3X0h0uEr5
beZc4nHOm3j7hRaz43Uygr0K0rJ/t9H6dk84earm2af0PsNNg+ufKayMv8nG
34M18OJv6cH6PlTfcABWOWX6cyIftf/Sl3F93jwfP2+AXe9QQ9jDI/+i4HV2
/xUdhIuVHGU0qL5gzzl4jsSb1t27WX1diWr4TYyW4fsEWt/9DX40K+FPQDV7
Xr1mXsH3uZmdkxJF8e01sNS/8xVpxyi/+X54rFHE9FETaH1/Mnz65a3QmVS/
wuMBfMXdXaeXS/VdPsGFMyrLltdRfEsiB+2bW/sULU12/gRXwSd/GDpP+Mee
f5V98PE4y5GSclTfOh4utEvN25NI6xvvwXviRfhS41h/VPXhv9+fkzhDX432
t07J5XFCrn6qD0yh/c068EydVec+9lJ9kz3/OZzf+ncpex6DY2AlAf3gclo/
VHAX/hCkscCwhur79cA3yg7db97HPl980lW0T8eye2OGWH+qrwVP4MvdVkL5
lj0cYQEn7k2bFBrfRcMyr4/+CW6l+i53YN2EOfaXJNl8jmA33NS0t095gPb3
ieahvZFT1T5A+1Ed1OEzWaZXulNZexi3E5afO2225gD7/lWR8IEi4cEuN6pv
UgQX3Vyl1NPKnm/ZTlhjmL/y1Hta3yRyDePPhoKc0fNZfxisCsuW3k17P4bW
t22HSz4H7d2lR/XtwmG7XItDE7ey90/xAvjD5Mu2a6jesX473D51tO1Laarv
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
ON4=
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{2.7690732*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->
   FrontEndValueCache[{{Automatic, Automatic}, {Charting`FindScaledTicks[
       (Charting`getDateTicks[Automatic, {Automatic}, 
        (Map[DateList, {
          SlotSequence[1]}]& )[
         SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, Automatic]& )[
        SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
       (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
         (Map[DateList, {
           SlotSequence[1]}]& )[
          SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
         Automatic]& , {Automatic}, 
        (Map[DateList, {
          SlotSequence[1]}]& )[
         SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
        SlotSequence[1]], {Identity, Identity}]& }}, {{
     Automatic, Automatic}, {{{2.6823744*^9, 
        FormBox["\"1985\"", TraditionalForm], {0.008333333333333333, 0.}}, {
       2.8401408*^9, 
        FormBox["\"1990\"", TraditionalForm], {0.008333333333333333, 0.}}, {
       2.9979072*^9, 
        FormBox["\"1995\"", TraditionalForm], {0.008333333333333333, 0.}}, {
       3.1556736*^9, 
        FormBox["\"2000\"", TraditionalForm], {0.008333333333333333, 0.}}, {
       3.3135264*^9, 
        FormBox["\"2005\"", TraditionalForm], {0.008333333333333333, 0.}}, {
       3.4712928*^9, 
        FormBox["\"2010\"", TraditionalForm], {0.008333333333333333, 0.}}, {
       2.7139104*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.7454464*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.7769824*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.8086048*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.8716768*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.9032128*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.9348352*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.9663712*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.0294432*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.0610656*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.0926016*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.1241376*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.187296*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.218832*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.250368*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.281904*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.3450624*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.3765984*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.4081344*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.4397568*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 
        0.}}}, {{2.6823744*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.8401408*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.9979072*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.1556736*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.3135264*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.4712928*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.7139104*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.7454464*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.7769824*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.8086048*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.8716768*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.9032128*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.9348352*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       2.9663712*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.0294432*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.0610656*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.0926016*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.1241376*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.187296*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.218832*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.250368*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.281904*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.3450624*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.3765984*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.4081344*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}, {
       3.4397568*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.008333333333333333, 0.}}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{2.7690732*^9, 3.4712496*^9}, {0, 0.3982569449848261}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{
  3.7098438127717686`*^9, 3.709847922134967*^9, 3.7098480154502497`*^9, {
   3.7098481993492527`*^9, 3.7098482146594167`*^9}, {3.7098482667141733`*^9, 
   3.709848290592108*^9}, 3.7098483647554345`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "flightMerRx", "]"}]], "Input",
 CellChangeTimes->{{3.7098497327071204`*^9, 3.709849741633966*^9}}],

Cell[BoxData["8128"], "Output",
 CellChangeTimes->{3.709849742195081*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "years0", "]"}]], "Input",
 CellChangeTimes->{{3.709849746806034*^9, 3.7098497518140697`*^9}}],

Cell[BoxData["8128"], "Output",
 CellChangeTimes->{3.709849752465296*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataretrogrades", "=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Delete", "[", 
      RowBox[{"flightMerRx", ",", "pos5"}], "]"}], ",", 
     RowBox[{"Delete", "[", 
      RowBox[{
       RowBox[{"years0", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "pos5"}], "]"}]}], 
    "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.709848413859581*^9, 3.709848447045439*^9}, {
   3.7098494146693983`*^9, 3.7098494183931675`*^9}, 3.7098497981636467`*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"retrograde\"\>", ",", "0.005833672500339167`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"retrograde\"\>", ",", "0.008952794357026587`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"retrograde\"\>", ",", "0.006121199755152009`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"retrograde\"\>", ",", "0.005572166349551508`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"retrograde\"\>", ",", "0.0056829852790140365`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"retrograde\"\>", ",", "0.005067441687159997`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"retrograde\"\>", ",", "0.00817497310864109`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"retrograde\"\>", ",", "0.005796710703693718`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"retrograde\"\>", ",", "0.005372687704026115`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"retrograde\"\>", ",", "0.011787020728898524`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"retrograde\"\>", ",", "0.005269914194986825`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"retrograde\"\>", ",", "0.0047377326565143825`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"retrograde\"\>", ",", "0.009828931572629051`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"prograde\"\>", ",", "0.01036164160910199`"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"\<\"prograde\"\>", ",", "0.005153241117439653`"}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"\<\"prograde\"\>", ",", "0.006648445002585507`"}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"\<\"prograde\"\>", ",", "0.007866203670895047`"}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"\<\"prograde\"\>", ",", "0.009011432414256892`"}], "}"}],
            ",", 
           TemplateBox[{"8082"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
              FrameStyle -> None, RoundingRadius -> 7]& )], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"prograde\"\>", ",", "0.006317889603192197`"}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"\<\"prograde\"\>", ",", "0.021602557037363607`"}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"\<\"prograde\"\>", ",", "0.15852361588989677`"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"\<\"prograde\"\>", ",", "0.10506770267954064`"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"\<\"prograde\"\>", ",", "0.015675705406743304`"}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"\<\"prograde\"\>", ",", "0.01862053768179815`"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"\<\"prograde\"\>", ",", "0.027768595041322314`"}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"\<\"prograde\"\>", ",", "0.046135489858146625`"}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"\<\"prograde\"\>", ",", "0.03128468368479467`"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"\<\"retrograde\"\>", ",", "0.04615478292638373`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"retrograde\"\>", ",", "0.016908212560386472`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"retrograde\"\>", ",", "0.007507175977036874`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"retrograde\"\>", ",", "0.022352550625207482`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"retrograde\"\>", ",", "0.00864026585433398`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"retrograde\"\>", ",", "0.015080497248828205`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"prograde\"\>", ",", "0.005024545192030032`"}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"\<\"prograde\"\>", ",", "0.011659295847452759`"}], 
            "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{109., {5., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{90., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{108., {1., 18.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 18, 15167133528138137613, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{104., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{126., {1., 18.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 18, 15167133528138137613, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{78., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 18, 15167133528138137613, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{135., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[18]]], "Output",
 CellChangeTimes->{
  3.7098484482166815`*^9, {3.70984940021041*^9, 3.709849419177331*^9}, 
   3.7098495849025764`*^9, {3.7098497767732267`*^9, 3.7098498002340755`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "//", "Short"}]], "Input",
 CellChangeTimes->{{3.7097547805558186`*^9, 3.70975478368446*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{RowBox[{"\"Mon 19 Oct 1987 12:00:00\"", 
          StyleBox["\"CDT\"", FontColor -> GrayLevel[0.5]]}],
        RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"1987", ",", "10", ",", "19"}], "}"}], ",", 
            RowBox[{"TimeObject", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
              "]"}], ",", 
            RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], "]"}]},
       "DateObject",
       Editable->False], ",", "0.005833672500339167`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{RowBox[{"\"Tue 20 Oct 1987 12:00:00\"", 
          StyleBox["\"CDT\"", FontColor -> GrayLevel[0.5]]}],
        RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"1987", ",", "10", ",", "20"}], "}"}], ",", 
            RowBox[{"TimeObject", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
              "]"}], ",", 
            RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], "]"}]},
       "DateObject",
       Editable->False], ",", "0.008952794357026587`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{RowBox[{"\"Wed 21 Oct 1987 12:00:00\"", 
          StyleBox["\"CDT\"", FontColor -> GrayLevel[0.5]]}],
        RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"1987", ",", "10", ",", "21"}], "}"}], ",", 
            RowBox[{"TimeObject", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
              "]"}], ",", 
            RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], "]"}]},
       "DateObject",
       Editable->False], ",", "0.006121199755152009`"}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "8111", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{RowBox[{"\"Thu 31 Dec 2009 12:00:00\"", 
          StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
        RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"2009", ",", "12", ",", "31"}], "}"}], ",", 
            RowBox[{"TimeObject", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
              "]"}], ",", 
            RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], "]"}]},
       "DateObject",
       Editable->False], ",", "0.015080497248828205`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{RowBox[{"\"Tue 1 Dec 2009 12:00:00\"", 
          StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
        RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"2009", ",", "12", ",", "1"}], "}"}], ",", 
            RowBox[{"TimeObject", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
              "]"}], ",", 
            RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], "]"}]},
       "DateObject",
       Editable->False], ",", "0.005024545192030032`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{RowBox[{"\"Wed 2 Dec 2009 12:00:00\"", 
          StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
        RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"2009", ",", "12", ",", "2"}], "}"}], ",", 
            RowBox[{"TimeObject", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
              "]"}], ",", 
            RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], "]"}]},
       "DateObject",
       Editable->False], ",", "0.011659295847452759`"}], "}"}]}], "}"}],
  Short]], "Output",
 CellChangeTimes->{3.7097694046071215`*^9, 3.7097809627305417`*^9, 
  3.7097924371380124`*^9, 3.7098484567074356`*^9, 3.709849813214758*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "data", "]"}]], "Input",
 CellChangeTimes->{{3.709850341070839*^9, 3.7098503449626427`*^9}}],

Cell[BoxData["8117"], "Output",
 CellChangeTimes->{3.7098503456917934`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<22 yrs flight cancellation data.mx\>\"", ",", "dataretrogrades"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.709593086009759*^9, 3.7095931028552103`*^9}, {
  3.7097550315595503`*^9, 3.7097550392101173`*^9}, {3.7097694037879534`*^9, 
  3.7097694056263304`*^9}, {3.7098140094713736`*^9, 3.709814011214732*^9}, {
  3.709848471187428*^9, 3.709848473448895*^9}}],

Cell[BoxData["\<\"22 yrs flight cancellation data.mx\"\>"], "Output",
 CellChangeTimes->{
  3.7095931047886066`*^9, 3.709780962800555*^9, 3.7097924371930246`*^9, {
   3.709848456882473*^9, 3.7098484751872563`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"bw", "=", 
   RowBox[{"GatherBy", "[", 
    RowBox[{
     RowBox[{"Delete", "[", 
      RowBox[{"dataretrogrades", ",", "pos5"}], "]"}], ",", "First"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7097549291034966`*^9, 3.7097549743858356`*^9}, {
  3.709848509953439*^9, 3.70984854852641*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"LocationTest", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"bw", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "All", ",", "2"}], "]"}], "]"}], ",", 
      RowBox[{"bw", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "All", ",", "2"}], "]"}], "]"}]}], 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{",", 
        RowBox[{"{", 
         RowBox[{"\"\<TestDataTable\>\"", ",", "All"}], "}"}]}], "}"}], 
      "*)"}], "}"}], ",", "Automatic", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<TestDataTable\>\"", ",", "All"}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "BUT", " ", "I", " ", "DONT", " ", "THINK", " ", "A", " ", "MANN"}], "-", 
    RowBox[{
    "WHITNEY", " ", "TEST", " ", "With", " ", "MEDIANS", " ", "IS", " ", "AS",
      " ", "APPROPRIATE"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.709692434168335*^9, 3.709692452305051*^9}, {
  3.709692531965373*^9, 3.709692608666089*^9}, {3.709692686601057*^9, 
  3.7096927198018603`*^9}, {3.709692920715026*^9, 3.70969293215237*^9}, {
  3.7097826691838703`*^9, 3.709782739380252*^9}, {3.709910531216757*^9, 
  3.7099105391283913`*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"\<\"Mann\[Hyphen]Whitney\"\>", "5.0865635`*^6", "0.7790149910283404`"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.7096926092622104`*^9, 3.7096926898807297`*^9, 3.709692720735051*^9, {
   3.709692923386659*^9, 3.7096929326064625`*^9}, 3.709780963038603*^9, 
   3.7097924373880625`*^9, 3.709848516182726*^9, 3.7098485541545725`*^9, 
   3.7098498174396305`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"dataretrogrades", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{
  3.709777486799003*^9, {3.70984852345823*^9, 3.7098485256606846`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.48299999999999993`], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.48299999999999993`], Thickness[Small]}], 
     RectangleBox[{0., 0}, {0.002, 197},
      RoundingRadius->0], RectangleBox[{0.002, 0}, {0.004, 825},
      RoundingRadius->0], RectangleBox[{0.004, 0}, {0.006, 885},
      RoundingRadius->0], RectangleBox[{0.006, 0}, {0.008, 877},
      RoundingRadius->0], RectangleBox[{0.008, 0}, {0.01, 734},
      RoundingRadius->0], RectangleBox[{0.01, 0}, {0.012, 672},
      RoundingRadius->0], RectangleBox[{0.012, 0}, {0.014, 535},
      RoundingRadius->0], RectangleBox[{0.014, 0}, {0.016, 505},
      RoundingRadius->0], RectangleBox[{0.016, 0}, {0.018, 408},
      RoundingRadius->0], RectangleBox[{0.018, 0}, {0.02, 336},
      RoundingRadius->0], RectangleBox[{0.02, 0}, {0.022, 285},
      RoundingRadius->0], RectangleBox[{0.022, 0}, {0.024, 250},
      RoundingRadius->0], RectangleBox[{0.024, 0}, {0.026, 195},
      RoundingRadius->0], RectangleBox[{0.026, 0}, {0.028, 177},
      RoundingRadius->0], RectangleBox[{0.028, 0}, {0.03, 153},
      RoundingRadius->0], RectangleBox[{0.03, 0}, {0.032, 110},
      RoundingRadius->0], RectangleBox[{0.032, 0}, {0.034, 88},
      RoundingRadius->0], RectangleBox[{0.034, 0}, {0.036, 94},
      RoundingRadius->0], RectangleBox[{0.036, 0}, {0.038, 74},
      RoundingRadius->0], RectangleBox[{0.038, 0}, {0.04, 62},
      RoundingRadius->0], RectangleBox[{0.04, 0}, {0.042, 57},
      RoundingRadius->0], RectangleBox[{0.042, 0}, {0.044, 43},
      RoundingRadius->0], RectangleBox[{0.044, 0}, {0.046, 53},
      RoundingRadius->0], RectangleBox[{0.046, 0}, {0.048, 42},
      RoundingRadius->0], RectangleBox[{0.048, 0}, {0.05, 32},
      RoundingRadius->0], RectangleBox[{0.05, 0}, {0.052, 21},
      RoundingRadius->0], RectangleBox[{0.052, 0}, {0.054, 28},
      RoundingRadius->0], RectangleBox[{0.054, 0}, {0.056, 23},
      RoundingRadius->0], RectangleBox[{0.056, 0}, {0.058, 25},
      RoundingRadius->0], RectangleBox[{0.058, 0}, {0.06, 28},
      RoundingRadius->0], RectangleBox[{0.06, 0}, {0.062, 17},
      RoundingRadius->0], RectangleBox[{0.062, 0}, {0.064, 13},
      RoundingRadius->0], RectangleBox[{0.064, 0}, {0.066, 19},
      RoundingRadius->0], RectangleBox[{0.066, 0}, {0.068, 13},
      RoundingRadius->0], RectangleBox[{0.068, 0}, {0.07, 19},
      RoundingRadius->0], RectangleBox[{0.07, 0}, {0.072, 14},
      RoundingRadius->0], RectangleBox[{0.072, 0}, {0.074, 9},
      RoundingRadius->0], RectangleBox[{0.074, 0}, {0.076, 10},
      RoundingRadius->0], RectangleBox[{0.076, 0}, {0.078, 6},
      RoundingRadius->0], RectangleBox[{0.078, 0}, {0.08, 8},
      RoundingRadius->0], RectangleBox[{0.08, 0}, {0.082, 8},
      RoundingRadius->0], RectangleBox[{0.082, 0}, {0.084, 14},
      RoundingRadius->0], RectangleBox[{0.084, 0}, {0.086, 7},
      RoundingRadius->0], RectangleBox[{0.086, 0}, {0.088, 7},
      RoundingRadius->0], RectangleBox[{0.088, 0}, {0.09, 8},
      RoundingRadius->0], RectangleBox[{0.09, 0}, {0.092, 12},
      RoundingRadius->0], RectangleBox[{0.092, 0}, {0.094, 3},
      RoundingRadius->0], RectangleBox[{0.094, 0}, {0.096, 5},
      RoundingRadius->0], RectangleBox[{0.096, 0}, {0.098, 6},
      RoundingRadius->0], RectangleBox[{0.098, 0}, {0.1, 2},
      RoundingRadius->0], RectangleBox[{0.1, 0}, {0.102, 3},
      RoundingRadius->0], RectangleBox[{0.102, 0}, {0.104, 1},
      RoundingRadius->0], RectangleBox[{0.104, 0}, {0.106, 3},
      RoundingRadius->0], RectangleBox[{0.106, 0}, {0.108, 4},
      RoundingRadius->0], RectangleBox[{0.108, 0}, {0.11, 6},
      RoundingRadius->0], RectangleBox[{0.11, 0}, {0.112, 8},
      RoundingRadius->0], RectangleBox[{0.112, 0}, {0.114, 4},
      RoundingRadius->0], RectangleBox[{0.114, 0}, {0.116, 5},
      RoundingRadius->0], RectangleBox[{0.116, 0}, {0.118, 6},
      RoundingRadius->0], RectangleBox[{0.118, 0}, {0.12, 6},
      RoundingRadius->0], RectangleBox[{0.12, 0}, {0.122, 2},
      RoundingRadius->0], RectangleBox[{0.122, 0}, {0.124, 2},
      RoundingRadius->0], RectangleBox[{0.124, 0}, {0.126, 1},
      RoundingRadius->0], RectangleBox[{0.126, 0}, {0.128, 2},
      RoundingRadius->0], RectangleBox[{0.128, 0}, {0.13, 2},
      RoundingRadius->0], RectangleBox[{0.136, 0}, {0.138, 1},
      RoundingRadius->0], RectangleBox[{0.138, 0}, {0.14, 2},
      RoundingRadius->0], RectangleBox[{0.14, 0}, {0.142, 1},
      RoundingRadius->0], RectangleBox[{0.144, 0}, {0.146, 1},
      RoundingRadius->0], RectangleBox[{0.148, 0}, {0.15, 2},
      RoundingRadius->0], RectangleBox[{0.15, 0}, {0.152, 3},
      RoundingRadius->0], RectangleBox[{0.154, 0}, {0.156, 2},
      RoundingRadius->0], RectangleBox[{0.156, 0}, {0.158, 2},
      RoundingRadius->0], RectangleBox[{0.158, 0}, {0.16, 2},
      RoundingRadius->0], RectangleBox[{0.16, 0}, {0.162, 1},
      RoundingRadius->0], RectangleBox[{0.162, 0}, {0.164, 1},
      RoundingRadius->0], RectangleBox[{0.164, 0}, {0.166, 1},
      RoundingRadius->0], RectangleBox[{0.166, 0}, {0.168, 1},
      RoundingRadius->0], RectangleBox[{0.168, 0}, {0.17, 3},
      RoundingRadius->0], RectangleBox[{0.17, 0}, {0.172, 2},
      RoundingRadius->0], RectangleBox[{0.172, 0}, {0.174, 2},
      RoundingRadius->0], RectangleBox[{0.174, 0}, {0.176, 1},
      RoundingRadius->0], RectangleBox[{0.178, 0}, {0.18, 3},
      RoundingRadius->0], RectangleBox[{0.196, 0}, {0.198, 1},
      RoundingRadius->0], RectangleBox[{0.202, 0}, {0.204, 1},
      RoundingRadius->0], RectangleBox[{0.204, 0}, {0.206, 1},
      RoundingRadius->0], RectangleBox[{0.21, 0}, {0.212, 1},
      RoundingRadius->0], RectangleBox[{0.212, 0}, {0.214, 1},
      RoundingRadius->0], RectangleBox[{0.214, 0}, {0.216, 1},
      RoundingRadius->0], RectangleBox[{0.222, 0}, {0.224, 1},
      RoundingRadius->0], RectangleBox[{0.228, 0}, {0.23, 1},
      RoundingRadius->0], RectangleBox[{0.256, 0}, {0.258, 1},
      RoundingRadius->0], RectangleBox[{0.258, 0}, {0.26, 2},
      RoundingRadius->0], RectangleBox[{0.26, 0}, {0.262, 1},
      RoundingRadius->0], RectangleBox[{0.29, 0}, {0.292, 2},
      RoundingRadius->0], RectangleBox[{0.298, 0}, {0.3, 1},
      RoundingRadius->0], RectangleBox[{0.366, 0}, {0.368, 1},
      RoundingRadius->0], RectangleBox[{0.398, 0}, {0.4, 1},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.00116, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->NCache[{{0, 
      Rational[29, 500]}, {All, All}}, {{0, 0.058}, {All, All}}],
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7097809771925035`*^9, 3.7097924377981462`*^9, {3.709848526876936*^9, 
   3.7098485558199167`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindDistribution", "[", 
  RowBox[{"data", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.709781211267758*^9, 3.70978125099774*^9}, {
  3.7097813245913224`*^9, 3.709781330046439*^9}}],

Cell[BoxData[
 RowBox[{"MixtureDistribution", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.5089744563209969`", ",", "0.491025543679003`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{
       RowBox[{"-", "0.03504247123944587`"}], ",", "0.030558812377112755`"}], 
      "]"}], ",", 
     RowBox[{"BetaDistribution", "[", 
      RowBox[{"2.318999698428008`", ",", "31.018362343874806`"}], "]"}]}], 
    "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.7098485597237244`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"standardized", "=", 
    RowBox[{"Standardize", "[", 
     RowBox[{
      RowBox[{"Log", "[", "data", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", "Transformation", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7096944109863777`*^9, 3.7096944670688677`*^9}, {
   3.70969540472499*^9, 3.7096954297481184`*^9}, 3.7097548910106916`*^9, {
   3.709777579548007*^9, 3.709777595054184*^9}, {3.709848627773787*^9, 
   3.709848636917676*^9}, {3.709849323743609*^9, 3.7098493314391994`*^9}, {
   3.7098500149004354`*^9, 3.7098500198725147`*^9}, {3.7098503714081078`*^9, 
   3.709850379116701*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<22 yrs standardized flight cancellations.mx\>\"", ",", 
   "standardized"}], "]"}]], "Input",
 CellChangeTimes->{{3.709755711976215*^9, 3.7097557440537863`*^9}, {
  3.709814034803564*^9, 3.7098140350126057`*^9}}],

Cell[BoxData["\<\"22 yrs standardized flight cancellations.mx\"\>"], "Output",
 CellChangeTimes->{3.7097809631586275`*^9, 3.7097999871424627`*^9, 
  3.7098486415336304`*^9, 3.709849960409175*^9, 3.7098500224459953`*^9, 
  3.709850381767248*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", "standardized", "]"}]], "Input",
 CellChangeTimes->{{3.709695355724949*^9, 3.709695363404523*^9}, {
  3.709695434680127*^9, 3.7096954385489197`*^9}}],

Cell[BoxData[
 RowBox[{"-", "1.8083582239206705`*^-14"}]], "Output",
 CellChangeTimes->{3.7096953642827034`*^9, 3.7096954398311834`*^9, 
  3.7097809631826334`*^9, 3.7098486433830147`*^9, 3.709849961842471*^9, 
  3.7098500236252413`*^9, 3.7098503831365314`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StandardDeviation", "[", "standardized", "]"}]], "Input",
 CellChangeTimes->{{3.7096954430408545`*^9, 3.7096954588260746`*^9}}],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{{3.709695453926071*^9, 3.709695459197159*^9}, 
   3.7097809632046375`*^9, 3.7098486448033066`*^9, 3.709849963042719*^9, 
   3.7098500246414504`*^9, 3.709850384392791*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", "standardized", "]"}]], "Input",
 CellChangeTimes->{{3.709695509744508*^9, 3.709695518667336*^9}, {
  3.709849977490705*^9, 3.7098499811894693`*^9}, {3.7098504412985506`*^9, 
  3.709850445044325*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.581], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.581], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-3.5, 0}, {-3., 2}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{62.335868694955934`, 106.1220976781425}, {
          181.93872627715393`, 183.41370135631612`}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-3., 0}, {-2.5, 18}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{105.1220976781425, 148.908326661329}, {
          178.13892564385634`, 183.41370135631612`}}],
        StatusArea[#, 18]& ,
        TagBoxNote->"18"],
       StyleBox["18", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[18, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-2.5, 0}, {-2., 144}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{147.908326661329, 191.69455564451556`}, {
          148.21549565663787`, 183.41370135631612`}}],
        StatusArea[#, 144]& ,
        TagBoxNote->"144"],
       StyleBox["144", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[144, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-2., 0}, {-1.5, 415}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{190.69455564451556`, 234.48078462770212`}, {
          83.85637243016, 183.41370135631612`}}],
        StatusArea[#, 415]& ,
        TagBoxNote->"415"],
       StyleBox["415", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[415, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-1.5, 0}, {-1., 751}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{233.48078462770212`, 277.2670136108886}, {
          4.06055913091069, 183.41370135631612`}}],
        StatusArea[#, 751]& ,
        TagBoxNote->"751"],
       StyleBox["751", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[751, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-1., 0}, {-0.5, 1174}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{276.2670136108886, 
          320.0532425940752}, {-96.39667011189422, 183.41370135631612`}}],
        StatusArea[#, 1174]& ,
        TagBoxNote->"1174"],
       StyleBox["1174", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1174, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-0.5, 0}, {0., 1532}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{319.0532425940752, 
          362.83947157726175`}, {-181.4172092819277, 183.41370135631612`}}],
        StatusArea[#, 1532]& ,
        TagBoxNote->"1532"],
       StyleBox["1532", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1532, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {0.5, 1618}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{361.83947157726175`, 
          405.6257005604483}, {-201.84113768590223`, 183.41370135631612`}}],
        StatusArea[#, 1618]& ,
        TagBoxNote->"1618"],
       StyleBox["1618", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1618, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.5, 0}, {1., 1269}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{404.6257005604483, 
          448.41192954363487`}, {-118.95798637209865`, 183.41370135631612`}}],
        StatusArea[#, 1269]& ,
        TagBoxNote->"1269"],
       StyleBox["1269", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1269, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1., 0}, {1.5, 656}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{447.41192954363487`, 491.1981585268214}, {
          26.62187539111511, 183.41370135631612`}}],
        StatusArea[#, 656]& ,
        TagBoxNote->"656"],
       StyleBox["656", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[656, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.5, 0}, {2., 318}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{490.1981585268214, 533.984387510008}, {
          106.8926637695266, 183.41370135631612`}}],
        StatusArea[#, 318]& ,
        TagBoxNote->"318"],
       StyleBox["318", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[318, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2., 0}, {2.5, 135}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{532.984387510008, 576.7706164931944}, {
          150.35288351286775`, 183.41370135631612`}}],
        StatusArea[#, 135]& ,
        TagBoxNote->"135"],
       StyleBox["135", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[135, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2.5, 0}, {3., 64}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{575.7706164931944, 619.556845476381}, {
          167.21449882312578`, 183.41370135631612`}}],
        StatusArea[#, 64]& ,
        TagBoxNote->"64"],
       StyleBox["64", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[64, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3., 0}, {3.5, 16}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{618.556845476381, 662.3430744595676}, {
          178.61390072301853`, 183.41370135631612`}}],
        StatusArea[#, 16]& ,
        TagBoxNote->"16"],
       StyleBox["16", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[16, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3.5, 0}, {4., 5}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{661.3430744595676, 705.1293034427541}, {
          181.22626365841063`, 183.41370135631612`}}],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-3.65, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-3.5, 4.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7096955192054462`*^9, 3.7097809633786726`*^9, 3.7098486459945517`*^9, {
   3.7098499644030004`*^9, 3.7098499963075933`*^9}, 3.7098500266088552`*^9, 
   3.709850385495019*^9, {3.7098504343371115`*^9, 
   3.7098504457484703`*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztndtuIzUYx6dJJ0kPalkuuC4Hqd2yvVlpkRASEjcs0PSwBypuECoL0W7L
YVn2Gim3IMQNtxEPAVSIhyCoD4AQQupLIIXYHntszzcznswk62T+0mbaejz+
fv/P59nYPjh9+vDTz0+fPnpwunX7yenjh48efL319pdPxkHNpSBo/BkES79s
Bez3URDIy2j8T1wu2YUFTyHgM/6jOb5eBRf9XtDr9YIGvzaD3mAYRLGDrow3
HPC77NOS8XqDYBjFO4ziXV30+d3BcBS8x8PCYDjoqWfZp39xFdwj4h842uo6
st8lbKwL+ecqiWEwiEwtyyT6F8FVlMQ+Ec9V/jsE5jKBeZzlihy7FB+l406+
K2QusdxpWtEZ7gGRxEmq7BUtF2NcHZPFpbAoV95zZMzI8TP+YzlGEN5p2sGC
9sAyyBJ6PyOPRbx+cHE1UmCjq4ugH4FRQo8IG3cKUe7bLkgpJSvCBU8Mg+L2
IQFxn4C9nQcmyzhPlirSx4SlDwiigqI+JGpZO4rOiomsZW2a9E3Hx5ctKnbv
Lcdnw1R/moUkNLwhChPlSbswMVsntLx9ywxVcbRK8hVRp2xrafWsjCI7Pfas
Xd2SbZBIr5Eu5wv+o2UUpV5ceKVV2VIx51AVtYyye6k2UrGEyE6clVo7riVt
aAzNxKInqIpMQZYRmG6DZjqStTGyxeJbymT2PZZlWvYkIgnlUtkUjWmnpUq3
cZfGOYpyU2/Dktlk16y4bKTU2bYdXKI57jqkeJ9+lKrpUrHunKTiMzpBqvXp
Fur1utK8Nkzs91Vqrl3yYXYyBxP0xE5iZeVQLUI/UfDPrccYbkNakBKEtG7C
MG9jGkTwOJVD1R9pwROM244y0jkoRGSPKjOkyrGRPp2Ii1vWiF7vjNXkQSWu
jZgTI3qTd2ztXaN09dSD9qD+iH780NF611HNcaI46j7JmuTJdjfWalpTEyqt
9zm24umTvERnNnaG3VLro948W4eO7HYnrlWjm+LWiAXL6PFEeFAg0suRSGom
u+qSwIuEGmou2HZPzK2mdorQ5TWZTolt5TWcRgvpJHiLYKF68uoTG7G0+OUn
dlmahCc0eUSawpedH8/PzwUw+43/tUmEbcRho//++IZ9gg1+zQ8Lo7Abr7yg
wlqOz5YJkzbOTm49c7thxTY2PfdzGb2UNu/KVYfJjW4w4eyvTSJsIw5TNXC9
ukr8HNHgbBJhG3EY6i/qL+pv0OQ9mqwfYfF6VK46m0ncIqrnNuGeHUKODNOz
zzXedka8SexWkJ6RLTt57i4zytOdLpvr7ai5XnCnq3HddXbdTfdymYH5RyKM
WXDionyZF5ZVSSaxMUF6Su/H1UyOauq2l4ySlv5eg6rJNXWZfClAvfmgXgrU
1E3UCxa4Aq6AK+AKuAKugCtkmJwFXWfXT+qjXc/y7yEbsiEbsiEbsuddNldd
F7E1zWPIhmzIhmzIhmyvZBtvE35YTJ16Vv7mJlG6ZYdfF0bitxm5CDmQAzmQ
AzmQAzmQAzmQU4UcrmbeRSxYnkAO5EAO5EAO5EAO5EAO5EAO5EAO5EAO5Cyw
HLyOghzIgRyP5Vzu7e2pxf877Pr7XPEbu0P8A3SgAx3oQAc60IEOdKADHejT
Rff1Nc8i+hroHqB/x6670Q7QnrP+GoUBE5jABCYwgQlMYFaMKbZHpg+HSZ7a
R5/b0sq4R23f6qEb1qQbEqcJtYyzdMSHuyqUt7U9fRO387f89dgZ+vmS9vlb
LG/F6VJuG0QXiUttJu2hm1ZVxSA2bu/YwTxU232c2ny8YTi+2CblHjromvKE
eVheqsMcojltiO+hL57nP8yzDbUsDY3bIucTt/OPX/BQ+DXV8lm5mzhdorh6
fpTMz/5pXk0UVd5gNqUrZBsou4YKXOF/QZC9ir7Ju+pi9d6gDrViTZYQddYe
b+vEyKudHHLUqoToRyzHh03Xr89Q/tBOh+04DhEWbCixZmekyN92vUeg60Ym
601qaJzsKYee1JykQaThelyJxy5J9jLmYadCNn3kSCvj3pzMZ+fk7QMwgQlM
YAITmMAEJjBJTE7pK9yc+BCYwAQmMIEJTGB6i2ms6+WHev/rBZfhKn7dABe4
wAWuBeCa9QRzPr0ELnCBC1zgqi/XDWZud8aW/3b0CBjAAAYwgGHWc6faqgcD
GMAABjCAAQxgAAMYwFCeAbMKMIABDGAAAxjAAAZHBrn/gVy8yxb9Zm1QNem9
FU+1Lkdh+t4japuNrK2qCu1k1fJaffUbAhSJS62U98c31W0d4RrPV3/Em4NM
vrXIpDuQ+Fp/qPxz2nCm0H40UC+2rvqrXprrneNQ/wzVRzv62I215oy69waN
KGPjEc54nNtX7qnz4EFwhYE+pMaA0/TRcqJkczazPUjfXcp1FyrXeD7UKKld
Zpc+Ey267VTWPR9moj7M/MEABjCAAQxgmCsG/F8/GMAABjCAAQxgAENZhlf5
I7Mzyq/rhHoYhdH8sf8C64NRGIVRGIVRGPXfKIs7/ozD2HUGRpkZI4HXYQAG
KjUw+QhzwR0DAzAAAzAAAzAAAzUxgNEQDMAADMAADEzHALXQJv4qePzt+Eb0
tXW2mFimI75FX81i5KmLUiuN5XKNnrbS2D7AvtKVxjOTJn2tL5aS8ZjfZ7mi
Y+qic1dAGcE8VFu9U/Uin6nLXVW6Zryya+rK1qKKI9we4Va+hG9GGdROer7o
asW05bccYHWKCpKFgjcbTSlMtgSyuatA2LNqKfWFSaoT0Fu4+St/aklblE2D
Ia/xot9uJ7s4z3Mvfwms3aGzHq6d1yl42So6LmZVtOMs6zj2Vd70afmrUjW/
i+wQTHM4XCmwulQ0PiHnUkmNxFCFGl+WWVE6lSZIXy5qN0uxwKYhsBGVhSqW
jsaidsW3KNmRjOWnV6+JGyxJJIbEkBgSm2Zi8Xt+P3jmN7Gz6DtR1/lv7MYb
OU/zywCREMn7SHEzUfj5OOBSBARL/wMgvlEP\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProbabilityPlot", "[", "standardized", "]"}]], "Input",
 CellChangeTimes->{{3.7096933394668283`*^9, 3.7096933688278437`*^9}, {
  3.7096936983983727`*^9, 3.7096937063910084`*^9}, {3.709695496403775*^9, 
  3.7096954993673816`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, {}, 
     {Hue[0.9060679774997897, 0.6, 0.6], Opacity[0], 
      LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
       0.9999999795918367, 0.9999999795918367}}]}}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
Lqs/Ec+rcIrqj9X497OtvP19FTYdFhc7tqQa/vGTh5/0kzykemQ1yg9dfFk8
UIXurewu303V4NuP79AguCul+mQ1MketG/w5ROrAIntm4Z5qTJ3UGvViPB/G
VK8k7/847/Ivgrt5k5Sutx2qhkpkSckYgrObg21WP05X48qjb/v7VfmIpvpl
NVbYzT/er87HCfJtilerEb8y8Hwawdk6qmdWI8u7/+mN7XyMrdWcvu1GNcY4
hMvr6vLRRfXNanLPik1fZMhHQVZ/v21yNQxKDzUGGPNxmeqd1fCWe63jcoSP
PUHpt0KKq6GV3Od8zJMPRap/VkM/9Hr0AS8+PjqYpVZUVyMqcO6dicF81FI9
tBqdm7KTfaP4CDOTdn10txrrWvd6Lksi50r10WoE3tgkVZzCx8qN1Uajuqsx
VruBF57GhwTVS6vxq6Yh6k0FyUPlc4sXfKyG0+t8NwseH9nTGqdrfq/GQX9B
1zcSXxwzX3zPcDVs7ju8aavhYwfVV2tQm2l963g9HzM+dD46N6kG35LMjuMB
yXuqt9YgbfzzFb+f8cFrCy6PVapBZNuw9lqCq+tUf61Bag9TI+M3H4c4IwNc
DVpnSwd3E1wtpXpsDf7OWKdhLlGN4aSv1i+0avDy+BmN/nHVaKH6bA0m7Tz3
PHpqNdK880jG1GCcIj8kQKEa56heW4P549faXSU42mp7SG7Z0RpMzrfIMSe4
mUb12xqsbz3+vVWrGi/1J38ydSDvP5xxaSfBEYvquWQ9n1mMoB3V8Ft1s97N
gzxv1zbZcwbV2E/13Ro0rl11f3BfNRbNdE1LC61BSeF9xmVnsq/jR/TeGjxQ
vHxQSHDUMKx+6VZqDaJDJfb4eVYjkeq/NRi9vSy12Ksap1/2GH8orYHYKYeC
6qhqbKZ6cA303OVKVMqrMakhUm2qoAbafT+q53Cq0UP14Rr0rDRNSCUxo3SH
xPrWGizw3NaQyq2GF9WLa6BQPtFszc1q7I0eenz4WQ1aNgyNirpDcE/14xq8
iGXmGrdW46tbaYXPZ7Kef5ceTWyvxn9UT66Bc+d8f1WCk5hjVjfyR9Vijy7b
05fEJ6m+XItlOivN5fursX5E3ptci5NqpoJ/f6shTfXmWjRuK5zTKV6DR+qN
Wt+Ua2HobXXo9sQaFFL9uRb3j+tsWaVcgyvk9ldYUQvJdc4cq4U10Kd6dC2i
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
jnwr2b9XTyyktUW4Sf1NItQuGT54VEeEpRtHGhyyHzu3f2rcIUIM9TuJ8N/n
uULeHhH+LdUL2/yMrF/aXqNVn5wb9T8RfKx5+/mssQhtyllXjN4Q/Ie6T/c7
LMIG+v8zIP91j5m4xlqEzGnDtlafReBbVSnq24swYeKIP0oE/yezSkafE+HC
mANmF3+K8D1FUXjCSYRu6pcSodBynpbnFbIvv8q2BI6qw8/SIrVZXiIwqH+q
DrwtW931r4kw88N4jaSxdRANHu8W+IrgTf1UdcjXGvD7TOL3I+3WZPL3Nwkl
4wJFMB2xi8jWISds8ytrgovqETlpRh18rlku7iXxgsYRvxX5/DaPRX8iCM5v
zhzsUK6DVEtmwH9xIvyk/qs6GCuJHkvFi3Cc49zzelEdqtYvWQKCkwbqx6qD
5Grvti0EB6sK7jb+Xl4Hv3EFrh0kTqL+rDqoFT6u4hEcjE5eyJ2oWYekLRfe
iLFEOEv9WnVQnGj6KYrED0O9CELrsHLjPYNlBAfagSP+rTr4c+4b6t4SId/7
cdiqXXUw8q8r9SPx1Csjfq46NLDc1UIILi5fWHNV17gOTzTn+y+9I8JL6u+q
A2N45pBFM6lDtqF2Bw/WYU4ozAvbRWBTv1cdBK67Rl18IMIci7dmp4/Xwbxj
of41gpMA6v+qAytk9OUbvSJ80d+21cOuDi776lq+k9ic/v6xDj+S4hubX4hQ
R6pfxLk6BBvP7dXtE2HJhhF/WB3mnvUviSRx9Kofs7Iv1aGvq0SFQ+Jh6her
I/2l7ZdjQ6TOLzCW4nqR56kSdxESXLRS/1gdmc+q9jYMi6A5cySh60hen3o/
5R+pi9RPVocJEUs33yc4GT+BXF/hdRD74/dtxeg6nKf+sjq8GPttciPBzdPh
I02f4+swj/c/lq47rqf/jZpZhVQilCRlFUoqcZDZoihZFZEVobLKClGSLUl2
acgqIwr57L0yEl8kVEJZldXved/X76/7Ord73+/n/byf537WOad4A72OPExu
ZHwzHmbl3uveshsPV+vv3Gl9ngf8s3TeTrjHR8Y/4yHyfYbpERMedlR2y+ie
w8OqF9fX+FEd1XB8NB5yztW6m5rzMPNp+KGBN2i+YQt+FlEdFXH8NIrLKdpP
bsWDtVS4xe0uD33P+P13ZQAPyRxfjYc1u5duaqS6aijqu2L6Ix4eZA46YzqQ
h5BbjL9G6y1bnR85iAfJVeaIxkO1qVVN+8FUJ9mMz8aDsk/hjG9DeUg7Xzoh
Wkv1PX5OY/vhVJenGL+Nh10pmsHvCa86Zme/9zkPm/NTb54ewcMTju/Gw+/r
gtGODrTuvXt7pVXw8OfD0CXTqG6zOP4bD98sd23KcOLBMKai3ZUaHuoeP7k6
043G4fhwPGzJWK7Pm0DrXsV+IOTh777mc/3cefBayvhxdN/1yI2fJlMdhRx/
rfvFQ4vj0ypcPHkwn8v4cjykHHjtmkx4z8w6+ftWfGwOfvNsI9VpHcef42Oh
00iv83N5mDPZo7CpIx8qmwPiFVS3jzg+HR9JVYtPlAbzMNiFHgdGfKyyzXzc
jur4KMev42P9X0HaScJ/2c81vfgYMiwuZXUoD2Hs6x0LPnZ0yzLttIIHlXng
1hFWfIzbPprnRNi5B+Pj0fjJB9xaU52fM7yxYtJgPr53Cv5ykXDHToyfx0fG
+bAuxhFUJ230Zwc68HFqT4jlykjqQ46vR/c7bOs/cgMPkxqWuK8czYfrgCn5
PzfycIXj7/GhmFcUdWczD6Y1D+y3uvPROf9rccNWHrZzfD4+lmkPb10RT/tO
n04OefLx+GPPwrN7ePB7wvh9fORoTxjFUN3fU0XSO0g+skytdkYe5qG/hPH9
KH9mf3r9Jrz/keL7rXl8GFe4fD94moefHP+Pj4IxX76uOstD8E2bN5JQPvaf
3Xuw7hr1JccH5MNpcE6PRQU8DM/aoXixko/72a/PjbrNw0mOH8jH1JOz7dcL
eGidVl74JZLyaSFJKBTxEH6U8QX52DQ1KCFFzMPj/SMzW8Xy0XvHcN4gquOx
exh/kP6e5J/0Ss3Dpe0HDpvs4qNdxX15pI6HrpsZn5DW0/3CoWdlPGyKrN5q
m8RH8Elrs0nlPFRw/ELKZ17q4v1vefAMo/Qe5eOAJC1VVclDAcc35KOhWS8g
vZaes3PSZ/uc4sNdkXj47Hd6TnN6ZT7+1q58M+MPD188G9wXXuRj0REHE3Oq
y8BJjI/IR3GVxCammYeSsb7Doi7z0d6psjqmNR+DnBk/kQ+biT1bj2/Dx5Hh
ub33FPCRplX4u1Kd/uH4ipT/CuFyvU58LOnftsPJIj7qRx9tVhvwqW8Zf5Hy
mSOebtqZj1GmwT8u82m9aWuNagz5OMvxGfnYM9Q6tg/VbYeOhW8eyKm+HNL9
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
c8lBh0L9E8HW7jpkHnfYwyO8ivMD02F+03JzlaMOlnqCx3ZTdEhye9AxmeJ6
zPmDUb3kuRqfI5zQXO/p7KlDfcXpd5YUxxjOL0wHO/2W/l5j6Xyj+aPx03V4
7/d5XTnFkcH5h+mQtvKfHWieOV/p9pk6ZLUYu2A3jWMQwfzEdOhvWVHtS/eV
fNzIHILwKWfD1NkzdIjm/MV0sK4flT2Jxhn4jv3DGh3WW9qVf/SjuuT8xnRY
maxL+jRLh0P/aU8uDab5963bu5Lum8T5j1F9Ttiz7QvhpqfNXdeG6nDcZNeS
5TROHudHRvuVu/1daZAOCzVD9mxeSv3S+NV9Pt1n4sP8yXRwW9wwbBthiXTO
350rKd92cXN5hLdwfmVU7+6hzZsX6TCczxniwsPm+spPhN9x/mU61GSO8b9C
16UW51cfj9QhWbVvcMwaHbw5PzO6Tn9BSqt1OrS8/Tr47AYdxrcy0psTRXXG
+ZvpMHmoY/3b9Tosv2bwJDtGB6Gld1jORh36DGV+ZzrEz11QMZeu02S7etFH
VrTRu7QyZ7MOuzn/Mx22D9tvriXscmHpo6KdVI8/2r3Wo3E+cX5oOpwODxjw
mPC5U0edhXt02Bj+97kgVgd/zh9NB8f8ygMlNE+H4yVXVPt06OqgsOm5S4di
zi+N1ptTNMKV8NoD3D9cQOC+cZKNe2nfOP80HcrOfl22i8YpY3ZgR6j+brjk
d6Hr9nN+ajrceK4tnH6U1h031bA2RYd150e3PJ6qww/OX43qyKzXj2t0zGZ0
4zQdbO3/lY05pcMCzm+N1ldYkH2UjobR5//+O6NDnWlE6VU6Cjj/Ncpfy/by
iWep/1czQyuK2y62qYDwUM6PTQe9M+tt089RXXB+bDqEFbW/7kH3eSwcGNLr
sg4F1l37/qbr/nH+bDr8GTxrq302xT03gP2HEsydIW8ReJXu4/zadBix+EJb
VzpvNmunl10B5bupYNoXOio5/zaqz8c2EdNu6hDnfe3RqDuUzx1j9xcX0nOQ
83Oj/TD+NNKMjjWTXzqPL6J8ige/+MnOc/5uOnpfqZn/7IEOfuM6XvV4qIPz
i8GhdkJaRzHze6N9igke7ybS4a7LKOtZfKqrimDhdKkOqzn/Nx0+3/jez49w
PwfuAzayej5a+5TwE84Pjvqr+aabgUyHxCGHDJfK6Xm106aPJR3Hcv5wVK8P
Tn+pJPyV+zmKntc7klL70flM7u0qPU9iN9stUVFeLD7+3VRKfbPj66FNGh06
c/5xdL/vxfhVdN2jHpxAHUlr+myaQNet5/zkdOgboEzcTNcN6japJumFDrNM
xsadKdPhP85fjp5nOUVDQ+j84U7rmAMcfixel5FPeDLnN0d56BGSbfxSh19t
zjw5U6nDqc5bYnmvdLjC+c/RPFUrCy6+pef+P5lXdhW9fjxyGlX+jl73OD86
HVqlbb/lQddJGxof3ajVIfT4OLM8wls5fzp6Xvvw5pt/oH2ut3YpqqP+sPYd
VUb4PedXR/Md2bq0a7UOJ2v8rgq+6/DCmufV7ZMOPpx/HT0H6rfXeH2heSq3
WasadRh94faHsm/0nOf87Oh8pEje1EBxvbyc9uwP1duqY26nmnT/97fT4afV
tkd1dF77pMywokUpNg8RXjVrVYp4zu+uFJvO6ym92pTCVa239yMdTxX/ywrT
K8Vnzv+uFPNO8IZk0vG8xOHf9/al+Gl08pQhHQM4P7xSVKZPSZhDx468kKh/
+qVYE7VvZQPh+5w/XineP1Xu7tipFOvY1/2GpVixcit/Kl03gPPLo+tm9LPK
Ivyc2WmZlGJw3OMuwQalSOb880qx+HuwVtm1FBOYHLdnKY4umilZ3p3i4Pz0
SnHj7irzOjqfw+i6fUox9H3c18K+pQji/PVKsaN1zfyr/UrR7TxnSIrTugan
ZqtSCDm/vVIMmbP+9ab+lJe01dQBNM5P535VhO04/71SPL0Y3c/IthQVR9Ou
jhtI1482HxU3pBTHOT++UjjqhpTFDS2FR7LY2oOOc7/w/5jaleIf9/9zS/Gl
9PoV0XCKk55GM+mYcmfbwsoRpQjj/PpKsWDdlIMxdDTb0a/bgv9xdOVxMX1x
NLRpVaJFQmlBIVtZ8m0lRCmkrP2UkopCIqlsKcqSJUpRiiJrKiGKNlKpmTf7
jJS0ICKUpd/3O3/N59Sb9+6733Pue/PevefMZMGT/pafnbNYUCf172OB217d
35r4eWCv69HNs1mgf9PA4Dl+zpL6+bEgQM3ncfY8FnTu2Pdvmw0LNmrnhunY
4nlK/f1YkL2MuzIesXtwLk0YA3G46rx+xPJSvz+sq7yc+378e8lmpvOAE/Z7
YU1B+CIWhEj9/1hwWeX7QdPFLDDcOMTnOP59zimN7aIlLGCkfoAsGDzM9Mth
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
aeD0n9QfUKAfhCf3N9/HPrHxUcrpBCbx/U99YmEe8v+41nQodKsZC6sTy8d1
PqIGWKO/M3fHnwLzTFgWn72E/ehTUtNHsIPyB5Hoy0xytDg4gK8QPvLC5UJX
m+NbUw3AYnmTz2KTqHw5e6jpAfL/EzURGHl16gSXWAnyX35BTGIy+sSJv80V
LOOazLoEnRNlJDTelaIvclbpJl1nkq+HzRJ9HiP/GfkZydC9XfCNzeIy5P+q
zX+uQ/cngwU+h8Cx9g02N29if7E1enepHPmfZvo0DXXg+tS22qQCdeqnBpai
7h7fl0rU4LqWHj6ehTrQYy/pGYG/WU28yEEdslW3THuBd10LVr6LOsQpGtXd
B9/p5YnLvcUk6//kTf4Fzy26/CkvC/souX1IqRbrtly+szCbSa5c5lx2C1xy
8V7OQ9Rtb1+LY00j8v+5GmfxbSZZdczD9jvYXbDGvhR1O+CjtsW7CflvYozA
ZJJlqxUv+zQj/2N7l5bfg15vHxmJtmDfa3UIrEQdC93OuD4Hv+AZ661GHU/l
135RaEX+6weo1aGOBiqRhoXgyLOclxpQJ/NTgkfN25H/dfHjTQVMMiQ4zaX8
DPk/J7mrFXV6/fdyP/9z5L92Tm476tRz1b48ETx2ev38zoe4jmVRUzVgg4py
l+ePmOREv0vW7Avk/y+83StCPz18nPj1JfJ/08uVPcXY9zfyqv8E7z15KOQ1
6npW/Of8m9247pKhd32oK9dT51/Nvcj/736b36OusZWXuM+9Rv5v+Ht14An8
bXd0o9Yb7GvHzn//+BR5GzDrq9CH/C8Us2Cgzg+k5PnPgH3GMgpZqHPLm4gv
5h/gCwVFgSHU+XLwzaOWH5HLHo89PlUyScCuzJYkcOjd7S2jVdjPF+26HUxD
/rM7ZMer4d/lnkOTYFVZq4gJ1PUAsfp9hI66OzE/fkMdvWsEWlRZyP9M720/
6pjkC1O1SomN/P/4K2Wqnkk+xw40scEpy6OmfzVAj/F2Yf9B7KMHRfbPos7l
2avn/QKbptws/os6r+44FrX8E3K0bw3eEDOJYm9vkAmYU6LImwt1e7Am6l0T
+NC+bR3cbUzCFF2c9GsU+X+l9T9e1DFtSWN37Wfkf/eeGH7UMXKLhs7WceS/
yEeWQAeTeOjZN2+YQP6beuoKd2JfO+Z9PAu8Iv5HhmgXci+2xS4XHPgs/M8i
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
/vNcNU3gsuBgkccydBLyNZdbG95y1rCHPJGlE/GM9Gci8NR5IfHrUzk68R5U
y/0Brt8jvLdSnk56dFe+1IW3/P5FSdUKdNLXwJl/COz7VGmmRpFORoZne8LA
7dP1Ji+U6MTMmlV6HCwuj+1TmU7627qjY+B5uFc3Z6MKnYw/ib30CF73lTi4
Nu3B81omd9AAXiv//Nn8Zi+dHAud/esCjxN2XdjxVpVOrEqSZfrh4egZloh3
avj8Zfq1i2CdwutD79Xp5Pen0IXl8DKdxk8+7KOTlTUf6jaD50Xz73YROlm+
Jm6XIjw1dZT783k/nWwQZJozAxdn1Vh80cDnqSo9TAazDR0s/6qJz6mII7vg
sZ3Qx7UDWph/UEJFErja2vbskDb8T1p7nB3err/7vW1Yh06cNI1ZJcGeX3wl
qQfoxCc2+9NFePtmE1MUXRfrFbbK4YOH2yyuUb8fpJM7X8punwEH3dqoPaaH
5119TjsJ/PlDVub4ITq5xsyqsBqeyq6VXprQpxMjnqAQOjyNOVKJAzOdOLsN
2LrCS0qcdtVvQ+SnIOVUJpi0/fvCd/hnzm48B07msPJdMELeHpdbSsPbKT1q
5+IROgn1vS4tBW8Nr3rJLDOhk9OBYrq64PzX/8UuN8V8EtSZT8JjJparoyvM
6GTo9dUAHXhspcWrx2aO/rmrycoFj8vD7uWxH6WTiE2rr6jAY+4X4itWW9DJ
CkMlRwOwy98ndlzH6ETqz9s70+AGtf11ayzpZL96mc4ueC0Y2CrAexz38cnr
rALYr/LohfVWdPJ4yb3dCp53zP77gkM6yR1eby8MzyWV3BU3W+Pvl7u9Ogev
I33mbgjY4Pnu2NV1BzzwOPzXFlv4mtIo0gmP90xwHRY5SSdyulo9uvD25u6U
om12YC2/8jJ4O+Yuyr7Dnk7iBl+NfQfrPnh0aqcDnViOaSYnwNvM76qvJBzp
ZLGw6+UveLuws0lEyolOZrL7Z5XgrbmzScjuU9hPWNt4UsAluX1fZZ3pREYi
+GErPGYfOb1X4TTuu4xvOyu8ddg6naTkQicHk4qFRsA1J0NmVM7QyS1niW0u
8HZj+ipTVVf47Lj9fDbYq+/WI3U3OjnVc1u4AtzKL8K1351Oht9bulyC16LH
H7hqetCJQv9fPqt/Xt9RfqPtSSdrZLj1n4F7Pr3coXuWTiYjLLlM4bX8+sMR
el50kqFXmrYDHsea9gzpn6OTSx8WHkfBY1qCIznsTScnxc4uew+PNd6P3z3i
Az8jT9y4Bm9TuQL/mPjCk3iDrp/gGQPWY+bn6WT67l3TcnhsFJNQbuFHJ5pV
Zr688LjwDR6vP3yY5btcCmZeWYANgE7uHd6ycgpsfUD+nc0F3K8T78FFcEVE
raRdIPKalfzsBzznadCLcrhIJ0dmD0QMwmtXpi6qUxCdSMuOLpeGx43kpPbp
YDp5qfZVKAUsFDyaeSYEvfCO/UAmvA54fn7JLRR5E/8hlgP+8IfJ2jMMz3+v
y0QuWGpPbJXXJTq5HWUUrgrvr/ht2uQTjv3U1YPHCt4PlWf7no/A87Jtsz0B
Vp2W/uAfif3L8/oDDvTALbkqmcDLdPJQieKRhR4YP6sTF3SFTi7s0Mw4Be/1
St6Phlylk/8ychWT4Hn2mJXepSh4MLpqvhxeL0rS8iKikdfcw8PfwRZnzq24
EkMnx1mK617A89KCRbuoa3TiyDY8uAkec9Cu1sXEYq5aAy5n4bGT6DrBuDg6
eRVwo3kWXOeQfuF6PJ2oLFTP2Bnj3JAl0X3jOp6v8FlNZZN/vV6ueCsBPRQa
E2wDbtuicTPpBnI5PDBXAa/FrN/+Sr6J+Yo/8+aC12GpFofvJtLJiaGQbfLw
urfnW9G9W/R//7/oVyWw4iYP9szbdFI5QM93BccfxetxEvYTyZctUfCekRiB
Fzz8nHT8Bgl4r/WBe2tBMuYgtOdCFbxP40kNuZ+CnhI8wtIDnjXa0fcglU7y
+p4KDaIHjONK95bcpZP7JZ3P16MHit6q3SlNw3nN8cPEAHqAhaN5puwePN7j
824nPLfVMzV9mo7nH53LFQCuvNL/6FkGnSifzmF6C+Z97cJVnUkn9g3s7lrw
3n3FjGtNFjxU7hYxhvdNmqFv6rLp5O5GnxQTsEgYh9jLHPRLV+DBbeiBwLrb
WBCdrF178bM7uGtR5NvrPOz/R8JPJaMXdqsVkzf5OC/us8z6hV6IuqCS1lpA
Jy2VMZYr0QvDzxr+tBXSyfZgW/58sPrs4WPv79OJ/pdbPGXgJMUv5Z1F8Ovw
NbmN6IkJbyfergd00hld3bEGvaD/+NfZz8XoQ6tWAStw7q/Adz0PkY+92/mk
0RNL0my7vpZgfuVbo36hJyzdb0T1P6KT1cxtz9agJ8qKBGmDpXQinO9/TQjM
+b1Ae/gx8jIXZ8GM3nDeqZBFKaOT6GWmvr7ojfpTdUu0J9iHdHQmE8D8uYes
v5fj310WWP8I7DvcVfXjKa6bGftXA73SLoLXjQpcn+nZkBR6RPzkD9+JZ+hd
64PCEeiN8Ht+H6Yqsc/9Fsm/DO77ulz2dxX67trVLwvoAWX+uLi5auz/lsTy
IHogwZLvx5/ndMLVnPAuCjyalKO3WIPnQCNZdugFnU+785dq8ffay62U0Avp
66pXLH+B/UiyZdYHPG9ywH5FPZ1kbdmgKoJeME3oqGN9ic8/8zyHDT1Q3H5C
kL0B+3G4oykrPGfjol/geEUnD05pF6iB7Qy8cWDBPuYnFJUAz6uj/yqueU0n
uy52FefB8/Vvom6ubcL1NzuumgZ7sq2fWNeM3JwoPMsM79/oZBze+AbXDwu4
xgPeFiH5gK8FfhUadKeDg14+ZRdoxfmoZsRUBD3weZmm85a3dFLAe+i8P1iW
tL0SbsP1rJI12dEDMUHHtm57h33Nr3eHN5hSPRwi2o516VmNBoPJH48+sfe4
nt+LeQn0QrLKn70SHdjHaJ+vW4Knzkfe2dWJ941+5W+S6AXD8jW/pT/g/hki
x6bB+VP/vnAO+yGxcohGTzDJiZXKdyG/S8n6G9ATVmcfcyl9Qn+yC1AN0BPl
D9XdVD5jn75atqSCnuAew/GtG338q/x5CthF0kxMvQf7SuZ70yPojQaXgQjy
BV4YlxrlgAULznzT6KUTN+lP8nvQI37UGaL9lU4uX6YZ6aBHOraHpR3ow3lm
xR3NcrCkw+qFg/3Iq9jQ1SvolcjMpGP6A/g5h+yzueiVgYGtTw0H/z1ne2Fu
9MqeLQ95jwzhfU6XuYUHfPPEHi+Tb3Ti8cClvAA8lvLqndkw3i/umj7JQe/o
9hjtshihE2pVHI8EeidzY2+UJQX7hkKY0EfwgvkpmhUV++AuWxc62DxxQtuG
hvMU+31jBrik82LWSTr2ce7psM3oJXaelcscGNjvbE8p66CXHIxuWjt9x3lt
/Z8eCrgmdku18yjOe24CdvroqY1vCzed+UEnJqtPJgmhp7xWKZ53G8M82jVP
8KGXWg+++ODxE32+dSmOD70kekVf1msc5zHr8k4J9FJI46c471/4OT35QEVw
D7M9BMTzWhyt0QfLa47p+U/Sib/tumf26K3YUP/8C1N4v5uLnTdED9FqmVmC
pjGn7YF+yWCNxTj7kBm8zzhs7XkJTlXd/CLsN/ph+piHLHpqJiBXMGIW+3WY
QuhRsNEzbIdzdHLmi/L7IXDh7+ruq/P4+yeiBpboLWZFXaWYP+iHiBCR0+gp
a+/Om7ELuH6SUD4beqqi1Hoi/j86EfAzClEB8/yiH76xCD9rfR9tR0+5Svs8
SPyLvive9vgkuNFtiT1pCXNZeKayFT0lVBTtnLyMQXJO3BJUBgcw1jemMjHI
8ZQUgSXwB7HMrfeWM8je5n1PJdBjUqd2hWYwM4jeETOx5eipKzkVfVkrGOT2
6cT1M+Chb5qquSwMovI8cWoevaUq8u5OPiuD/DX5Ip6B3rpla/m7kA2fp2/N
VYmeGk8bMX2wkkHUessnD6OX9L56lj5kZ5DX+/0SJsHZmxe4SlcxyPWp0Oln
6KnFY5fdyjgYZJ+vBN8CesoiiaelfDWD1PFLvl8El3bdFXvGySAPC12yJdBT
HOt2RlZxMUj1NTO9X2Ank7Jvz7nxeWVpuq/QW3XX9+GAjc/zX+0fj97ia3+T
Vs/DIPwm5jWH0VvenOYLDWsxj6avm8fBbfqDx17zMghVaSRQET0mFu36tHkd
g4wr37tLAYc1/+ZtXc8gZkMHXpej13pZL3m1bWCQe3dbqleh1xR1ONvbNzII
wyT8pwF6LT4c9bKJQS6YnNr1FL3GqN8W/ZEP/36Fp7slekxrWQnt02YGeX/Q
7HUeOG3fXp0efgZZKpNSWItem73YmNUrwCDd++uZg979ey86sqxfkEGy1EQt
X4GL5nutB7fg/uO12LXReywqztXfhBhk+cnbpoHoPdvzk5sowpj3Rs8Hiui9
yidB52kiDOJM1AOSwLxTKz8ytjJIR2fFynL0oLtsouyPbQxyI/G8wW70YJOn
UPzP7Qzy4g1nYgxY5OH9H79EGeSg4lxPIjjwh+KhqR0MQstxovOgJ7sk6vNn
xBhk540Xr3eBd7sYsMztZBB3X0aYCXoyKv+z/R9xBilKqve5AB6m2L/4T4JB
/stflnwLvam+/afgkiSDJIbvDKCjJ5PsAwKZpBjESajszQb04kTGih5maeSt
MMFXFaw/EK/EuptBXOX/KgihJ3MF+RNXyjAI9z0/13DwklXexCpZBimhzDLt
QG9apsgaccoxiMYa+zvS4LLu5w+45Rk4ZxXxyIA5Nx5ctVaBQT4+/PucCnY2
/+C8TpFBHp2/oCiNXq2/adO4QYlBrgrFyZmC+TsZW/mUGSTYb2qmET3qu8Y3
lF+FQUyfyIolojfbD+Nx7cE8M55maaE3xWNjVIX3Mkh9/tmtS+Dw1g3JW1WR
txsRHKnozT72rN/b1Rjk5jnp9gvoTeWDUtgwGOSE2TebBXDC5Wel4vuQJ/tf
PYPo0dFXWty7CIPo3hud24Qe1WFud5PezyDTVWYbrMDpGsdbZDQY5Hlwb0Eu
enQ+hCImr8kggrNVP43Qo6a1ZyMVtRhkQkz/Vyp6tPi/hW/K2vBF5v0EB3qU
TfXK/r06DBLExrlxPdguYO09tQPId6Fpkx96tLoibWGfLoP8um/Tx4weXf97
p6XGQQbZcjNdLwXsqfDkqZYeg1yLaFthh159c46sO3CIQQxFucK8wdtKW7wO
6jOIt4eW21b0atC4efshAwbhUty11w69+llqaJehIYMwC/bXKKNXZd3coo0O
M8hb0X2F58Ex92dpxkYMst3a/v1G9CyFfknH7AjmV3Bz7yiYiHFlHzWGPzUK
kfPo3WSn5GWWJlj/F8+/OejdqeztNlamDOJx04dRDzb8VlJtbcYgjr8f84qj
V/OFVflOmmM+tQKxqmAm29fn7Y8yyI5ehkknetYqzfijowWDzOXHrGBCr5b3
4nX3GINYGtkYbgdzbz4d72KJ/DnXLa9Az7ocm/rhepxB1nU7XbZEzzbcDj7k
YcUg34T2sxaDBbvY8ULIILbmTc0M9Kwf7y0Wb2sGKfvu/6UWPdthLOzga8Mg
qQc9LnxCr0peL3rhZ4s+qloXOwGOfKe05cJJBml2zFoliJ4dWP0y8KIdg7Tt
aqn8Ct6jb9gTbA+fo3dkmKN3b0Z1K4U5MEg7SW6zRo+ONTkkhjsyyIoZiepd
6Eld1vGJSCcGeUL0mHPBmdoXjK6eYhAvZ6NTVPDCJZbiaGf0yYaexjGwef31
VbGnGeTNV/f5EfRqyRI/BoC+qNVx5UaPsu/Lb0w4wyBruNjHN4IdLsptS3Rl
EJv4Mkcf9GZNVU3obTcGOXw8eE0KeOP8wf477vDRPC3rEnrUS/mjaqoHg8Rm
XNokgt5s9bVNTvNkkDvi134qoSdFn3z/nX6WQVjzPAUvgEMmfc2yvBjkrINA
xV9wjwzT45xz+PnjKx84oUflPa9x53vj+fnZd3OjJ2OLN7oX+qBfTCnBHOhJ
2mhWS5Evg2yVYxxbD9aQkN758Dx8jRW9XQJOPV0Z+ciPQd7xBiRSwTN5eH3w
Z5CvySKT/3rTiNK+vzwA/XxF59QwerFwm9W9igt4/qlHT75GLzLbUxcqA+F3
1m5KOnrQOsPL8vlFBrkkt0yeBz1Y0f/f09ogBqkSG/prBuYRvLquPphBao8M
n2wEu1rxnmsIQT/22ZXt38Ugjcn32htD0U8LB/W+gYW6xaWawxjkXNBc2Tg4
YEN5dMslBnlWuKqjCr36wWw//W04gxxx4hbah16Vutmq0x7BILwF/uEv0KtX
Oo5md0TCx+tafA7o1SHub8s+XkafacV9HAWrHna3+XSFQTprfqcKoVdvXZvD
AQfP6aF5w03weEs4X28UgyzaLLLeAuuxc/v1RSMfjqUCG9Cr2bopHwdiGMSt
c2pFPXp0MVJU7ts15LCtZuk+etTi1aP4kVgGuezYaTgDLl2uNkaNYxDZVy0X
GtCrHBpNhxjx8GagMqMN7BRiUjB6nUFeTkfv2IXerKvpY/mZgL6Muy5vg97k
+++0w68b6EM26RWvwN57p19M3oQPo/p6e9Cbbf4hW2YSGUT4XEePIHpSrGLV
xdlb+HxPrRYH9GTYzK2e+dvoAy77F5PgXnkR5f+S8O8zfI6vQW8qnsNx7A7m
4GWboonejH+kPLkshUGU0zrWhYAZP18aMacijz8GH6aAtaQOF7PcZZDN4tWP
2NCjaa49q1amYR7VysXu4NlCx9Or7jGIdsPj8jz0qjF9vHF1OoMcOHDxiwd6
tGhH4DbuDAbx/WYgnIAeZXFiDePJZJDw0zvdbNGjttkJ/bxZDHIy+vpySfRo
5ZCA2oZs5GTZwsFg9CivcEHyphwGSeGU4aSjN91t5Gc35+Lfx29pO43ebLpb
ayaYxyCByzc45YBFevUeC+XjPoaZ4jzQm4F8XdxbC/DzXN8K5sBdFifdtxfi
OdZTy1PRo7tvj7bsuI+5/jz6Wxw9GfXx/E7xIgb5/L22XBg9Obx2+WXJB/ic
WlqpBnpR3Th2WKoYXm9TuhsNTorfpCHzEL3mWTO9gF6caMu+J1eCeRt9rtJC
D+qv3v2fwiP40ziuSwfnHqqyVC7F+fCR8j0v9OLSVZ2KPY/xvP8TEBgGWza9
X6dWBh83bYmWQC+WsZw4t+8Jg0QfMat0RQ9yatMgLM6PH/nsH6H3nC+dk9J6
ij7RM98cjd6rf7EYrVOB/TGhpnQdeo9/6Spd9xmDkHts2uXoPV91bG+VDPL4
6DImZ/Rce2B6tkEVej7oj8gtsHiVBJNRNYOc7zvWXA0Onyu3MX7OICv3blyp
gB7sU9J4blqD58QppHEVrOz7lu9oLYMosT35zINeTCiz8DtWhz61eOQUAR6d
+Pbx+Av08JUOeiJYR8ZDzroe5+HrVz5rohfTPebjbV8iT+6F5k3oxfkHEWN2
DegvUbEvPuhF01FufcdX6M/VDzIs0YvF4qkFpxpxvq99Md+O3mM7vYPV5TV6
c9VFC030lF1eqYNrE/LNcyevCb1UPaJW796MPPRVH2oDr9/WvOXsG5xvb1zk
lERPedqZXjzXwiBW23TMn4LfpPf3+LT+O4+PcJ1Hb23rd1H2e4v9d2d5gCJ6
K0hgJjGgDfObVZo9hZ76fDx0MvAdrruh23sbeko2meNIcDuDrLYJE0wFx3y+
XRz6HvvgqlW3tdFblPVbOcI7kGtfz9edYGJWfDqyk0Ey7uzw5UCPJd9QeX3l
A4PI8MwId6C3pt434ECOfms63+aG3jLkNgq71sUgCnp2KzPB+YZf+uM+od8P
DgyuRC8xXXNSS/iMPNFrJeLRS1Ytv5JvdiMHL98+fQUuX4m66EG/x9TfvYOe
4tZlM7/zBfsdp/9XH/SUS+SNxym9+LwdPwcvgRsaBNekfWUQk5/yi1/QU4LL
C93T+3C+cNpj9Avst1+hNbMfPbm/vJcXvdURXLczZwBzKQvZXgqWrDl0OW8Q
Pox3WM2BIxe6hguG4L1gz8xB9NjAHjuNom/oqfZ9T/L/57i847H8/jgckpWk
jJCshCgrqcQhSSUhISEkSaGQJEl2SEZJkiQkIUqSpDIiGRnZZYY8Sygj6/f+
/v7yuuq5zzn3Z1yfc4N3XqY9zB1EPXtryWrDa7dfe8/n/cR7PPW56gym/2E+
/nJolHB66sSMgvVVbxW9Gh4lD94Zv5yB11LdhfiLRhAvlo2zKomou7x0j+Jf
uK87WExcgcfMGIqNJaPok8HT4RHgPIWSLe8pWOfTsTVzYI5z+yI/UnF/26y0
6yA855DV9KucBr+Z+fzLh+dKR6z3faKjH5rbnTjgOcFNv9KqGcibDLufCzzn
fsqT6cvYKFmfW9+iAc/VPl48Ufd7lByqTdVXh9ek+8PfNYzj/raLZjEI9hfj
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
/ruIH0r+D2IupCQ=
       "]]}, {}, {}}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{}, 
    StyleBox[
     LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
      0.9999999795918367, 0.9999999795918367}}], 
     Directive[
      RGBColor[0.368417, 0.506779, 0.709798], 
      AbsoluteThickness[1.6], 
      Dashing[{0, Small}]], StripOnInput -> False]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{823., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7096933694239645`*^9, {3.709693701323969*^9, 3.7096937072091756`*^9}, 
   3.7096954998204737`*^9, 3.7097809637037396`*^9, 3.7098486539341927`*^9, {
   3.7098499671245623`*^9, 3.709849991686639*^9}, 3.709850028137171*^9, 
   3.7098503875904527`*^9, 3.7098504479019146`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<ANOVA`\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "standardized", "]"}]], "Input",
 CellChangeTimes->{{3.7098501967530155`*^9, 3.7098502040275183`*^9}}],

Cell[BoxData["8117"], "Output",
 CellChangeTimes->{3.7098502045086203`*^9, 3.7098503938607492`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"dataretrogrades", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7098502404140387`*^9, 3.709850244719928*^9}}],

Cell[BoxData["8117"], "Output",
 CellChangeTimes->{3.7098502454320745`*^9, 3.7098503955290947`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ANOVA", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Delete", "[", 
       RowBox[{"flightMerRx", ",", "pos5"}], "]"}], ",", "standardized"}], 
     "}"}], "]"}], ",", 
   RowBox[{"PostTests", "\[Rule]", "Bonferroni"}], ",", 
   RowBox[{"CellMeans", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7096933858543315`*^9, 3.70969342010635*^9}, {
   3.7096944965189037`*^9, 3.709694499229458*^9}, {3.709695465813506*^9, 
   3.7096954690941787`*^9}, {3.709755139028927*^9, 3.7097551401961656`*^9}, {
   3.7097758340258656`*^9, 3.709775836796435*^9}, {3.7098486740753546`*^9, 
   3.7098486820680065`*^9}, {3.709848751078267*^9, 3.7098487679487534`*^9}, {
   3.70984986737495*^9, 3.7098498946855936`*^9}, {3.7098500837406616`*^9, 
   3.709850140442379*^9}, 3.709850183529282*^9, {3.70985030454329*^9, 
   3.7098503212517433`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ANOVA", "\[Rule]", 
    InterpretationBox[GridBox[{
       {"\<\"\"\>", "\<\"DF\"\>", "\<\"SumOfSq\"\>", "\<\"MeanSq\"\>", \
"\<\"FRatio\"\>", "\<\"PValue\"\>"},
       {"\<\"Model\"\>", "1", "0.05391489074736455`", "0.05391489074736455`", 
        "0.053908605826941444`", "0.8164023039129442`"},
       {"\<\"Error\"\>", "8115", "8115.9460851092535`", 
        "1.0001165847331182`", "\<\"\"\>", "\<\"\"\>"},
       {"\<\"Total\"\>", "8116", "8116.`", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[2.0999999999999996`]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     TableForm[{{
       1, 0.05391489074736455, 0.05391489074736455, 0.053908605826941444`, 
        0.8164023039129442}, {
       8115, 8115.9460851092535`, 1.0001165847331182`}, {8116, 8116.}}, 
      TableHeadings -> {{"Model", "Error", "Total"}, {
        "DF", "SumOfSq", "MeanSq", "FRatio", "PValue"}}]]}], ",", 
   RowBox[{"CellMeans", "\[Rule]", 
    TagBox[GridBox[{
       {"\<\"All\"\>", 
        RowBox[{"-", "1.8083582239206705`*^-14"}]},
       {
        RowBox[{"\<\"Model\"\>", "[", "\<\"prograde\"\>", "]"}], 
        "0.001248603951177327`"},
       {
        RowBox[{"\<\"Model\"\>", "[", "\<\"retrograde\"\>", "]"}], 
        RowBox[{"-", "0.005319716380553579`"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[2.0999999999999996`]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Function[BoxForm`e$, 
      TableForm[BoxForm`e$]]]}], ",", 
   RowBox[{"PostTests", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"Model\"\>", "\[Rule]", 
      TagBox[GridBox[{
         {"Bonferroni", 
          RowBox[{"{", "\<\"\"\>", "}"}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[1.2]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$, TableSpacing -> {3, 1}, TableDepth -> 2]]]}], 
     "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7095953141562967`*^9, 3.7096934208004923`*^9, 3.709694499920599*^9, 
   3.709695469764316*^9, 3.7097809642828584`*^9, 3.709848667263949*^9, {
   3.7098487463432894`*^9, 3.709848769277028*^9}, {3.7098498954967613`*^9, 
   3.7098499107219067`*^9}, {3.7098501223326364`*^9, 3.709850141596617*^9}, 
   3.7098501842254305`*^9, 3.709850322011902*^9, 3.709850404232891*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Beep", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7098199000606623`*^9, 3.709819901629984*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Similarly, acquire retrogression data of other planets day by day for the 22 \
years, delete more missing entries, and run ANOVA and other tests \
\>", "Chapter",
 CellChangeTimes->{{3.7097452490540857`*^9, 3.7097453425092354`*^9}, 
   3.7097545197216516`*^9, {3.7097553395562496`*^9, 3.709755366620795*^9}, {
   3.7097553980042257`*^9, 3.7097554204478254`*^9}, {3.7098490922197647`*^9, 
   3.709849099739318*^9}, {3.709851200210597*^9, 3.7098512011027822`*^9}, {
   3.7100152031002645`*^9, 3.710015206154724*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"flightVenRx", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"PlanetData", "[", 
      RowBox[{
       RowBox[{"Entity", "[", 
        RowBox[{"\"\<Planet\>\"", ",", " ", "\"\<Venus\>\""}], "]"}], ",", 
       RowBox[{"EntityProperty", "[", 
        RowBox[{
        "\"\<Planet\>\"", ",", "\"\<RetrogradeApparentMotionQuery\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Date\>\"", "\[Rule]", "#"}], "}"}]}], "]"}]}], "]"}], 
     "&"}], "/@", "dates"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7095945490185237`*^9, 3.709594569452712*^9}, {
  3.70975522672911*^9, 3.7097552459670515`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","nodat",
   "\"Unable to download data. Some or all results may be missing.\"",2,64,38,
   15167133528138137613,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7098507345603714`*^9}],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","nodat",
   "\"Unable to download data. Some or all results may be missing.\"",2,64,39,
   15167133528138137613,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7098525050202365`*^9}],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","nodat",
   "\"Unable to download data. Some or all results may be missing.\"",2,64,40,
   15167133528138137613,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7098528651716614`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"EntityValue\\\", \\\"::\
\\\", \\\"nodat\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,64,41,15167133528138137613,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.709852865368702*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<22 yr VenRx.mx\>\"", ",", "flightVenRx"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7097554536026173`*^9, 3.709755458805684*^9}, {
  3.709755508496484*^9, 3.709755513531516*^9}, {3.7098140692696266`*^9, 
  3.709814069441662*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"flightMarRx", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"PlanetData", "[", 
      RowBox[{
       TemplateBox[{"\"Mars\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Planet\"", ",", "\"Mars\""}], "]"}],
         "\"Entity[\\\"Planet\\\", \\\"Mars\\\"]\"","\"planet\""},
        "Entity"], ",", 
       RowBox[{"EntityProperty", "[", 
        RowBox[{
        "\"\<Planet\>\"", ",", "\"\<RetrogradeApparentMotionQuery\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Date\>\"", "\[Rule]", "#"}], "}"}]}], "]"}]}], "]"}], 
     "&"}], "/@", "dates"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.709594635420227*^9, 3.709594654341104*^9}}],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","nodat",
   "\"Unable to download data. Some or all results may be missing.\"",2,66,42,
   15167133528138137613,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.709862947431444*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<22 yr MarRx.mx\>\"", ",", "flightMarRx"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7097554731752467`*^9, 3.7097554787203827`*^9}, {
  3.7097555183355002`*^9, 3.709755520417927*^9}, {3.709814075218845*^9, 
  3.709814075396881*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"flightJupRx", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"PlanetData", "[", 
      RowBox[{
       TemplateBox[{"\"Jupiter\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Planet\"", ",", "\"Jupiter\""}], "]"}],
         "\"Entity[\\\"Planet\\\", \\\"Jupiter\\\"]\"","\"planet\""},
        "Entity"], ",", 
       RowBox[{"EntityProperty", "[", 
        RowBox[{
        "\"\<Planet\>\"", ",", "\"\<RetrogradeApparentMotionQuery\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Date\>\"", "\[Rule]", "#"}], "}"}]}], "]"}]}], "]"}], 
     "&"}], "/@", "dates"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7095946707884736`*^9, 3.709594701100684*^9}}],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","nodat",
   "\"Unable to download data. Some or all results may be missing.\"",2,68,43,
   15167133528138137613,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7098693322113066`*^9}],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","nodat",
   "\"Unable to download data. Some or all results may be missing.\"",2,68,44,
   15167133528138137613,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7098693893261085`*^9}],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","nodat",
   "\"Unable to download data. Some or all results may be missing.\"",2,68,45,
   15167133528138137613,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7098694804519396`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"EntityValue\\\", \\\"::\
\\\", \\\"nodat\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,68,46,15167133528138137613,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.709869480650982*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<22 yr JupRx.mx\>\"", ",", "flightJupRx"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7097554947366643`*^9, 3.7097555262971325`*^9}, {
  3.7098140810590415`*^9, 3.709814081221074*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"flightSatRx", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"PlanetData", "[", 
      RowBox[{
       TemplateBox[{"\"Saturn\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Planet\"", ",", "\"Saturn\""}], "]"}],
         "\"Entity[\\\"Planet\\\", \\\"Saturn\\\"]\"","\"planet\""},
        "Entity"], ",", 
       RowBox[{"EntityProperty", "[", 
        RowBox[{
        "\"\<Planet\>\"", ",", "\"\<RetrogradeApparentMotionQuery\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Date\>\"", "\[Rule]", "#"}], "}"}]}], "]"}]}], "]"}], 
     "&"}], "/@", "dates"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.709594743319336*^9, 3.7095947684044733`*^9}, {
  3.709850483358243*^9, 3.7098504844054585`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","nodat",
   "\"Unable to download data. Some or all results may be missing.\"",2,70,47,
   15167133528138137613,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7098772065975447`*^9}],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","nodat",
   "\"Unable to download data. Some or all results may be missing.\"",2,70,48,
   15167133528138137613,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7098798206207323`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<22 yr SatRx.mx\>\"", ",", "flightSatRx"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7097555353289833`*^9, 3.7097555466333017`*^9}, {
  3.709814086788215*^9, 3.7098140869712534`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"flightUraRx", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"PlanetData", "[", 
      RowBox[{
       TemplateBox[{"\"Uranus\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Planet\"", ",", "\"Uranus\""}], "]"}],
         "\"Entity[\\\"Planet\\\", \\\"Uranus\\\"]\"","\"planet\""},
        "Entity"], ",", 
       RowBox[{"EntityProperty", "[", 
        RowBox[{
        "\"\<Planet\>\"", ",", "\"\<RetrogradeApparentMotionQuery\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Date\>\"", "\[Rule]", "#"}], "}"}]}], "]"}]}], "]"}], 
     "&"}], "/@", "dates"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7097552723269324`*^9, 3.7097552808726826`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","nodat",
   "\"Unable to download data. Some or all results may be missing.\"",2,72,49,
   15167133528138137613,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7098847189162703`*^9}],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","nodat",
   "\"Unable to download data. Some or all results may be missing.\"",2,72,50,
   15167133528138137613,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.709885332252799*^9}],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","nodat",
   "\"Unable to download data. Some or all results may be missing.\"",2,72,51,
   15167133528138137613,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.709885336188612*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"EntityValue\\\", \\\"::\
\\\", \\\"nodat\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,72,52,15167133528138137613,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.709885336390654*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<22 yr UraRx.mx\>\"", ",", "flightUraRx"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.709755554368883*^9, 3.709755563568768*^9}, {
  3.7098140967722616`*^9, 3.7098140969603014`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"flightNepRx", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"PlanetData", "[", 
      RowBox[{
       TemplateBox[{"\"Neptune\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Planet\"", ",", "\"Neptune\""}], "]"}],
         "\"Entity[\\\"Planet\\\", \\\"Neptune\\\"]\"","\"planet\""},
        "Entity"], ",", 
       RowBox[{"EntityProperty", "[", 
        RowBox[{
        "\"\<Planet\>\"", ",", "\"\<RetrogradeApparentMotionQuery\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Date\>\"", "\[Rule]", "#"}], "}"}]}], "]"}]}], "]"}], 
     "&"}], "/@", "dates"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7099064333034267`*^9, 3.7099064582325773`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","nodat",
   "\"Unable to download data. Some or all results may be missing.\"",2,7,1,
   15167506970941007129,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.709909576389783*^9}],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","nodat",
   "\"Unable to download data. Some or all results may be missing.\"",2,7,2,
   15167506970941007129,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7099096819215918`*^9}],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","nodat",
   "\"Unable to download data. Some or all results may be missing.\"",2,7,3,
   15167506970941007129,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7099097439584117`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"EntityValue\\\", \\\"::\
\\\", \\\"nodat\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,7,4,15167506970941007129,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.709909744158454*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<22 yr NepRx.mx\>\"", ",", "flightNepRx"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.709906490065156*^9, 3.709906496632513*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"flightPluRx", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"MinorPlanetData", "[", 
      RowBox[{
       TemplateBox[{"\"Pluto\"",RowBox[{"Entity", "[", 
           RowBox[{"\"MinorPlanet\"", ",", "\"Pluto\""}], "]"}],
         "\"Entity[\\\"MinorPlanet\\\", \\\"Pluto\\\"]\"","\"minor planet\""},
        "Entity"], ",", 
       RowBox[{"EntityProperty", "[", 
        RowBox[{
        "\"\<MinorPlanet\>\"", ",", "\"\<RetrogradeApparentMotionQuery\>\"", 
         ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Date\>\"", "\[Rule]", "#"}], "}"}]}], "]"}]}], "]"}], 
     "&"}], "/@", "dates"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.709755301958617*^9, 3.7097553320627146`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","nodat",
   "\"Unable to download data. Some or all results may be missing.\"",2,74,53,
   15167133528138137613,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.709895412423176*^9}],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","nodat",
   "\"Unable to download data. Some or all results may be missing.\"",2,74,54,
   15167133528138137613,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.709895413446387*^9}],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","nodat",
   "\"Unable to download data. Some or all results may be missing.\"",2,74,55,
   15167133528138137613,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.70990042201077*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"EntityValue\\\", \\\"::\
\\\", \\\"nodat\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,74,56,15167133528138137613,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.709900422025771*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<22 yr PluRx.mx\>\"", ",", "flightPluRx"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7097555736168265`*^9, 3.709755584037962*^9}, {
  3.709814109036774*^9, 3.7098141092028084`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"flightMerRx", "=", 
   RowBox[{"Import", "[", "\"\<22 yrs MerRx.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.709906514395184*^9, 3.7099065220277605`*^9}, 
   3.7099065673531275`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"flightVenRx", "=", 
   RowBox[{"Import", "[", "\"\<22 yr VenRx.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7099065811079693`*^9, 3.70990658870654*^9}, 
   3.7099149309604053`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"flightMarRx", "=", 
   RowBox[{"Import", "[", "\"\<22 yr MarRx.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7099066103040032`*^9, 3.709906615736126*^9}, 
   3.7099149352383604`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"flightJupRx", "=", 
   RowBox[{"Import", "[", "\"\<22 yr JupRx.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.709906622943615*^9, 3.709906629520975*^9}, 
   3.709914938728982*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"flightSatRx", "=", 
   RowBox[{"Import", "[", "\"\<22 yr SatRx.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7099066382887864`*^9, 3.7099066432928205`*^9}, 
   3.7099149428908253`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"flightUraRx", "=", 
   RowBox[{"Import", "[", "\"\<22 yr UraRx.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7099066513274803`*^9, 3.70990665693664*^9}, 
   3.7099149492742205`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"flightNepRx", "=", 
   RowBox[{"Import", "[", "\"\<22 yr NepRx.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.709906664154132*^9, 3.7099066697002788`*^9}, 
   3.7099149528778543`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"flightPluRx", "=", 
   RowBox[{"Import", "[", "\"\<22 yr PluRx.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7099066780239973`*^9, 3.7099066842932935`*^9}, 
   3.709914956582607*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fulldata", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"flightMerRx", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"flightVenRx", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"flightMarRx", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"flightJupRx", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"flightSatRx", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"flightUraRx", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"flightNepRx", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"flightPluRx", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"Log", "[", 
        RowBox[{"years0", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "dates", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.709594850158225*^9, 3.709594992002289*^9}, {
   3.709595090805534*^9, 3.7095950915016747`*^9}, {3.70975561004129*^9, 
   3.7097556175098205`*^9}, 3.709779770761505*^9, {3.709782498806676*^9, 
   3.7097825225425396`*^9}, {3.7098714578595705`*^9, 3.709871471048296*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fulldata", "//", "Short"}]], "Input",
 CellChangeTimes->{{3.7097556245162573`*^9, 3.7097556284560647`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"retrograde\"\>", ",", "\<\"prograde\"\>", 
      ",", "\<\"prograde\"\>", ",", "\<\"retrograde\"\>", 
      ",", "\<\"prograde\"\>", ",", "\<\"prograde\"\>", 
      ",", "\<\"prograde\"\>", ",", "\<\"prograde\"\>", ",", 
      RowBox[{"-", "5.144108545495726`"}]}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "8126", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\<\"prograde\"\>", ",", "\<\"prograde\"\>", 
      ",", "\<\"prograde\"\>", ",", "\<\"prograde\"\>", 
      ",", "\<\"prograde\"\>", ",", "\<\"prograde\"\>", 
      ",", "\<\"prograde\"\>", ",", "\<\"prograde\"\>", ",", 
      RowBox[{"-", "4.451651490324811`"}]}], "}"}]}], "}"}],
  Short]], "Output",
 CellChangeTimes->{3.7099029523674445`*^9, 3.7099138341667786`*^9, 
  3.709914962474804*^9, 3.7099150002264743`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"pos5", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1828", "}"}], ",", 
     RowBox[{"{", "5603", "}"}], ",", 
     RowBox[{"{", "5605", "}"}], ",", 
     RowBox[{"{", "5606", "}"}], ",", 
     RowBox[{"{", "7694", "}"}], ",", 
     RowBox[{"{", "7696", "}"}], ",", 
     RowBox[{"{", "7972", "}"}], ",", 
     RowBox[{"{", "5095", "}"}], ",", 
     RowBox[{"{", "5096", "}"}], ",", 
     RowBox[{"{", "5094", "}"}], ",", 
     RowBox[{"{", "5097", "}"}]}], "}"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<22 yrs flight cancellation full data.mx\>\"", ",", "fulldata"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.709593086009759*^9, 3.7095931028552103`*^9}, {
  3.7095950872468033`*^9, 3.7095951082941217`*^9}, {3.7097556350834217`*^9, 
  3.7097556366497464`*^9}, {3.7098141185257187`*^9, 3.709814119085832*^9}}],

Cell[BoxData["\<\"22 yrs flight cancellation full data.mx\"\>"], "Output",
 CellChangeTimes->{3.7095931047886066`*^9, 3.7095955517899876`*^9, 
  3.7099029524764676`*^9, 3.7099138343528156`*^9, 3.709915007418934*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alldeletes", "=", 
  RowBox[{"Union", "[", 
   RowBox[{"pos5", ",", 
    RowBox[{"Position", "[", 
     RowBox[{"flightVenRx", ",", "_Missing"}], "]"}], ",", 
    RowBox[{"Position", "[", 
     RowBox[{"flightMarRx", ",", "_Missing"}], "]"}], ",", 
    RowBox[{"Position", "[", 
     RowBox[{"flightJupRx", ",", "_Missing"}], "]"}], ",", 
    RowBox[{"Position", "[", 
     RowBox[{"flightSatRx", ",", "_Missing"}], "]"}], ",", 
    RowBox[{"Position", "[", 
     RowBox[{"flightUraRx", ",", "_Missing"}], "]"}], ",", 
    RowBox[{"Position", "[", 
     RowBox[{"flightNepRx", ",", "_Missing"}], "]"}], ",", 
    RowBox[{"Position", "[", 
     RowBox[{"flightPluRx", ",", "_Missing"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.709871191401507*^9, 3.7098713335848894`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "59", "}"}], ",", 
   RowBox[{"{", "227", "}"}], ",", 
   RowBox[{"{", "626", "}"}], ",", 
   RowBox[{"{", "630", "}"}], ",", 
   RowBox[{"{", "1036", "}"}], ",", 
   RowBox[{"{", "1205", "}"}], ",", 
   RowBox[{"{", "1250", "}"}], ",", 
   RowBox[{"{", "1746", "}"}], ",", 
   RowBox[{"{", "1747", "}"}], ",", 
   RowBox[{"{", "1828", "}"}], ",", 
   RowBox[{"{", "2081", "}"}], ",", 
   RowBox[{"{", "2108", "}"}], ",", 
   RowBox[{"{", "2193", "}"}], ",", 
   RowBox[{"{", "2194", "}"}], ",", 
   RowBox[{"{", "2197", "}"}], ",", 
   RowBox[{"{", "2209", "}"}], ",", 
   RowBox[{"{", "2552", "}"}], ",", 
   RowBox[{"{", "2896", "}"}], ",", 
   RowBox[{"{", "3013", "}"}], ",", 
   RowBox[{"{", "3016", "}"}], ",", 
   RowBox[{"{", "3638", "}"}], ",", 
   RowBox[{"{", "3726", "}"}], ",", 
   RowBox[{"{", "3854", "}"}], ",", 
   RowBox[{"{", "3921", "}"}], ",", 
   RowBox[{"{", "3948", "}"}], ",", 
   RowBox[{"{", "4262", "}"}], ",", 
   RowBox[{"{", "4300", "}"}], ",", 
   RowBox[{"{", "4992", "}"}], ",", 
   RowBox[{"{", "5094", "}"}], ",", 
   RowBox[{"{", "5095", "}"}], ",", 
   RowBox[{"{", "5096", "}"}], ",", 
   RowBox[{"{", "5097", "}"}], ",", 
   RowBox[{"{", "5225", "}"}], ",", 
   RowBox[{"{", "5376", "}"}], ",", 
   RowBox[{"{", "5603", "}"}], ",", 
   RowBox[{"{", "5605", "}"}], ",", 
   RowBox[{"{", "5606", "}"}], ",", 
   RowBox[{"{", "5627", "}"}], ",", 
   RowBox[{"{", "5849", "}"}], ",", 
   RowBox[{"{", "6226", "}"}], ",", 
   RowBox[{"{", "6994", "}"}], ",", 
   RowBox[{"{", "7379", "}"}], ",", 
   RowBox[{"{", "7418", "}"}], ",", 
   RowBox[{"{", "7458", "}"}], ",", 
   RowBox[{"{", "7694", "}"}], ",", 
   RowBox[{"{", "7696", "}"}], ",", 
   RowBox[{"{", "7805", "}"}], ",", 
   RowBox[{"{", "7806", "}"}], ",", 
   RowBox[{"{", "7808", "}"}], ",", 
   RowBox[{"{", "7809", "}"}], ",", 
   RowBox[{"{", "7877", "}"}], ",", 
   RowBox[{"{", "7972", "}"}], ",", 
   RowBox[{"{", "8037", "}"}], ",", 
   RowBox[{"{", "8085", "}"}], ",", 
   RowBox[{"{", "8086", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7099029528905535`*^9, 3.7099138343788223`*^9, 
  3.709915010917647*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "alldeletes", "]"}]], "Input",
 CellChangeTimes->{{3.7098713379887996`*^9, 3.7098713445391536`*^9}}],

Cell[BoxData["55"], "Output",
 CellChangeTimes->{3.709902952944565*^9, 3.7099138344048266`*^9, 
  3.7099150137312174`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Flatten", "[", "alldeletes", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.709920075373449*^9, 3.7099200944053144`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1zjlLA1EYheGLlZWksLBIoWEQCSJxjXvGuMWtyS8QIYUQsLVRRmzEKkS0
0SIqxEYl4ILgksrOTgutxahdam1czvsNXF6eOTB3mhaW0pka51z89/xVTzXx
n2DO54U6n8W1am4dh9SSuV6N5XCD+pTHYXVjCzeqqV0cUWfNHvft4WY1WcAt
6rI5qkb2cavqmdvUqDnG98ztavUQd6iFIu5UN49wF/9n7lazx7hHDZ/gOD7F
veqBuU99NverxRIeUB/Mg2pwhofUinlYfTcn1A+zr37iAC+es4/QC3b8il1S
fbMdV2wfVb9txy+X7GNq+ordfM0+rj7esOMv7CbUyC07rrtjn1RDOMArtqfU
VdtxYPuUumY7vrd9WvXK7DiD3Yy6bTveKfs/pzhxOQ==
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 55.}, {0, 8086.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.709920082900978*^9, 3.7099200949164205`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gb", "=", 
   RowBox[{"GatherBy", "[", 
    RowBox[{
     RowBox[{"Delete", "[", 
      RowBox[{"fulldata", ",", "alldeletes"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
  RowBox[{"ratioMer", "=", 
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"gb", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], "/", 
     RowBox[{"Length", "[", 
      RowBox[{"gb", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}], " ", 
   RowBox[{"(*", 
    RowBox[{"MERCURY", " ", "RATIO"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.709906765934164*^9, 3.70990677776861*^9}, {
   3.7099154573473344`*^9, 3.7099155718826003`*^9}, {3.709915629585322*^9, 
   3.70991567614178*^9}, {3.709915844800041*^9, 3.7099158745660877`*^9}, 
   3.7099165463415546`*^9, 3.7099169187702093`*^9}],

Cell[BoxData["0.23497016980266178`"], "Output",
 CellChangeTimes->{{3.7099155540289736`*^9, 3.709915572865801*^9}, 
   3.7099156552015276`*^9, {3.7099158463803654`*^9, 3.709915875040184*^9}, 
   3.7099165470857053`*^9, 3.709916919472354*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ratioMer", "/", 
  RowBox[{"(", 
   RowBox[{"1", "+", "ratioMer"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.7099171704843435`*^9, 3.7099171857594476`*^9}}],

Cell[BoxData["0.1902638424377555`"], "Output",
 CellChangeTimes->{3.709917186585614*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gb", "=", 
   RowBox[{"GatherBy", "[", 
    RowBox[{
     RowBox[{"Delete", "[", 
      RowBox[{"fulldata", ",", "alldeletes"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
  RowBox[{"ratioVen", "=", 
   RowBox[{"1", "/", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"gb", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "/", 
      RowBox[{"Length", "[", 
       RowBox[{"gb", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}], " ", 
    RowBox[{"(*", 
     RowBox[{"VENUS", " ", "RATIO"}], "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7099156797875204`*^9, 3.7099157409739504`*^9}, {
  3.7099159579230223`*^9, 3.7099159650264645`*^9}, {3.7099166138332653`*^9, 
  3.7099166473670774`*^9}}],

Cell[BoxData["0.0791338056409571`"], "Output",
 CellChangeTimes->{3.7099166480422144`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ratioVen", "/", 
  RowBox[{"(", 
   RowBox[{"1", "+", "ratioVen"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.7099172006954803`*^9, 3.7099172054804525`*^9}}],

Cell[BoxData["0.07333085593955159`"], "Output",
 CellChangeTimes->{3.7099172060625715`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gb", "=", 
   RowBox[{"GatherBy", "[", 
    RowBox[{
     RowBox[{"Delete", "[", 
      RowBox[{"fulldata", ",", "alldeletes"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}]}], ";", 
  RowBox[{"ratioMar", "=", 
   RowBox[{"1", "/", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"gb", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "/", 
      RowBox[{"Length", "[", 
       RowBox[{"gb", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}], 
    RowBox[{"(*", 
     RowBox[{"MARS", " ", "RATIO"}], "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.709915754485695*^9, 3.7099157740776744`*^9}, {
   3.709915970596596*^9, 3.709915972677019*^9}, 3.7099166598766174`*^9}],

Cell[BoxData["0.1018152040398526`"], "Output",
 CellChangeTimes->{{3.7099157548467703`*^9, 3.709915774629789*^9}, 
   3.7099159734111676`*^9, 3.7099166613939257`*^9, 3.709916931398776*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ratioMar", "/", 
  RowBox[{"(", 
   RowBox[{"1", "+", "ratioMar"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.7099172309466276`*^9, 3.7099172352965097`*^9}}],

Cell[BoxData["0.09240678805896198`"], "Output",
 CellChangeTimes->{3.7099172356965914`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gb", "=", 
   RowBox[{"GatherBy", "[", 
    RowBox[{
     RowBox[{"Delete", "[", 
      RowBox[{"fulldata", ",", "alldeletes"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "4"}], "]"}], "]"}], "]"}]}], ";", 
  RowBox[{"ratioJup", "=", 
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"gb", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], "/", 
     RowBox[{"Length", "[", 
      RowBox[{"gb", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}], 
   RowBox[{"(*", 
    RowBox[{"JUPITER", " ", "RATIO"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.7099157819282694`*^9, 3.709915795638054*^9}, {
   3.7099159801795425`*^9, 3.70991598090469*^9}, 3.709916928355158*^9}],

Cell[BoxData["0.4441860465116279`"], "Output",
 CellChangeTimes->{3.709915796117153*^9, 3.70991598148481*^9, 
  3.709916928896268*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ratioJup", "/", 
  RowBox[{"(", 
   RowBox[{"1", "+", "ratioJup"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.709917243431163*^9, 3.7099172489142766`*^9}}],

Cell[BoxData["0.30756843800322065`"], "Output",
 CellChangeTimes->{3.7099172495103984`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gb", "=", 
   RowBox[{"GatherBy", "[", 
    RowBox[{
     RowBox[{"Delete", "[", 
      RowBox[{"fulldata", ",", "alldeletes"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "5"}], "]"}], "]"}], "]"}]}], ";", 
  RowBox[{"ratioSat", "=", 
   RowBox[{"1", "/", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"gb", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "/", 
      RowBox[{"Length", "[", 
       RowBox[{"gb", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}], 
    RowBox[{"(*", 
     RowBox[{"SATURN", " ", "RATIO"}], "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.70991580309657*^9, 3.709915828030635*^9}, {
   3.7099159924720397`*^9, 3.70991599301015*^9}, 3.709916939332387*^9}],

Cell[BoxData["0.5453675344563553`"], "Output",
 CellChangeTimes->{{3.7099158214122925`*^9, 3.709915828835799*^9}, 
   3.7099159944274387`*^9, 3.7099169398404903`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ratioSat", "/", 
  RowBox[{"(", 
   RowBox[{"1", "+", "ratioSat"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.7099172612037725`*^9, 3.7099172654786406`*^9}}],

Cell[BoxData["0.35290474420909207`"], "Output",
 CellChangeTimes->{3.7099172661857843`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gb", "=", 
   RowBox[{"GatherBy", "[", 
    RowBox[{
     RowBox[{"Delete", "[", 
      RowBox[{"fulldata", ",", "alldeletes"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "6"}], "]"}], "]"}], "]"}]}], ";", 
  RowBox[{"ratioUra", "=", 
   RowBox[{"1", "/", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"gb", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "/", 
      RowBox[{"Length", "[", 
       RowBox[{"gb", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}], 
    RowBox[{"(*", 
     RowBox[{"URANUS", " ", "RATIO"}], "*)"}]}]}]}]], "Input",
 CellChangeTimes->{
  3.7099159054363585`*^9, {3.709916039154523*^9, 3.7099160655268803`*^9}, {
   3.709916944063348*^9, 3.7099169447714915`*^9}}],

Cell[BoxData["0.7125583368689011`"], "Output",
 CellChangeTimes->{
  3.7099159068306465`*^9, {3.709916044674644*^9, 3.709916066321041*^9}, 
   3.7099169454736385`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ratioUra", "/", 
  RowBox[{"(", 
   RowBox[{"1", "+", "ratioUra"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.709917273315233*^9, 3.7099172791184115`*^9}}],

Cell[BoxData["0.416078285643503`"], "Output",
 CellChangeTimes->{3.7099172815489054`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gb", "=", 
   RowBox[{"GatherBy", "[", 
    RowBox[{
     RowBox[{"Delete", "[", 
      RowBox[{"fulldata", ",", "alldeletes"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "7"}], "]"}], "]"}], "]"}]}], ";", 
  RowBox[{"ratioNep", "=", 
   RowBox[{"1", "/", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"gb", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "/", 
      RowBox[{"Length", "[", 
       RowBox[{"gb", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}], 
    RowBox[{"(*", 
     RowBox[{"NEPTUNE", " ", "RATIO"}], "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7099159146872387`*^9, 3.7099159245632443`*^9}, {
  3.7099160525452433`*^9, 3.709916074909786*^9}, {3.7099169496154757`*^9, 
  3.7099169502966137`*^9}}],

Cell[BoxData["0.762278978388998`"], "Output",
 CellChangeTimes->{3.7099159251143565`*^9, 3.709916075528964*^9, 
  3.7099169509967566`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ratioNep", "/", 
  RowBox[{"(", 
   RowBox[{"1", "+", "ratioNep"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.7099172901396503`*^9, 3.709917294962631*^9}}],

Cell[BoxData["0.43255295429208473`"], "Output",
 CellChangeTimes->{3.7099172954847374`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gb", "=", 
   RowBox[{"GatherBy", "[", 
    RowBox[{
     RowBox[{"Delete", "[", 
      RowBox[{"fulldata", ",", "alldeletes"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "8"}], "]"}], "]"}], "]"}]}], ";", 
  RowBox[{"ratioPlu", "=", 
   RowBox[{"1", "/", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"gb", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "/", 
      RowBox[{"Length", "[", 
       RowBox[{"gb", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}], 
    RowBox[{"(*", 
     RowBox[{"SATURN", " ", "RATIO"}], "*)"}]}]}]}]], "Input",
 CellChangeTimes->{
  3.709915940130407*^9, {3.709916081126049*^9, 3.7099160818722005`*^9}, {
   3.709916955232617*^9, 3.7099169559297595`*^9}}],

Cell[BoxData["0.760741548527808`"], "Output",
 CellChangeTimes->{3.7099160826783657`*^9, 3.709916956513878*^9, 
  3.709917082770525*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ratioPlu", "/", 
  RowBox[{"(", 
   RowBox[{"1", "+", "ratioPlu"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.7099173032333107`*^9, 3.7099173083113437`*^9}}],

Cell[BoxData["0.43205747553573637`"], "Output",
 CellChangeTimes->{3.709917308921466*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<ANOVA`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7096509396258535`*^9, 3.709650961124258*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ANOVA", "[", 
  RowBox[{
   RowBox[{"Delete", "[", 
    RowBox[{"fulldata", ",", "alldeletes"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "Mer", ",", "Ven", ",", "Mars", ",", "Jup", ",", "Sat", ",", "Ura", ",", 
     "Nep", ",", "Plu", ",", "All"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "Mer", ",", "Ven", ",", "Mars", ",", "Jup", ",", "Sat", ",", "Ura", ",", 
     "Nep", ",", "Plu"}], "}"}], ",", 
   RowBox[{"PostTests", "\[Rule]", "Bonferroni"}], ",", 
   RowBox[{"CellMeans", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.709595026001254*^9, 3.7095950449971476`*^9}, {
  3.7095957166817713`*^9, 3.7095957177089834`*^9}, {3.7097557818835373`*^9, 
  3.7097558048336215`*^9}, {3.709871360892533*^9, 3.709871375077463*^9}}],

Cell[BoxData[
 TemplateBox[{
  "LinearModelFit","terms",
   "\"Only \\!\\(\\*RowBox[{\\\"86\\\"}]\\) terms are needed to represent all \
nominal values and continuous basis functions, which is fewer than the total \
number of nominal terms and continuous basis functions \
\\!\\(\\*RowBox[{\\\"256\\\"}]\\). A model for \
\\!\\(\\*RowBox[{\\\"86\\\"}]\\) terms of basis functions will be \
returned.\"",2,23,2,15167562623507322558,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7099153013986535`*^9}],

Cell[BoxData[
 TemplateBox[{
  "ANOVA","zerodf",
   "\"The model contains \\!\\(\\*RowBox[{\\\"170\\\"}]\\) \
\\!\\(\\*RowBox[{\\\"\\\\\\\"effects or interactions that \
have\\\\\\\"\\\"}]\\) zero degrees of freedom. \
\\!\\(\\*RowBox[{\\\"\\\\\\\"These terms\\\\\\\"\\\"}]\\) will be omitted \
from the ANOVA table.\"",2,23,3,15167562623507322558,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7099153030419874`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ANOVA", "\[Rule]", 
    InterpretationBox[GridBox[{
       {"\<\"\"\>", "\<\"DF\"\>", "\<\"SumOfSq\"\>", "\<\"MeanSq\"\>", \
"\<\"FRatio\"\>", "\<\"PValue\"\>"},
       {"Mer", "1", "0.10725949670359114`", "0.10725949670359114`", 
        "0.16492406325958772`", "0.6846738059052846`"},
       {"Ven", "1", "1.8240870591607745`", "1.8240870591607745`", 
        "2.8047479130671205`", "0.09402476546079686`"},
       {"Mars", "1", "13.147169803554789`", "13.147169803554789`", 
        "20.215316414899938`", "7.017305372011215`*^-6"},
       {"Jup", "1", "0.253395224290216`", "0.253395224290216`", 
        "0.389624893691281`", "0.5325144673983991`"},
       {"Sat", "1", "28.911061086692825`", "28.911061086692825`", 
        "44.4541491812155`", "2.7769836912116158`*^-11"},
       {"Ura", "1", "132.99136761344016`", "132.99136761344016`", 
        "204.48983446072558`", "8.025985074852367`*^-46"},
       {"Nep", "1", "2.1150723674782057`", "2.1150723674782057`", 
        "3.2521719722082434`", "0.07136655097177505`"},
       {"Plu", "1", "64.90614823199758`", "64.90614823199758`", 
        "99.80081974962081`", "2.3100223134114305`*^-23"},
       {
        RowBox[{"Mer", " ", "Ven"}], "1", "32.81119236877839`", 
        "32.81119236877839`", "50.45105871422323`", 
        "1.3267507759877928`*^-12"},
       {
        RowBox[{"Mars", " ", "Mer"}], "1", "0.07091125302395085`", 
        "0.07091125302395085`", "0.10903437307614314`", "0.74125483804696`"},
       {
        RowBox[{"Jup", " ", "Mer"}], "1", "1.328546675990765`", 
        "1.328546675990765`", "2.042796421466706`", "0.15296739399516324`"},
       {
        RowBox[{"Mer", " ", "Sat"}], "1", "2.931711832446126`", 
        "2.931711832446126`", "4.5078509835767155`", "0.033770271036131776`"},
       {
        RowBox[{"Mer", " ", "Ura"}], "1", "0.4025707829896419`", 
        "0.4025707829896419`", "0.6189998211880715`", "0.4314425449506605`"},
       {
        RowBox[{"Mer", " ", "Nep"}], "1", "6.76633658819992`", 
        "6.76633658819992`", "10.404036545051067`", "0.0012624650768395043`"},
       {
        RowBox[{"Mer", " ", "Plu"}], "1", "1.998624448321607`", 
        "1.998624448321607`", "3.073119631150715`", "0.07963495235968901`"},
       {
        RowBox[{"Mars", " ", "Ven"}], "1", "1.2279475989726052`", 
        "1.2279475989726052`", "1.8881135350846405`", "0.16945340753621196`"},
       {
        RowBox[{"Jup", " ", "Ven"}], "1", "21.0510473678587`", 
        "21.0510473678587`", "32.368455703009715`", "1.3204386692442287`*^-8"},
       {
        RowBox[{"Sat", " ", "Ven"}], "1", "68.70358071466762`", 
        "68.70358071466762`", "105.63981782665466`", 
        "1.2584411442742702`*^-24"},
       {
        RowBox[{"Ura", " ", "Ven"}], "1", "0.05754314936075389`", 
        "0.05754314936075389`", "0.08847934492509266`", "0.7661270642887444`"},
       {
        RowBox[{"Nep", " ", "Ven"}], "1", "4.168498974472641`", 
        "4.168498974472641`", "6.409556353441614`", "0.011369789253135792`"},
       {
        RowBox[{"Plu", " ", "Ven"}], "1", "1.9510044992975963`", 
        "1.9510044992975963`", "2.999898371247196`", "0.08330834803856449`"},
       {
        RowBox[{"Jup", " ", "Mars"}], "1", "49.66205116493438`", 
        "49.66205116493438`", "76.3612315892239`", "2.845632771581331`*^-18"},
       {
        RowBox[{"Mars", " ", "Sat"}], "1", "6.853910851932596`", 
        "6.853910851932596`", "10.538692252523505`", "0.0011738319231161976`"},
       {
        RowBox[{"Mars", " ", "Ura"}], "1", "2.9027193887241083`", 
        "2.9027193887241083`", "4.463271699043302`", "0.03466205512555323`"},
       {
        RowBox[{"Mars", " ", "Nep"}], "1", "0.21237878178544634`", 
        "0.21237878178544634`", "0.32655729999341326`", "0.5677094210742826`"},
       {
        RowBox[{"Mars", " ", "Plu"}], "1", "56.42543527665566`", 
        "56.42543527665566`", "86.7607283552111`", "1.5558994190868216`*^-20"},
       {
        RowBox[{"Jup", " ", "Sat"}], "1", "280.11728664152815`", 
        "280.11728664152815`", "430.71320043425777`", 
        "3.1749842234123685`*^-93"},
       {
        RowBox[{"Jup", " ", "Ura"}], "1", "117.37698800337057`", 
        "117.37698800337057`", "180.48089343719275`", 
        "1.050745793812349`*^-40"},
       {
        RowBox[{"Jup", " ", "Nep"}], "1", "18.621023002951915`", 
        "18.621023002951915`", "28.63200807462169`", "8.99514700030872`*^-8"},
       {
        RowBox[{"Jup", " ", "Plu"}], "1", "0.2919874305043777`", 
        "0.2919874305043777`", "0.4489649396042352`", "0.5028462695915414`"},
       {
        RowBox[{"Sat", " ", "Ura"}], "1", "109.86490323038379`", 
        "109.86490323038379`", "168.93018154325955`", 
        "3.089644859360398`*^-38"},
       {
        RowBox[{"Nep", " ", "Sat"}], "1", "55.84521133097951`", 
        "55.84521133097951`", "85.86856594850258`", 
        "2.4311522526189972`*^-20"},
       {
        RowBox[{"Plu", " ", "Sat"}], "1", "13.697539675407825`", 
        "13.697539675407825`", "21.061574679680906`", 
        "4.515495044304171`*^-6"},
       {
        RowBox[{"Nep", " ", "Ura"}], "1", "43.269600109548264`", 
        "43.269600109548264`", "66.5320879269544`", "3.967315036121659`*^-16"},
       {
        RowBox[{"Plu", " ", "Ura"}], "1", "5.587355224284693`", 
        "5.587355224284693`", "8.591214342635121`", "0.003387462155326577`"},
       {
        RowBox[{"Nep", " ", "Plu"}], "1", "17.60556816371718`", 
        "17.60556816371718`", "27.070627094007815`", "2.010319155989178`*^-7"},
       {
        RowBox[{"Jup", " ", "Mer", " ", "Ven"}], "1", "10.550260579013411`", 
        "10.550260579013411`", "16.2222637306118`", "0.0000568499670785093`"},
       {
        RowBox[{"Mer", " ", "Sat", " ", "Ven"}], "1", "6.967022325219659`", 
        "6.967022325219659`", "10.712614416519228`", "0.0010685986879559466`"},
       {
        RowBox[{"Mer", " ", "Ura", " ", "Ven"}], "1", "0.18649156579067494`", 
        "0.18649156579067494`", "0.2867526674942068`", "0.5923239616753618`"},
       {
        RowBox[{"Mer", " ", "Plu", " ", "Ven"}], "1", "0.17600569099977292`", 
        "0.17600569099977292`", "0.27062940446859407`", "0.602924293451014`"},
       {
        RowBox[{"Jup", " ", "Mars", " ", "Mer"}], "1", "2.4145893918775982`", 
        "2.4145893918775982`", "3.712714546036254`", "0.05403493728920943`"},
       {
        RowBox[{"Mars", " ", "Mer", " ", "Sat"}], "1", "6.073304397797983`", 
        "6.073304397797983`", "9.33841822384415`", "0.0022513987098045627`"},
       {
        RowBox[{"Mars", " ", "Mer", " ", "Ura"}], "1", "2.1357403635411174`", 
        "2.1357403635411174`", "3.2839514415781985`", "0.06999783805712499`"},
       {
        RowBox[{"Mars", " ", "Mer", " ", "Nep"}], "1", 
        "0.015298940058528387`", "0.015298940058528387`", 
        "0.02352391569568962`", "0.8781063689362255`"},
       {
        RowBox[{"Mars", " ", "Mer", " ", "Plu"}], "1", "0.8778792888952012`", 
        "0.8778792888952012`", "1.3498424272504215`", "0.24534038319885276`"},
       {
        RowBox[{"Jup", " ", "Mer", " ", "Sat"}], "1", "11.189801398285454`", 
        "11.189801398285454`", "17.20563279140639`", 
        "0.000033891575501551116`"},
       {
        RowBox[{"Jup", " ", "Mer", " ", "Ura"}], "1", "3.4055229536252227`", 
        "3.4055229536252227`", "5.236391184901576`", "0.022145110659793625`"},
       {
        RowBox[{"Jup", " ", "Mer", " ", "Nep"}], "1", "6.0263839127892425`", 
        "6.0263839127892425`", "9.266272471947357`", "0.0023417188085657226`"},
       {
        RowBox[{"Jup", " ", "Mer", " ", "Plu"}], "1", "13.138194492830735`", 
        "13.138194492830735`", "20.201515821394274`", 
        "7.0679835049817444`*^-6"},
       {
        RowBox[{"Mer", " ", "Sat", " ", "Ura"}], "1", "0.0640078522328622`", 
        "0.0640078522328622`", "0.0984195842344417`", "0.7537426939195703`"},
       {
        RowBox[{"Mer", " ", "Nep", " ", "Sat"}], "1", "2.3595833881845465`", 
        "2.3595833881845465`", "3.6281363603134578`", "0.05684628373579369`"},
       {
        RowBox[{"Mer", " ", "Plu", " ", "Sat"}], "1", "14.402097816655441`", 
        "14.402097816655441`", "22.14491550290229`", "2.570779488598826`*^-6"},
       {
        RowBox[{"Mer", " ", "Nep", " ", "Ura"}], "1", "2.145694724029454`", 
        "2.145694724029454`", "3.299257438989542`", "0.06934867883175531`"},
       {
        RowBox[{"Mer", " ", "Plu", " ", "Ura"}], "1", "31.43873722121498`", 
        "31.43873722121498`", "48.34074786498244`", "3.864558313652481`*^-12"},
       {
        RowBox[{"Mer", " ", "Nep", " ", "Plu"}], "1", "0.3218232708477444`", 
        "0.3218232708477444`", "0.494841045416949`", "0.4817962406676273`"},
       {
        RowBox[{"Jup", " ", "Sat", " ", "Ven"}], "1", "2.1349523259023044`", 
        "2.1349523259023044`", "3.282739741231014`", "0.07004950600823022`"},
       {
        RowBox[{"Jup", " ", "Ura", " ", "Ven"}], "1", "0.3474486053828514`", 
        "0.3474486053828514`", "0.5342430044397026`", "0.46484989518372766`"},
       {
        RowBox[{"Jup", " ", "Plu", " ", "Ven"}], "1", "1.843736196962709`", 
        "1.843736196962709`", "2.8349607682961353`", "0.09227213101058307`"},
       {
        RowBox[{"Sat", " ", "Ura", " ", "Ven"}], "1", "0.5851617059324781`", 
        "0.5851617059324781`", "0.899754792556892`", "0.34287616757195316`"},
       {
        RowBox[{"Nep", " ", "Sat", " ", "Ven"}], "1", "0.03319877862213616`", 
        "0.03319877862213616`", "0.051047018062643175`", 
        "0.8212570787312451`"},
       {
        RowBox[{"Plu", " ", "Sat", " ", "Ven"}], "1", "0.35297741865906573`", 
        "0.35297741865906573`", "0.542744203667186`", "0.4613192976223587`"},
       {
        RowBox[{"Plu", " ", "Ura", " ", "Ven"}], "1", "3.560371323720574`", 
        "3.560371323720574`", "5.474488725633321`", "0.019320505748339805`"},
       {
        RowBox[{"Mars", " ", "Sat", " ", "Ura"}], "1", "4.1544432451837565`", 
        "4.1544432451837565`", "6.387944020197074`", "0.011508933391904707`"},
       {
        RowBox[{"Mars", " ", "Nep", " ", "Ura"}], "1", "0.2797815945368711`", 
        "0.2797815945368711`", "0.43019703442932866`", "0.5119111752563799`"},
       {
        RowBox[{"Mars", " ", "Plu", " ", "Ura"}], "1", "1.1317198343795098`", 
        "1.1317198343795098`", "1.7401520545367923`", "0.18715737807806698`"},
       {
        RowBox[{"Mars", " ", "Nep", " ", "Plu"}], "1", "9.282989606714182`", 
        "9.282989606714182`", "14.273685894375134`", "0.0001592080411398301`"},
       {
        RowBox[{"Jup", " ", "Sat", " ", "Ura"}], "1", "72.46706188824646`", 
        "72.46706188824646`", "111.426611781719`", "7.061091205128759`*^-26"},
       {
        RowBox[{"Jup", " ", "Nep", " ", "Sat"}], "1", "0.1551621389689899`", 
        "0.1551621389689899`", "0.23857999719625625`", "0.6252470117003681`"},
       {
        RowBox[{"Jup", " ", "Plu", " ", "Sat"}], "1", "0.09718284994141868`", 
        "0.09718284994141868`", "0.1494300363517269`", "0.6990909297466221`"},
       {
        RowBox[{"Jup", " ", "Plu", " ", "Ura"}], "1", "0.833526699988397`", 
        "0.833526699988397`", "1.281645116957175`", "0.25762736423628596`"},
       {
        RowBox[{"Nep", " ", "Sat", " ", "Ura"}], "1", "3.017887513430651`", 
        "3.017887513430651`", "4.640356205947891`", "0.03125833858908646`"},
       {
        RowBox[{"Plu", " ", "Sat", " ", "Ura"}], "1", "16.77191024034255`", 
        "16.77191024034255`", "25.788780205695023`", 
        "3.8950912466250486`*^-7"},
       {
        RowBox[{"Nep", " ", "Plu", " ", "Ura"}], "1", "0.4502017438508119`", 
        "0.4502017438508119`", "0.6922380130834801`", "0.4054290657346722`"},
       {
        RowBox[{"Jup", " ", "Mer", " ", "Ura", " ", "Ven"}], "1", 
        "8.091912986124953`", "8.091912986124953`", "12.442265815424708`", 
        "0.000422083471286041`"},
       {
        RowBox[{"Jup", " ", "Mer", " ", "Plu", " ", "Ven"}], "1", 
        "0.24731995818547148`", "0.24731995818547148`", 
        "0.38028345911279704`", "0.5374691493367145`"},
       {
        RowBox[{"Mer", " ", "Sat", " ", "Ura", " ", "Ven"}], "1", 
        "0.020441014453354`", "0.020441014453354`", "0.031430458508595924`", 
        "0.8592879485264983`"},
       {
        RowBox[{"Mars", " ", "Mer", " ", "Plu", " ", "Ura"}], "1", 
        "0.45582446843764046`", "0.45582446843764046`", "0.7008836119716791`",
         "0.40251199583898123`"},
       {
        RowBox[{"Jup", " ", "Mer", " ", "Sat", " ", "Ura"}], "1", 
        "2.9074316336773336`", "2.9074316336773336`", "4.470517328648558`", 
        "0.03451545105101971`"},
       {
        RowBox[{"Jup", " ", "Mer", " ", "Nep", " ", "Sat"}], "1", 
        "10.710014861264426`", "10.710014861264426`", "16.467904686999713`", 
        "0.000049952256794516456`"},
       {
        RowBox[{"Jup", " ", "Mer", " ", "Plu", " ", "Sat"}], "1", 
        "0.03405217412455386`", "0.03405217412455386`", 
        "0.052359213794971944`", "0.8190136244291311`"},
       {
        RowBox[{"Jup", " ", "Mer", " ", "Plu", " ", "Ura"}], "1", 
        "0.2189140307946218`", "0.2189140307946218`", "0.3366060122672079`", 
        "0.5618112447521245`"},
       {
        RowBox[{"Mer", " ", "Plu", " ", "Sat", " ", "Ura"}], "1", 
        "5.08792279064437`", "5.08792279064437`", "7.823278366698096`", 
        "0.005170093955304055`"},
       {
        RowBox[{"Jup", " ", "Plu", " ", "Ura", " ", "Ven"}], "1", 
        "0.31292369491893623`", "0.31292369491893623`", 
        "0.48115690304657815`", "0.48791892589726094`"},
       {
        RowBox[{"Plu", " ", "Sat", " ", "Ura", " ", "Ven"}], "1", 
        "0.7928051676890391`", "0.7928051676890391`", "1.2190309823083239`", 
        "0.2695841676086752`"},
       {
        RowBox[{"Jup", " ", "Plu", " ", "Sat", " ", "Ura"}], "1", 
        "1.6235445619195161`", "1.6235445619195161`", "2.496390289567796`", 
        "0.11414716884088572`"},
       {"\<\"Error\"\>", "7987", "5194.4002787705995`", 
        "0.6503568647515462`", "\<\"\"\>", "\<\"\"\>"},
       {"\<\"Total\"\>", "8072", 
        "6622.350574811896`", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[2.0999999999999996`]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     TableForm[{{
       1, 0.10725949670359114`, 0.10725949670359114`, 0.16492406325958772`, 
        0.6846738059052846}, {
       1, 1.8240870591607745`, 1.8240870591607745`, 2.8047479130671205`, 
        0.09402476546079686}, {
       1, 13.147169803554789`, 13.147169803554789`, 20.215316414899938`, 
        7.017305372011215*^-6}, {
       1, 0.253395224290216, 0.253395224290216, 0.389624893691281, 
        0.5325144673983991}, {
       1, 28.911061086692825`, 28.911061086692825`, 44.4541491812155, 
        2.7769836912116158`*^-11}, {
       1, 132.99136761344016`, 132.99136761344016`, 204.48983446072558`, 
        8.025985074852367*^-46}, {
       1, 2.1150723674782057`, 2.1150723674782057`, 3.2521719722082434`, 
        0.07136655097177505}, {
       1, 64.90614823199758, 64.90614823199758, 99.80081974962081, 
        2.3100223134114305`*^-23}, {
       1, 32.81119236877839, 32.81119236877839, 50.45105871422323, 
        1.3267507759877928`*^-12}, {
       1, 0.07091125302395085, 0.07091125302395085, 0.10903437307614314`, 
        0.74125483804696}, {
       1, 1.328546675990765, 1.328546675990765, 2.042796421466706, 
        0.15296739399516324`}, {
       1, 2.931711832446126, 2.931711832446126, 4.5078509835767155`, 
        0.033770271036131776`}, {
       1, 0.4025707829896419, 0.4025707829896419, 0.6189998211880715, 
        0.4314425449506605}, {
       1, 6.76633658819992, 6.76633658819992, 10.404036545051067`, 
        0.0012624650768395043`}, {
       1, 1.998624448321607, 1.998624448321607, 3.073119631150715, 
        0.07963495235968901}, {
       1, 1.2279475989726052`, 1.2279475989726052`, 1.8881135350846405`, 
        0.16945340753621196`}, {
       1, 21.0510473678587, 21.0510473678587, 32.368455703009715`, 
        1.3204386692442287`*^-8}, {
       1, 68.70358071466762, 68.70358071466762, 105.63981782665466`, 
        1.2584411442742702`*^-24}, {
       1, 0.05754314936075389, 0.05754314936075389, 0.08847934492509266, 
        0.7661270642887444}, {
       1, 4.168498974472641, 4.168498974472641, 6.409556353441614, 
        0.011369789253135792`}, {
       1, 1.9510044992975963`, 1.9510044992975963`, 2.999898371247196, 
        0.08330834803856449}, {
       1, 49.66205116493438, 49.66205116493438, 76.3612315892239, 
        2.845632771581331*^-18}, {
       1, 6.853910851932596, 6.853910851932596, 10.538692252523505`, 
        0.0011738319231161976`}, {
       1, 2.9027193887241083`, 2.9027193887241083`, 4.463271699043302, 
        0.03466205512555323}, {
       1, 0.21237878178544634`, 0.21237878178544634`, 0.32655729999341326`, 
        0.5677094210742826}, {
       1, 56.42543527665566, 56.42543527665566, 86.7607283552111, 
        1.5558994190868216`*^-20}, {
       1, 280.11728664152815`, 280.11728664152815`, 430.71320043425777`, 
        3.1749842234123685`*^-93}, {
       1, 117.37698800337057`, 117.37698800337057`, 180.48089343719275`, 
        1.050745793812349*^-40}, {
       1, 18.621023002951915`, 18.621023002951915`, 28.63200807462169, 
        8.99514700030872*^-8}, {
       1, 0.2919874305043777, 0.2919874305043777, 0.4489649396042352, 
        0.5028462695915414}, {
       1, 109.86490323038379`, 109.86490323038379`, 168.93018154325955`, 
        3.089644859360398*^-38}, {
       1, 55.84521133097951, 55.84521133097951, 85.86856594850258, 
        2.4311522526189972`*^-20}, {
       1, 13.697539675407825`, 13.697539675407825`, 21.061574679680906`, 
        4.515495044304171*^-6}, {
       1, 43.269600109548264`, 43.269600109548264`, 66.5320879269544, 
        3.967315036121659*^-16}, {
       1, 5.587355224284693, 5.587355224284693, 8.591214342635121, 
        0.003387462155326577}, {
       1, 17.60556816371718, 17.60556816371718, 27.070627094007815`, 
        2.010319155989178*^-7}, {
       1, 10.550260579013411`, 10.550260579013411`, 16.2222637306118, 
        0.0000568499670785093}, {
       1, 6.967022325219659, 6.967022325219659, 10.712614416519228`, 
        0.0010685986879559466`}, {
       1, 0.18649156579067494`, 0.18649156579067494`, 0.2867526674942068, 
        0.5923239616753618}, {
       1, 0.17600569099977292`, 0.17600569099977292`, 0.27062940446859407`, 
        0.602924293451014}, {
       1, 2.4145893918775982`, 2.4145893918775982`, 3.712714546036254, 
        0.05403493728920943}, {
       1, 6.073304397797983, 6.073304397797983, 9.33841822384415, 
        0.0022513987098045627`}, {
       1, 2.1357403635411174`, 2.1357403635411174`, 3.2839514415781985`, 
        0.06999783805712499}, {
       1, 0.015298940058528387`, 0.015298940058528387`, 0.02352391569568962, 
        0.8781063689362255}, {
       1, 0.8778792888952012, 0.8778792888952012, 1.3498424272504215`, 
        0.24534038319885276`}, {
       1, 11.189801398285454`, 11.189801398285454`, 17.20563279140639, 
        0.000033891575501551116`}, {
       1, 3.4055229536252227`, 3.4055229536252227`, 5.236391184901576, 
        0.022145110659793625`}, {
       1, 6.0263839127892425`, 6.0263839127892425`, 9.266272471947357, 
        0.0023417188085657226`}, {
       1, 13.138194492830735`, 13.138194492830735`, 20.201515821394274`, 
        7.0679835049817444`*^-6}, {
       1, 0.0640078522328622, 0.0640078522328622, 0.0984195842344417, 
        0.7537426939195703}, {
       1, 2.3595833881845465`, 2.3595833881845465`, 3.6281363603134578`, 
        0.05684628373579369}, {
       1, 14.402097816655441`, 14.402097816655441`, 22.14491550290229, 
        2.570779488598826*^-6}, {
       1, 2.145694724029454, 2.145694724029454, 3.299257438989542, 
        0.06934867883175531}, {
       1, 31.43873722121498, 31.43873722121498, 48.34074786498244, 
        3.864558313652481*^-12}, {
       1, 0.3218232708477444, 0.3218232708477444, 0.494841045416949, 
        0.4817962406676273}, {
       1, 2.1349523259023044`, 2.1349523259023044`, 3.282739741231014, 
        0.07004950600823022}, {
       1, 0.3474486053828514, 0.3474486053828514, 0.5342430044397026, 
        0.46484989518372766`}, {
       1, 1.843736196962709, 1.843736196962709, 2.8349607682961353`, 
        0.09227213101058307}, {
       1, 0.5851617059324781, 0.5851617059324781, 0.899754792556892, 
        0.34287616757195316`}, {
       1, 0.03319877862213616, 0.03319877862213616, 0.051047018062643175`, 
        0.8212570787312451}, {
       1, 0.35297741865906573`, 0.35297741865906573`, 0.542744203667186, 
        0.4613192976223587}, {
       1, 3.560371323720574, 3.560371323720574, 5.474488725633321, 
        0.019320505748339805`}, {
       1, 4.1544432451837565`, 4.1544432451837565`, 6.387944020197074, 
        0.011508933391904707`}, {
       1, 0.2797815945368711, 0.2797815945368711, 0.43019703442932866`, 
        0.5119111752563799}, {
       1, 1.1317198343795098`, 1.1317198343795098`, 1.7401520545367923`, 
        0.18715737807806698`}, {
       1, 9.282989606714182, 9.282989606714182, 14.273685894375134`, 
        0.0001592080411398301}, {
       1, 72.46706188824646, 72.46706188824646, 111.426611781719, 
        7.061091205128759*^-26}, {
       1, 0.1551621389689899, 0.1551621389689899, 0.23857999719625625`, 
        0.6252470117003681}, {
       1, 0.09718284994141868, 0.09718284994141868, 0.1494300363517269, 
        0.6990909297466221}, {
       1, 0.833526699988397, 0.833526699988397, 1.281645116957175, 
        0.25762736423628596`}, {
       1, 3.017887513430651, 3.017887513430651, 4.640356205947891, 
        0.03125833858908646}, {
       1, 16.77191024034255, 16.77191024034255, 25.788780205695023`, 
        3.8950912466250486`*^-7}, {
       1, 0.4502017438508119, 0.4502017438508119, 0.6922380130834801, 
        0.4054290657346722}, {
       1, 8.091912986124953, 8.091912986124953, 12.442265815424708`, 
        0.000422083471286041}, {
       1, 0.24731995818547148`, 0.24731995818547148`, 0.38028345911279704`, 
        0.5374691493367145}, {
       1, 0.020441014453354, 0.020441014453354, 0.031430458508595924`, 
        0.8592879485264983}, {
       1, 0.45582446843764046`, 0.45582446843764046`, 0.7008836119716791, 
        0.40251199583898123`}, {
       1, 2.9074316336773336`, 2.9074316336773336`, 4.470517328648558, 
        0.03451545105101971}, {
       1, 10.710014861264426`, 10.710014861264426`, 16.467904686999713`, 
        0.000049952256794516456`}, {
       1, 0.03405217412455386, 0.03405217412455386, 0.052359213794971944`, 
        0.8190136244291311}, {
       1, 0.2189140307946218, 0.2189140307946218, 0.3366060122672079, 
        0.5618112447521245}, {
       1, 5.08792279064437, 5.08792279064437, 7.823278366698096, 
        0.005170093955304055}, {
       1, 0.31292369491893623`, 0.31292369491893623`, 0.48115690304657815`, 
        0.48791892589726094`}, {
       1, 0.7928051676890391, 0.7928051676890391, 1.2190309823083239`, 
        0.2695841676086752}, {
       1, 1.6235445619195161`, 1.6235445619195161`, 2.496390289567796, 
        0.11414716884088572`}, {
       7987, 5194.4002787705995`, 0.6503568647515462}, {
       8072, 6622.350574811896}}, 
      TableHeadings -> {{$CellContext`Mer, $CellContext`Ven, \
$CellContext`Mars, $CellContext`Jup, $CellContext`Sat, $CellContext`Ura, \
$CellContext`Nep, $CellContext`Plu, $CellContext`Mer $CellContext`Ven, \
$CellContext`Mars $CellContext`Mer, $CellContext`Jup $CellContext`Mer, \
$CellContext`Mer $CellContext`Sat, $CellContext`Mer $CellContext`Ura, \
$CellContext`Mer $CellContext`Nep, $CellContext`Mer $CellContext`Plu, \
$CellContext`Mars $CellContext`Ven, $CellContext`Jup $CellContext`Ven, \
$CellContext`Sat $CellContext`Ven, $CellContext`Ura $CellContext`Ven, \
$CellContext`Nep $CellContext`Ven, $CellContext`Plu $CellContext`Ven, \
$CellContext`Jup $CellContext`Mars, $CellContext`Mars $CellContext`Sat, \
$CellContext`Mars $CellContext`Ura, $CellContext`Mars $CellContext`Nep, \
$CellContext`Mars $CellContext`Plu, $CellContext`Jup $CellContext`Sat, \
$CellContext`Jup $CellContext`Ura, $CellContext`Jup $CellContext`Nep, \
$CellContext`Jup $CellContext`Plu, $CellContext`Sat $CellContext`Ura, \
$CellContext`Nep $CellContext`Sat, $CellContext`Plu $CellContext`Sat, \
$CellContext`Nep $CellContext`Ura, $CellContext`Plu $CellContext`Ura, \
$CellContext`Nep $CellContext`Plu, ($CellContext`Jup $CellContext`Mer) \
$CellContext`Ven, ($CellContext`Mer $CellContext`Sat) $CellContext`Ven, \
($CellContext`Mer $CellContext`Ura) $CellContext`Ven, ($CellContext`Mer \
$CellContext`Plu) $CellContext`Ven, ($CellContext`Jup $CellContext`Mars) \
$CellContext`Mer, ($CellContext`Mars $CellContext`Mer) $CellContext`Sat, \
($CellContext`Mars $CellContext`Mer) $CellContext`Ura, ($CellContext`Mars \
$CellContext`Mer) $CellContext`Nep, ($CellContext`Mars $CellContext`Mer) \
$CellContext`Plu, ($CellContext`Jup $CellContext`Mer) $CellContext`Sat, \
($CellContext`Jup $CellContext`Mer) $CellContext`Ura, ($CellContext`Jup \
$CellContext`Mer) $CellContext`Nep, ($CellContext`Jup $CellContext`Mer) \
$CellContext`Plu, ($CellContext`Mer $CellContext`Sat) $CellContext`Ura, \
($CellContext`Mer $CellContext`Nep) $CellContext`Sat, ($CellContext`Mer \
$CellContext`Plu) $CellContext`Sat, ($CellContext`Mer $CellContext`Nep) \
$CellContext`Ura, ($CellContext`Mer $CellContext`Plu) $CellContext`Ura, \
($CellContext`Mer $CellContext`Nep) $CellContext`Plu, ($CellContext`Jup \
$CellContext`Sat) $CellContext`Ven, ($CellContext`Jup $CellContext`Ura) \
$CellContext`Ven, ($CellContext`Jup $CellContext`Plu) $CellContext`Ven, \
($CellContext`Sat $CellContext`Ura) $CellContext`Ven, ($CellContext`Nep \
$CellContext`Sat) $CellContext`Ven, ($CellContext`Plu $CellContext`Sat) \
$CellContext`Ven, ($CellContext`Plu $CellContext`Ura) $CellContext`Ven, \
($CellContext`Mars $CellContext`Sat) $CellContext`Ura, ($CellContext`Mars \
$CellContext`Nep) $CellContext`Ura, ($CellContext`Mars $CellContext`Plu) \
$CellContext`Ura, ($CellContext`Mars $CellContext`Nep) $CellContext`Plu, \
($CellContext`Jup $CellContext`Sat) $CellContext`Ura, ($CellContext`Jup \
$CellContext`Nep) $CellContext`Sat, ($CellContext`Jup $CellContext`Plu) \
$CellContext`Sat, ($CellContext`Jup $CellContext`Plu) $CellContext`Ura, \
($CellContext`Nep $CellContext`Sat) $CellContext`Ura, ($CellContext`Plu \
$CellContext`Sat) $CellContext`Ura, ($CellContext`Nep $CellContext`Plu) \
$CellContext`Ura, (($CellContext`Jup $CellContext`Mer) $CellContext`Ura) \
$CellContext`Ven, (($CellContext`Jup $CellContext`Mer) $CellContext`Plu) \
$CellContext`Ven, (($CellContext`Mer $CellContext`Sat) $CellContext`Ura) \
$CellContext`Ven, (($CellContext`Mars $CellContext`Mer) $CellContext`Plu) \
$CellContext`Ura, (($CellContext`Jup $CellContext`Mer) $CellContext`Sat) \
$CellContext`Ura, (($CellContext`Jup $CellContext`Mer) $CellContext`Nep) \
$CellContext`Sat, (($CellContext`Jup $CellContext`Mer) $CellContext`Plu) \
$CellContext`Sat, (($CellContext`Jup $CellContext`Mer) $CellContext`Plu) \
$CellContext`Ura, (($CellContext`Mer $CellContext`Plu) $CellContext`Sat) \
$CellContext`Ura, (($CellContext`Jup $CellContext`Plu) $CellContext`Ura) \
$CellContext`Ven, (($CellContext`Plu $CellContext`Sat) $CellContext`Ura) \
$CellContext`Ven, (($CellContext`Jup $CellContext`Plu) $CellContext`Sat) \
$CellContext`Ura, "Error", "Total"}, {
        "DF", "SumOfSq", "MeanSq", "FRatio", "PValue"}}]]}], ",", 
   RowBox[{"PostTests", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Mer", "\[Rule]", 
       TagBox[GridBox[{
          {"Bonferroni", 
           RowBox[{"{", "\<\"\"\>", "}"}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[1.2]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Function[BoxForm`e$, 
         TableForm[BoxForm`e$, TableSpacing -> {3, 1}, TableDepth -> 2]]]}], 
      ",", 
      RowBox[{"Ven", "\[Rule]", 
       TagBox[GridBox[{
          {"Bonferroni", 
           RowBox[{"{", "\<\"\"\>", "}"}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[1.2]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Function[BoxForm`e$, 
         TableForm[BoxForm`e$, TableSpacing -> {3, 1}, TableDepth -> 2]]]}], 
      ",", 
      RowBox[{"Mars", "\[Rule]", 
       TagBox[GridBox[{
          {"Bonferroni", 
           RowBox[{"{", 
            RowBox[{"\<\"prograde\"\>", ",", "\<\"retrograde\"\>"}], "}"}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[1.2]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Function[BoxForm`e$, 
         TableForm[BoxForm`e$, TableSpacing -> {3, 1}, TableDepth -> 2]]]}], 
      ",", 
      RowBox[{"Jup", "\[Rule]", 
       TagBox[GridBox[{
          {"Bonferroni", 
           RowBox[{"{", "\<\"\"\>", "}"}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[1.2]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Function[BoxForm`e$, 
         TableForm[BoxForm`e$, TableSpacing -> {3, 1}, TableDepth -> 2]]]}], 
      ",", 
      RowBox[{"Sat", "\[Rule]", 
       TagBox[GridBox[{
          {"Bonferroni", 
           RowBox[{"{", 
            RowBox[{"\<\"prograde\"\>", ",", "\<\"retrograde\"\>"}], "}"}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[1.2]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Function[BoxForm`e$, 
         TableForm[BoxForm`e$, TableSpacing -> {3, 1}, TableDepth -> 2]]]}], 
      ",", 
      RowBox[{"Ura", "\[Rule]", 
       TagBox[GridBox[{
          {"Bonferroni", 
           RowBox[{"{", 
            RowBox[{"\<\"prograde\"\>", ",", "\<\"retrograde\"\>"}], "}"}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[1.2]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Function[BoxForm`e$, 
         TableForm[BoxForm`e$, TableSpacing -> {3, 1}, TableDepth -> 2]]]}], 
      ",", 
      RowBox[{"Nep", "\[Rule]", 
       TagBox[GridBox[{
          {"Bonferroni", 
           RowBox[{"{", 
            RowBox[{"\<\"prograde\"\>", ",", "\<\"retrograde\"\>"}], "}"}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[1.2]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Function[BoxForm`e$, 
         TableForm[BoxForm`e$, TableSpacing -> {3, 1}, TableDepth -> 2]]]}], 
      ",", 
      RowBox[{"Plu", "\[Rule]", 
       TagBox[GridBox[{
          {"Bonferroni", 
           RowBox[{"{", 
            RowBox[{"\<\"prograde\"\>", ",", "\<\"retrograde\"\>"}], "}"}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[1.2]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Function[BoxForm`e$, 
         TableForm[BoxForm`e$, TableSpacing -> {3, 1}, TableDepth -> 2]]]}]}],
      "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7098097628852654`*^9, 3.7099153032040205`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gb", "=", 
   RowBox[{"GatherBy", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Delete", "[", 
       RowBox[{"fulldata", ",", "alldeletes"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "9"}], "}"}]}], "]"}], "]"}], ",", "First"}], 
    "]"}]}], ";", 
  RowBox[{"\"\<Mars average \>\"", "<>", 
   RowBox[{"gb", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}], "<>", 
   "\"\</ average \>\"", "<>", 
   RowBox[{"gb", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1", ",", "1"}], "]"}], "]"}], "<>", "\"\<=\>\"", "<>", 
   RowBox[{"ToString", "[", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"Mean", "[", 
       RowBox[{"E", "^", 
        RowBox[{"gb", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "All", ",", "2"}], "]"}], "]"}]}], "]"}], "/", 
      RowBox[{"Mean", "[", 
       RowBox[{"E", "^", 
        RowBox[{"gb", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "All", ",", "2"}], "]"}], "]"}]}], "]"}]}], "]"}],
     "]"}], 
   RowBox[{"(*", 
    RowBox[{"Mars", " ", "RATIO"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.709916437605465*^9, 3.709916530083252*^9}, {
  3.7099174367544355`*^9, 3.7099174621795993`*^9}, {3.7099174982329245`*^9, 
  3.709917659742733*^9}, {3.709917730452097*^9, 3.7099177636858478`*^9}, {
  3.7099178809436674`*^9, 3.709917905172591*^9}, {3.7099256512522335`*^9, 
  3.709925657626529*^9}, {3.709925807555453*^9, 3.709925819903961*^9}}],

Cell[BoxData["\<\"Mars average prograde/ average retrograde=0.949203\"\>"], \
"Output",
 CellChangeTimes->{
  3.709916531303499*^9, {3.7099174634678717`*^9, 3.7099174766795454`*^9}, 
   3.709917619196498*^9, 3.7099176606359158`*^9, {3.7099177320524216`*^9, 
   3.7099177643209763`*^9}, {3.70991789025556*^9, 3.709917906577876*^9}, 
   3.7099256586737437`*^9, 3.709925823773749*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gb", "=", 
   RowBox[{"GatherBy", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Delete", "[", 
       RowBox[{"fulldata", ",", "alldeletes"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "9"}], "}"}]}], "]"}], "]"}], ",", "First"}], 
    "]"}]}], ";", 
  RowBox[{"\"\<Jupiter average \>\"", "<>", 
   RowBox[{"gb", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}], "<>", 
   "\"\</ average \>\"", "<>", 
   RowBox[{"gb", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1", ",", "1"}], "]"}], "]"}], "<>", "\"\<=\>\"", "<>", 
   RowBox[{"ToString", "[", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"Mean", "[", 
       RowBox[{"E", "^", 
        RowBox[{"gb", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "All", ",", "2"}], "]"}], "]"}]}], "]"}], "/", 
      RowBox[{"Mean", "[", 
       RowBox[{"E", "^", 
        RowBox[{"gb", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "All", ",", "2"}], "]"}], "]"}]}], "]"}]}], "]"}],
     "]"}], 
   RowBox[{"(*", 
    RowBox[{"Jupiter", " ", "RATIO"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.7099177001329374`*^9, 3.709917721956422*^9}, {
  3.709917769319992*^9, 3.7099177718044987`*^9}, {3.709917919481497*^9, 
  3.7099179274781203`*^9}, {3.709925669115863*^9, 3.709925675126084*^9}, {
  3.7099257955290103`*^9, 3.7099258002039585`*^9}}],

Cell[BoxData["\<\"Jupiter average retrograde/ average \
prograde=0.931839\"\>"], "Output",
 CellChangeTimes->{{3.7099177078275003`*^9, 3.709917722789543*^9}, {
   3.7099177559512787`*^9, 3.709917772502639*^9}, 3.7099179278521996`*^9, 
   3.709925675929248*^9, 3.709925829072894*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gb", "=", 
   RowBox[{"GatherBy", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Delete", "[", 
       RowBox[{"fulldata", ",", "alldeletes"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "9"}], "}"}]}], "]"}], "]"}], ",", "First"}], 
    "]"}]}], ";", 
  RowBox[{"\"\<Saturn average \>\"", "<>", 
   RowBox[{"gb", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}], "<>", 
   "\"\</ average \>\"", "<>", 
   RowBox[{"gb", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1", ",", "1"}], "]"}], "]"}], "<>", "\"\<=\>\"", "<>", 
   RowBox[{"ToString", "[", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"Mean", "[", 
       RowBox[{"E", "^", 
        RowBox[{"gb", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "All", ",", "2"}], "]"}], "]"}]}], "]"}], "/", 
      RowBox[{"Mean", "[", 
       RowBox[{"E", "^", 
        RowBox[{"gb", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "All", ",", "2"}], "]"}], "]"}]}], "]"}]}], "]"}],
     "]"}], 
   RowBox[{"(*", 
    RowBox[{"Saturn", " ", "RATIO"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.7099177841850123`*^9, 3.709917811887639*^9}, {
  3.709917936959047*^9, 3.7099179454967813`*^9}, {3.7099256856492214`*^9, 
  3.7099256915094123`*^9}, {3.7099257750938587`*^9, 3.709925783414549*^9}}],

Cell[BoxData["\<\"Saturn average prograde/ average retrograde=1.10372\"\>"], \
"Output",
 CellChangeTimes->{{3.709917794418092*^9, 3.709917812747816*^9}, 
   3.7099179459108696`*^9, 3.709925692328579*^9, 3.709925788258534*^9, 
   3.709925836079249*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gb", "=", 
   RowBox[{"GatherBy", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Delete", "[", 
       RowBox[{"fulldata", ",", "alldeletes"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"6", ",", "9"}], "}"}]}], "]"}], "]"}], ",", "First"}], 
    "]"}]}], ";", 
  RowBox[{"\"\<Uranus average \>\"", "<>", 
   RowBox[{"gb", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}], "<>", 
   "\"\</ average \>\"", "<>", 
   RowBox[{"gb", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1", ",", "1"}], "]"}], "]"}], "<>", "\"\<=\>\"", "<>", 
   RowBox[{"ToString", "[", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"Mean", "[", 
       RowBox[{"E", "^", 
        RowBox[{"gb", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "All", ",", "2"}], "]"}], "]"}]}], "]"}], "/", 
      RowBox[{"Mean", "[", 
       RowBox[{"E", "^", 
        RowBox[{"gb", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "All", ",", "2"}], "]"}], "]"}]}], "]"}]}], "]"}],
     "]"}], 
   RowBox[{"(*", 
    RowBox[{"Uranus", " ", "RATIO"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.70991782531644*^9, 3.7099178611636496`*^9}, {
  3.709917969408639*^9, 3.7099179777473326`*^9}, {3.709925701141369*^9, 
  3.709925707289567*^9}, {3.709925842505553*^9, 3.709925846025267*^9}}],

Cell[BoxData["\<\"Uranus average prograde/ average retrograde=1.32105\"\>"], \
"Output",
 CellChangeTimes->{{3.709917836962734*^9, 3.709917861995821*^9}, 
   3.709917978161419*^9, 3.7099257084328*^9, 3.709925847270521*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gb", "=", 
   RowBox[{"GatherBy", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Delete", "[", 
       RowBox[{"fulldata", ",", "alldeletes"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"7", ",", "9"}], "}"}]}], "]"}], "]"}], ",", "First"}], 
    "]"}]}], ";", 
  RowBox[{"\"\<Neptune average \>\"", "<>", 
   RowBox[{"gb", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}], "<>", 
   "\"\</ average \>\"", "<>", 
   RowBox[{"gb", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1", ",", "1"}], "]"}], "]"}], "<>", "\"\<=\>\"", "<>", 
   RowBox[{"ToString", "[", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"Mean", "[", 
       RowBox[{"E", "^", 
        RowBox[{"gb", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "All", ",", "2"}], "]"}], "]"}]}], "]"}], "/", 
      RowBox[{"Mean", "[", 
       RowBox[{"E", "^", 
        RowBox[{"gb", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "All", ",", "2"}], "]"}], "]"}]}], "]"}]}], "]"}],
     "]"}], 
   RowBox[{"(*", 
    RowBox[{"Neptune", " ", "RATIO"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.709917997432331*^9, 3.7099180317192965`*^9}, {
  3.709918178636142*^9, 3.7099181802344666`*^9}, {3.709925756484078*^9, 
  3.7099257574622765`*^9}, {3.709925855779249*^9, 3.709925869545045*^9}}],

Cell[BoxData["\<\"Neptune average prograde/ average retrograde=1.28824\"\>"], \
"Output",
 CellChangeTimes->{{3.7099180110580997`*^9, 3.7099180323264217`*^9}, 
   3.7099181810466337`*^9, 3.7099258703322067`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gb", "=", 
   RowBox[{"GatherBy", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Delete", "[", 
       RowBox[{"fulldata", ",", "alldeletes"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"8", ",", "9"}], "}"}]}], "]"}], "]"}], ",", "First"}], 
    "]"}]}], ";", 
  RowBox[{"\"\<Pluto average \>\"", "<>", 
   RowBox[{"gb", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}], "<>", 
   "\"\</ average \>\"", "<>", 
   RowBox[{"gb", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1", ",", "1"}], "]"}], "]"}], "<>", "\"\<=\>\"", "<>", 
   RowBox[{"ToString", "[", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"Mean", "[", 
       RowBox[{"E", "^", 
        RowBox[{"gb", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "All", ",", "2"}], "]"}], "]"}]}], "]"}], "/", 
      RowBox[{"Mean", "[", 
       RowBox[{"E", "^", 
        RowBox[{"gb", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "All", ",", "2"}], "]"}], "]"}]}], "]"}]}], "]"}],
     "]"}], 
   RowBox[{"(*", 
    RowBox[{"Neptune", " ", "RATIO"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.709918054294883*^9, 3.7099180635047536`*^9}, {
  3.7099181878930216`*^9, 3.7099181897403975`*^9}, {3.709925879155998*^9, 
  3.7099258842360296`*^9}}],

Cell[BoxData["\<\"Pluto average prograde/ average retrograde=1.37358\"\>"], \
"Output",
 CellChangeTimes->{
  3.7099180694509664`*^9, 3.709918191412739*^9, {3.7099258849721785`*^9, 
   3.709925898333895*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Predictor function to test model on 3 years of future data", \
"Subchapter",
 CellChangeTimes->{{3.709928359259167*^9, 3.7099283757975254`*^9}, {
   3.7099371298238373`*^9, 3.709937143137542*^9}, 3.709938629303444*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"months", "=", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Jan\>\"", ",", "\"\<Feb\>\"", ",", "\"\<Mar\>\"", ",", 
      "\"\<Apr\>\"", ",", "\"\<May\>\"", ",", "\"\<Jun\>\"", ",", 
      "\"\<Jul\>\"", ",", "\"\<Aug\>\"", ",", "\"\<Sep\>\"", ",", 
      "\"\<Oct\>\"", ",", "\"\<Nov\>\"", ",", "\"\<Dec\>\""}], "}"}]}], ";", 
   RowBox[{"years", "=", 
    RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"year", "=", "1987"}], ",", 
      RowBox[{"year", "\[LessEqual]", "1987"}], ",", 
      RowBox[{"year", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"rawyear", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"monthnum", "=", "10"}], ",", 
         RowBox[{"monthnum", "\[LessEqual]", "12"}], ",", 
         RowBox[{"monthnum", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"month", "=", 
           RowBox[{"months", "[", 
            RowBox[{"[", "monthnum", "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"rawmonth", "=", 
           RowBox[{"Import", "[", 
            RowBox[{
             RowBox[{"ToString", "[", "year", "]"}], "<>", "month", "<>", 
             "\"\<.csv\>\""}], "]"}]}], ";", 
          RowBox[{"(*", "CHECK", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"rawmonth2", "=", 
           RowBox[{
            RowBox[{"Drop", "[", 
             RowBox[{"rawmonth", ",", "1"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"rawmonth3", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"rawmonth2", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}], "]"}], 
               ",", 
               RowBox[{"rawmonth2", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "4"}], "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "rawmonth2", "]"}]}], "}"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"monthgathers", "=", 
           RowBox[{"GatherBy", "[", 
            RowBox[{"rawmonth3", ",", "First"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"monthavgs", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"monthgathers", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"N", "[", 
                RowBox[{"Mean", "[", 
                 RowBox[{"monthgathers", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "All", ",", "2"}], "]"}], "]"}], "]"}], 
                "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "monthgathers", "]"}]}], "}"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"years", ",", "monthavgs"}], "]"}]}]}], "]"}]}]}], 
     RowBox[{"(*", "CHECK", "*)"}], "\[IndentingNewLine]", "]"}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"year", "=", "2011"}], ",", 
    RowBox[{"year", "\[LessEqual]", "2013"}], ",", 
    RowBox[{"year", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rawyear", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"monthnum", "=", "1"}], ",", 
       RowBox[{"monthnum", "<=", "12"}], ",", 
       RowBox[{"monthnum", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"month", "=", 
         RowBox[{"months", "[", 
          RowBox[{"[", "monthnum", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rawmonth", "=", 
         RowBox[{"Import", "[", 
          RowBox[{
           RowBox[{"ToString", "[", "year", "]"}], "<>", "month", "<>", 
           "\"\<.csv\>\""}], "]"}]}], ";", 
        RowBox[{"(*", "CHECK", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"rawmonth2", "=", 
         RowBox[{
          RowBox[{"Drop", "[", 
           RowBox[{"rawmonth", ",", "1"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rawmonth3", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"rawmonth2", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}], "]"}], 
             ",", 
             RowBox[{"rawmonth2", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "4"}], "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "rawmonth2", "]"}]}], "}"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"monthgathers", "=", 
         RowBox[{"GatherBy", "[", 
          RowBox[{"rawmonth3", ",", "First"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"monthavgs", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"monthgathers", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"monthgathers", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "All", ",", "2"}], "]"}], "]"}], "]"}], 
              "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "monthgathers", "]"}]}], "}"}]}], "]"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"years", ",", "monthavgs"}], "]"}]}]}], "]"}]}]}], 
   RowBox[{"(*", "CHECK", "*)"}], "\[IndentingNewLine]", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7099284912849874`*^9, 3.7099285032694206`*^9}, 
   3.709929731017828*^9}],

Cell[CellGroupData[{

Cell[BoxData["years"], "Input",
 CellChangeTimes->{{3.709929755560815*^9, 3.709929757084124*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"2011", ",", "1", ",", "4"}], "}"}], ",", 
               "0.006487994178995877`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"2011", ",", "1", ",", "5"}], "}"}], ",", 
               "0.00862279843444227`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"2011", ",", "1", ",", "6"}], "}"}], ",", 
               "0.010141382807373383`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"2011", ",", "1", ",", "7"}], "}"}], ",", 
               "0.023928571428571428`"}], "}"}], ",", 
             TemplateBox[{"24"},
              "OutputSizeLimit`Skeleton",
              DisplayFunction->(FrameBox[
                
                RowBox[{
                 "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                Background -> GrayLevel[0.75], 
                BaseStyle -> {
                 "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                  ShowStringCharacters -> False}, BaselinePosition -> 
                Baseline, ContentPadding -> False, 
                FrameMargins -> {{1, 1}, {1, 2}}, FrameStyle -> None, 
                RoundingRadius -> 7]& )], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"2011", ",", "1", ",", "3"}], "}"}], ",", 
               "0.00839997698636442`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"2011", ",", "1", ",", "2"}], "}"}], ",", 
               "0.010943751470934338`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"2011", ",", "1", ",", "1"}], "}"}], ",", 
               "0.013034188034188035`"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton",
             DisplayFunction->(FrameBox[
               
               RowBox[{
                "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
               Background -> GrayLevel[0.75], 
               BaseStyle -> {
                "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                 ShowStringCharacters -> False}, BaselinePosition -> Baseline,
                ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
               FrameStyle -> None, RoundingRadius -> 7]& )], "}"}], ",", 
           TemplateBox[{"33"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
              FrameStyle -> None, RoundingRadius -> 7]& )], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton",
             DisplayFunction->(FrameBox[
               
               RowBox[{
                "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
               Background -> GrayLevel[0.75], 
               BaseStyle -> {
                "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                 ShowStringCharacters -> False}, BaselinePosition -> Baseline,
                ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
               FrameStyle -> None, RoundingRadius -> 7]& )], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{109., {5., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{90., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{90., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 123, 15167562623507322558, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{104., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{104., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 123, 15167562623507322558, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{78., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{78., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 123, 15167562623507322558, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{135., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{135., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[123]]], "Output",
 CellChangeTimes->{3.7099299468456726`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"years0", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"years", ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7097728447983313`*^9, 3.7097728505835166`*^9}, {
   3.7097750161858664`*^9, 3.7097750176061573`*^9}, {3.7097750494136744`*^9, 
   3.7097750928245687`*^9}, 3.7098496717635264`*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2011", ",", "1", ",", "4"}], "}"}], ",", 
             "0.006487994178995877`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2011", ",", "1", ",", "5"}], "}"}], ",", 
             "0.00862279843444227`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2011", ",", "1", ",", "6"}], "}"}], ",", 
             "0.010141382807373383`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2011", ",", "1", ",", "7"}], "}"}], ",", 
             "0.023928571428571428`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2011", ",", "1", ",", "8"}], "}"}], ",", 
             "0.0058230683090705485`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2011", ",", "1", ",", "9"}], "}"}], ",", 
             "0.05686962065667835`"}], "}"}], ",", 
           TemplateBox[{"1085"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
              FrameStyle -> None, RoundingRadius -> 7]& )], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2013", ",", "12", ",", "16"}], "}"}], ",", 
             "0.015035854730511219`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2013", ",", "12", ",", "17"}], "}"}], ",", 
             "0.027941353202740056`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2013", ",", "12", ",", "18"}], "}"}], ",", 
             "0.004860338466943843`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2013", ",", "12", ",", "14"}], "}"}], ",", 
             "0.05102947711450156`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2013", ",", "12", ",", "13"}], "}"}], ",", 
             "0.007816065723413966`"}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{109., {5., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{90., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{90., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 186, 15168568814476616284, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{104., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 186, 15168568814476616284, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{78., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{78., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 186, 15168568814476616284, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{135., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[186]]], "Output",
 CellChangeTimes->{3.7099302742661853`*^9, 3.7100751395514326`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"years0", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7100757107337317`*^9, 3.7100757307427316`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxV23k4lN/7OPCRskSZUJFIpCQySkmUGRKpGG1vFTXZpTItKEojRFRGEWUb
iSzFWJJCRpS1ElFap6g0VNNClpbf7T6f7x+/96fr+lyva8Yzz33W+5znPLNd
/TZ4jKNQKLbjKZSx/4f/eOqqIoZaftGM/KJoC3CrDfiSlb3/dZ+TY6YcAN8P
PN0uYRw6ZloKuH5U7vq880FjZt0Hn5mxZPeTHPycKwbPD/qxXeJe+JgFM2aI
GFmzP66s4CSNWbwKPCVs0b/PXYFj1vQD1x4qeyypcX3MzIvg10+KaRfV7o2Z
UwsOdfgmWf6oacz8z+AC2+E2ueraMQunq4kYfSYp6uVnEsdMtQTrOfNGOdTg
MdP3gPMtqbPvmx4cM/sC+GJHl0N1DX7OE4A3C+lyYQ4ZGL8IfCbjq+fEzisY
/9SZIsaJ60WBNxacxvgtwOFUS5nZ4VyM3wcs9+mek+BrKsZ/Hjw+saTg0l0O
xl8Fbup2umPOQ4s/gl/lRzXOeozlq6moLmK0nCruiO6Lx/jNwft+6A3FDFVh
/J7g1yvLskNbyjF+LviVjdT4ckYcxn8bnMi7ufHgwHGM/z1YfGvd/fzIAIxf
QUPEcDyhEVr0D+Njm4JlnOVfcI50YPxu4KnB4VLLlrdj/GfAW6L8nsW64u9T
ysG7ls31Wu5bgfG/A98bti9vn3IJ45efBTZP2HF4EdYvdyn46Qc9bYkJFzB+
FnjVHHY+nY3fF0eDjd/dmBwanY/x3wD/sS1NW24TifG/AR9bpfq8XITxcGQ1
RQyvm+J8o7gQjH8x2Lh59JlM5BGM3wX89aO5gs14/HtqFNhpKEG1V/kUxl8M
rnJX7krwisD4X4IPvLOrkTE6h/FLzRYxzMpDN6lLhmH8NDDfw26m1R78PmU7
ONC2sTe6MQfjjwBHRjyqFM3MxvgLwU8+N/V+oWF74HaBf+45+v5wL15PIKkl
YljIWXaVqcZi/AbgKcdmOTbMzcP4ncB2JUERsslYn8wT4BZe9fPVX2Mw/mvg
tdcqLr0wSMH4O8F/+iIN1Quxvwop2iLGSMKjvavOYn+jLgBn1da52WiR+DeD
1za3ZM7di2YfB++xoGSvEUVh/Lng0S5Xj6HV2P5a28G1/916Hy+L90v5C5ae
f7xpZtIJjF93jojBXnfWTnoT9gfWBrCG/tcijhuJ/yjYx56W2/7gLMafDd55
s7Zd7fwhjL8VHPlp/NJE78MY/yh497rRrvetGA9TR0fEKLEvVtNTxvvjOICz
JjQNRUqR+j8Cvl9EoZU5Yn8SZoJp3VqKt2JI/A/Bjy2WOrquIf1/CLxyy+mK
jhoSv9ZcEaNnQGnxBy8S/zqwfrG5/NR0LP/WAPBLC9m4ddLpGH8G2Jaf7TK4
NQHjbwYHvRwJ9s8k8Q+AlW9pinwEeP/cWfPg97WdhuqksP0I1oCnCnbDP7T4
IDj1bbOsrCaOl5ppYFrD4LiWtzgeMBvAYo3tndmL8Pqc72A9W84+4zV4v/yZ
uiJGx1vqGy0R9ifhavBIaHf8BAMexr8fHGflLVX2FsdDejJYRf/2zmOBWL/s
e+C6yIBejRb8fd5XsPqHC0vml2J7a1WdD+PfuZkzRctI/KvA92UuT2+0IuP/
PnBV6tOz4Zux/7GSwOp3N6e8GMby594Fi35MWFnRg/cr6Ad3paudrvqE5SOe
pgf92e2/XXcfYP/WZICr/NLKbAqwfJm+4Fc1Jw/eHo/jBycBHH1Fd+RxGrYn
fjX4SYiQv/II3o/wE3hg4P0qZwb2T6ryAhGDcvYyS2st9hf6SvDngNYRg9U4
X7G9wfzkalPxCMbHOwfuVPYwWuyehvFXgleGHjGhmZ3H+D+Cu+iCSQq9WL60
KfoixuChpOz9EjjesczAe3M78rx98XOuB9h7bfYmz+IsjD8WLBXlvFjOB8cn
8S1w5rj+2dxsbJ+aPeC2O52udebYf5iTDUSMBRm94rk7sT1yloHdEnt3mR3F
/sd3Bc9ds9NXWhf7g/A0ONry3b+ryf4Y/03ws6M2y0/GYf+gvwW3qHMvpCuS
+OUWihgO0ybNkH+O5i0Bb89rsp82/xjGvxMsJx28SJGMJ5RocMLk6/GTr+N8
SCsFD3pda7PcgvXFeg0OW5S7eb4ymf9kDKG9X0k317LG+xcsAsfR8qPWxWH7
EjuDZ9e+75D1w881I8HeQVN+fDhO4i8CL/UocK0PwutzXoBbLLwHD5HxnD+B
JmIY1NPve6fj7wkNwaE5vnGxW3G8om4D69zy9WnTIPUfDm7YlqO29kkuxl8A
/vF540bZYPx73jPwHWmLXz2WJRj/OCMR43B60/HRJjL/G4Dbva+wHsVhfdP+
A+eJNx3WM8fyZoWCrZd1Uue9wvmVmw9W+PnTy0zyDMbfAa68vSvzHIf0/3/g
Pe+vNbtp4f1q6i0SMTTLd+52Kcb5grkJfKTLdgKNifXHCQEHVOhIFQ5g/fBz
wJRSCdqwBbYfYRs4oYbRvFn1KMb/BzzIVfy99C+Or/R5i0WMjJxL/rsmY77F
dgT3SG/4j92J8xcvGLzjXNXcb0zsD61Z4GBt1uqsYixvSitY923kJKsveP+0
EfC/HTErby/G/suaYyxi3OTs7t1zAPs71x7sn0Z128rD8hUcBh89Zjjp4Xgc
j8SXwZnKbhM32iVj/A/AO1bfKZT5X/3/AoekMSV8LbG/cGYvETHmFHgys5Jx
vuavBdtO2qkUWH8Z4/cHmz6rDOCMw/yRygNXWyzx8LmO9UVvAr+wT9pL7cDx
hP0T3KOU35tWiOMrT2OpiPHwyGPOmxT8vVZbcIN6rn62B2n/B8Fxk5ZLVEwj
+V8qmKcfun60Efsjqx68OePy9Kv/4fjE/QZWdcvdqsfF9itQMxExmC8LysLa
sDzF1uDX4b3TdO/jeKjJBl+xLTY6v43M/5fAWQ1mLpzN+DmnDmyfzZjw1h3N
/wL+s7ti08cIbD9ClWUixg3zO+69T7H9Ua3A51MnOMybj+2JvhfcLz+98+lZ
NDsRPFhfW6UjeRHjrwEfsX6graqJ5dvaB+6JfB1+MIqMf9NMRYxv4rf32uvx
+zQ6OMY855PELZL/7Qb/Fn7v+TVC6j8ePFS6Jt1UAeMV3Bn7fOTJFBaZz8S9
YKXbdfJdG0j/V1ouYiz82xCfdQY/Z64An3FMj1p1GO+X4wX2HqzonnkI65Mf
B952d2dGawLer7AC/Dus2kD5GPY36gewvNHUnPHXsT3TqWaQf7zacVlHCa/P
Xg6e/XmlyPYalh/PHZxtd/yDTw/WX+tZ8NdFL+r/SuB8SbkF7nyybGHIPuyP
tG6w+UhOqKgN5x/WJHNof9dt5Ow68PtcE3D3/XKjfadxvBPsAg8UT1/y4SCW
jzgGbHV2ygcdQ7RmGfi4pp790Gb8faYQrGEQcC1UDePhTFwhYrynPVp/fQTb
L98YnCHTuf3Kd1L/O8BXdrH8p0djfVFPgQ8YSpqxHmJ7ppeAVXeUlb+vIeuf
V2Ar6cRvMWvQPOmVkI8MVC8v7ibt3wi8fEO5rXU09keKM/j19zfRf43xfmgn
wWnfEnuO8XE8YPHBaxoyqz9PwvGF+xx8ImivcuZt/HvBeAvIJ73/Wg9txPYp
XgjOvm3QJb8TP9fcCj5e8ljY2oHjAzMMLL0jN+jjM9L/r4/ZZDTCyZG0/6fg
HxNOa9/l4PgmlKDDfHlxxO6BCln/6YMVGMPhzT/xfulbwDUJR/jqurheZHPA
614aD5yLw/UkLw9cqthqR19QhPE/AQvMJt36MR/rm/IPLOuSkPt4IY73tPkM
EePBgMWvWocDGP9GcMeVJ/ZTf7Ix/mPgm6tNzUxacH4VXAW/W8czvrtsP8b/
GDxn4sKBY/E4f2v+BuvGKOn+bcPxhDnXUsTQfnm63uwDxsNhglef2rjSvQf7
Cz8IfGXaCcVL/8t/roCZrjv+7DmJ9Ul9BL7fOfhHzQLnA/ow+Pv+5NiXK/D+
2NpWIkbZ3i9VblJYfrz14HK/PS4rTuL3WwPBUwPjt8hpYbyUy2C+smdYSS7O
N7QWsFHrq39PPuF8xBoEp/Uazl0ciP2Lq7lKxJhZOKW8dhXJf+3AE81meJ2Q
wXxRfAisoRIC//Zh/Olgl45LRUbjsP0wG8Ft/0lf27uH9P8f4NCTGfv6yndh
/OrWkJ9T2helTMHyFNqAWTuKItsk8P6oB8BndUV9PQ5Y/vSUMQ/JF2UMk/nv
PviDZrMkfRmOzzwx2GTP7eayJyT/nbEa+ruef+sdCbL/YQ2uODnjm0M0xkvz
Axe7VMmFPMf7Y10EK/i5ffJKwvLi1oL7XztFzZuF7UPwGXyiYud1nQwsb/F0
G5j/x6c9UPDzwvgtwZ7XfL6cNcH6Ye4B77e0S/NYRda/F8C8D+fbv+lgPHwB
+IvVudTADd4Yvwis1hW7w3Ez/h51qi3kzy9fTff7QfI/CzDvq/OQSR+a7QO2
D730cqbFToz/PLi4+p9NmLYLxl8FfpMVYR7jgb9H6QVvnX/gg2Ijrt9oimug
PtV+PThE8nGWOfilaDaH0ojtj+sJzljtUBmSQOLngq8Hqs0/8Qz3I8S3x75v
1tF0UNUV438P/pz8fHbjMRwPmQp2IsYKJ7k6r3lY3hxTcNHGo5EKF0n+6wbu
VrmqkvmE5L9nwC1GV27sDsfypJaDZ9rdyHaRxnyP/g58ZLT/aNcvHG/Y8msh
X7t702VjLcl/l4JZjUa75X3w/lpZYIbNyzr2Q7w+JQZsOxjUfClqD8Z/A/xm
2uUFdj/QrDfg5KnR8q4nsT1yZdeJGOv1J+U2nHDD+BeDf/qmB6WMx/oVu4Cn
7Y5+7D0J50fNKDCjKjl+ZBe2X2YxWDtw6smumfg55yX4fehz64ERbI98qfXQ
/9g5mq52eD0hDWxe49s1MA/bA3U7OENtaVDGDKwPegTYp+PPlu4ujI9dCD49
W/u1+lTsD7wu8PPFMu5ya7B9tEraixge7IJj3b+w/VEWgjXujfK35Xhg/E7g
ufu/pUtcx/7LOgE2WVjvyd+D98+9Bl6e9lrNTxevL+gE15xtTXu7GL8vpjjA
+LnReHqCrCXGvwCs51tY4TTohPFvBndyBmQ2MLD8OMfBwi8O7l/k8f75uWAV
+sbu3OVk/6cdbOISo2Tcn4nx/wVTvNPN405je6HrMkWMCS87/npQSP6zAazV
0u3lYkPGv6PgJz9nl2hPR7dmg7Vr6hN/dGH5UR6Db2+QPvfiJJYHbRRs2mZs
6veQzP86jnA9VZWBnlqy/+kAfixX1SpXhfUjOAK+GS9hUXQUx1dxJjimtqdG
8pEfxv8Q3LP5Q+y5+Vg+zCHwj4JdWvZbcTzhaG0QMQyj9T81bcb64a8Db5+z
4GWdHLYPYQDYn/5CUF9Hxr8McJO4Zf3Jl6T+m8HV/e+HTnSQ8X8A3LLKuOrh
SSxP3qyNkN+Z/v0+wCLj/xqwae7p6qlJ2J4ph8B3HNzljpaT9X8auFaON3/0
Lom/AXyQ0+S7MBjHB+538BMHszf7Wp0x/pmbRAzHlI+LQhrdMf7V4E0LZyw4
F4f1p7kfrGDbees7B/NtZjL4laA2Z28GXo9zD3y/hjYc2EbW/1/Btuqf375h
kfxPdTOM543qfzXMMT+krgJn5vnpvynB69H3gacsi2/4dZ/s/ySBP2lLrd6Q
SvY/7oITZY5VmdHx91r7wROcZ/yQUyT1P32LiLHovI1HpAaWH40Bzn0wRVJt
E7Zvli/4c1mASFsXxytuAjhFVWHfxImYvwiqwTrrnBb/ccLxRvwJbBCa36gT
gNfXVP5PxLh3vCCAkonrGeZKMPfKcOaPyaT/e4PH56xwD670xPjPgU/2KTBC
12L7EFaCv2z4Nr0wEa9P/QgOjqvI61lM4p/iJGL8vdTu4pGK+QPbDPxNZ4Na
Ktmv4HmAS1QvH1qYTPKfWPD0YRNJ7d24n0K5DS4YWTP1WR7m07Qe8NyqwrPc
d5ifsCZvFTHcepLFqRoYL3cZ2PL0sx9WK7E+BK7gr7J3X6h+xPFLfBrcumTy
utcpZP/7JtjoMLMpqg3Lg/kWnGSV8S3IFNsLR26biOEgX2rrVYXlzV8CPryF
E1Z7EstbuBM80JAfdq0H65MaDf41dFOyhux30kvBT/qpczc7YPmyX4O1m5+F
65wm45/MdphP1jw3nrwW67d1EVghvjyo9A2pfxfwpuRH95/uwPGDFgkO/OCq
fUqR1H8RWJTXf1eBQ/K/F+C88SmDeuvI+m+CM/S/ayvNgpLI/och+NlP5i2T
VZifam4DBylQ88z34/0zw8GpxWveSdKwP3MKwGKVhr8hd7F98p+Ba5L8dx28
RNb/41xEjHq3+VPDX2F5UQ3AG/b6nHV5iP2X/h9Ys/DLr7pgHG/YoeC6nxmt
z2twvOHlg58w3d5MmEL6fwc4t+G1tNw2vB8KZQeUz8dp2fxYsv+lB5YJnu+9
0Z7sf20Cr25PNuxaj+MTNwTMVKlJGw3H3xfkgNMUe+Yz0jAfELeBi39ZZstK
k/z3D3hXQ+jcbPI8hDlvJ5RPRIy+pzKO3xxH8F932T3PHcj6Jxg8MTTeTuMR
fi7MAq+OMtwymIj1QW0FL3xgMjdwHcl/R8DTZcRxZ3Zj+2TPYUH7rIhzHy3B
8YdnD5586hjffzPeT+thcOHeIPbzJ2T9nwl+KzJPPeyO36c9APdp6AkNr5H1
zy/wpYBC43ayP8KdvUvEOPozbNzGErL/sxacd/ff4+OvyP6/P1jKa+Gnukmk
/fPAv51Tg54txO8zm8BrT1HHl3iR/O8n+K2U5JqjkmT+13CF9VN6pmq5Du6f
CG3Bny7HLLzdi+tx6kHw3hcxEyK+kf2fVPA6+8M/ssbjeMGuB88NoLQeV8L2
xPsGjqyzNuGrYftoVXMTMUZMQ54t1MH2TFkNVpJ4eOZ5A5YnjQ2u3rOzzPAF
lifrEljIfjzu5B2y/qsD238RKKd6YnkJvoCPSD+v/5FG+r+Ku4gxbNv+YvJq
kv9YgbsePf5s7o73w9wLjvCbZlW2g+x/JYKDe2p3zS2+hvHXgDOrp/2bnILt
UdgHztqmMv30MVx/U6d5QHlu8I6Zk4brYTodLLXki2wWA9sfeze4zDk96PVJ
8vwnHqylmOPekkja/x3wx74XVu2rSf7/CTylYQn8I/OfkqeI4aw4/CLwMtn/
XgHuj5OqPZSI8ynXC/xtzRmdRnssf0Ec2ODDMqWCfLL/UwF+Z/lt8lWyH6v5
Afyhw+lTdyhej0n1gvnt7fvfv+0wv+QsB3+39dj9ORHrh+8OVp2tfH67I8Yj
PAtuOiwttHqM/Y16C8xYkz50tw4/p3eDo+4MVFdEYftmT/IWMRrqVq88dNcX
4zcBTzExEQ8/IOPfLvCLG19YIbmYT1JOg927Ih69LcT6pZWBrSQGzWtuk/Wv
EJwmZRH7cilejzvRB+r7dqT/ei7+nsAY/Pv4gTQzWfL8cwd4W5JCVR2pb81T
4E/DKVLZy8n+Vwk44idz29Vasv/9CnxIsC/2hjzZ/5TeLWLYSSbwfUZxPBAa
gUPcJ3g2bMDrU53Bv17aX6IOkfXPSfAG2fXuta1YH2w+ePBn1N9SVxL/c3C0
a/ncBimS/4/3hfHhvN61BZewvCmG4Frh9QemAWT+3wqOki0ZrDfG8maFgZs4
2anKeiT/vQ4OH42bxUvB+UPwFJyxaOaivJ1k/SOxB9bv/mdLVV76YPz6YAOH
kzROJM7vzC1jZm43lDpH1r8c8II1a/Y/Skbz88DqrLSWJSRe4RNw8xYzc3YE
xkf9B46fVN5pW4r1RZ+/F+Yzrd20gtvYvtgbwYVWC/osP+3F+I+BDzC1f6i+
w/bWehW8dBFV9M6N5H9tYJuzDKetFvh8hPYb/Kzg5abnZP+ONXcf9OeB4b0v
HbE/cZngpIWNMdsz0YIg8O7a6TV3TpP6vwL2DvfaPH0/Gf8fgZ9GD8/3u07W
f8Ng3zsnyh/9L//V9oP8a2hYagof+zN/PZh71GSdzS0cf4SB4GTlSqdFtWT/
4zJ40q/8hLZukv+2gMssJTdeDsH6YQ+CdZQOL0iywfbE02RD/mB6/NG4HWT9
bwd+pDXNpCAf74fiD/Z9PqH983iy/5cO7ou+J9TzIfN/I1jCyMbR2Iysf3+A
1+k/yNnxmNS/+n5ob76fve+UkPHPBrzQ6lbMg8kk/gPgApWJ85oMcbxnpoDz
61MmUUdxPuHcB18qcF2umI7PI/hicFRA04rCNhL/jAOQf379cnTbFIyHag3e
Ip9b09mL+zF0P/C+hV26DrZk/XMRvM3LmBZwDuPh1YK/ZEsFZvni77V+BncG
+xh1Pif7nyoHYby67UA3kcb8m2YJjsps87eaSZ7/7AGL/zLGD33B++deAE8u
it32axn2L4EA/EViaa+HDpaXWAS+5bR3dTqVPP+degjWRzXb9VYGYX0zLcC3
hNMLp08h8fscGsv/xPsY8WT9fx5cXbl9h/dmnC+FVWN/P5j89lEJxkvtBec7
32Ls08b6pCv6w/rtd/kv67d4/2xzsFu4U7fEV8xfeJ7gkovPK/ouk+f/XDBz
eo7Cs2c4vlAqwNo/RI6pFXg92nuw2feaWXcicT+SpRAgYtxw4zZWCK5i/Kbg
ffsrHVwrsL0K3MDS76R2Ne/B64nPgNvftqe0RGP5a5aD+6qT39PJ+pn5Drzr
gNGc5HASv3wg9P8lKfbdN8n6Zyn469uaE2sKyP4HCxzW1jh84yH2T2oMOGKb
hqwvC/sn/Qb4dZCafOEjsv/xBjxT1LwgNRLbI0/2sIixwv/2gdc2OJ63LgZ/
TshctdeanH/YAVZxXTA4qRvjpUWB3zWWxIhN8X5ZxeBAtVU7ZD+S9e9LcN9B
0cg+Zby+QOoI5MeuixrbZuN4IKaB/6p7rlFcROp/O/jCvjvaUR/J/l8EWGPP
IqeLPTj+cgrB0xf7cW5uwvUHvwucfCjR6H0fmf8lg0SMf9X0JeH+WH/UheCU
U3OaSvXI+scJnDm+TdV2L7Yf9gmwyco1JzwUMB7eNfBTJxk5pyy839ZO8Irz
TWmFr7A9USSCYT2+j28mLCX5/wJwuZr6xXgGOf+zGTznbOXRJxVk/XccXCMY
LeEcxP4gyAV/ualc1LAM60vcHjy2n7fNR2UV5huaf8GXimwMXSzJ+l/3qIih
l9gtqyFLxr8NYI9VtgLbRzhf8I+Cv0sI6pzKSfzZ4AU8JQXl61jf1MfgU6Ol
9WVy+LyGPgreqjLx0oanmB+ydY7B/FFrtbu6ljz/cTg2tl6bZt39l8R/BOxT
8HReygucjyhXwAb/WDErGnB/jfYQXDq9sES3AecP1hD4c/jJ271e2D+4WiEi
xrzt/Q6JkWT/fx1Y7pGisQmNjP8BYBsfYbj8ZawPzQzw9Y+nnjatI89/msHs
KN9saRWS/w6A1x1m/1a/j+2LP+u4iHHQ8RtzdztZ/60Bx4QH6zzaSPKfQ+AG
mqXzUDt5/pUGHnqXtbXMDec3dgPYtHFG3ncTsv/zHWxmWmy3n+TvrTM5IsZ6
587ucV/I+scGfFrFyLUuCsuXth987saIr4YS2f9IBh9sUfxLUSDj3z2wxi5D
t7SrWL+Cr2PXG34otD9Pxj/VUBEjLiTffAPpL5qrwDlvby9ye4Dlw9wHNgif
lmPlQvLfJPDJdyGOMiNk/XcXnDuo++iFHIm/H/z9ZOVsvway/zP9BIxH0te3
+png9ekMsOf317kmemT/2xc87CTO7D+C+QwvAdyycLhzainJf6rB7Tvrzxq2
kvxXBF4Qa6bncg3Li6YcJmK8F+56t3YT3g9rJfjNlskLNp4n+9/e4Au2joNN
YWT9dw68t1+6xfoeib8S/PP4sfUHLEn++xE8v/lno64Sjj/MKeEihvVnSdU5
kfg5xwzsUzrY0nQKr8f3ADu++bDvny7uRwpjwREqo5TFztifqbfBwqS+D536
pP57wJ6nTMfFnCb53+QIyDfPzpx2i0LWP8vAL6I/xLheJOOfK3jx6rNi0T5S
/2fAFica3I3/YP+j3QQn9m21ux+0G+N/Cz68ubE42ZCc/5E7KWJwPjy+rNhI
9j+XgPefcx7N/032f3aCLVq++soYkvYfDfaV2/bKexvZ/y8Ff5YQGd9oxPmT
8xpcVKm6wsOCrH9kIkWMeycmTbW99xjjXwTWr9T9ytBrxfhdwIz7WrMnPqnG
+CPBScZaR0v/YP7ALgInn3vv5WmA5cN7ATY8dlBxpiPJ/yZEwfrtD+ecxj6M
FwZ86E8G+mHycXj/tG3gzJIoY5NObJ+scLDclU/Cf9K4f8QtAGu5PHnVfZzs
/zwDn4m+59hZj/mQeNwpyP+8Eq+u7yf7Xwbgjc1Fzw4bkvXPf+BFsT2Sk87i
eMkJBW/pVcv820z2f/PBUdJz39+fjeOlsAPseG7uhuDj5PwDJRrWT/Z9b8M3
kvrXA/Os1wuSPmN9sTeBuRHPWZlJOJ7xQsC/jazkGBvw89YccJ/cV8+FZaT+
28G9DKPGOysw36L9ATek6vR/uMnC+OfFwPXCJXwk12D74jqCPxXGOqkrkOcf
weBt34Iner7B8VKcBX5qydP5egf7i2Yr2L3+1o7DW8n+zwj48NGZFp4G5Pnn
nNOQ/3yVr6+vRvPtwVYFxX8N9LB/Cg+D/a5sPWPAxPZEzQSnmh4ImV9F5r8H
YP2Acp+/KeT8zy/wslGh2Z9sLC/e7DMw/vz6/FOkTJ7/rgW3Dtizgp5g/6AE
gMvlPjl27iD7Hzxww1S7WzlzyPO/JnDPYS+fOBWS//8EH1ii9EY2hux/aZyF
8e5e/Sv5fLw/sS343+bf3yaewvaueRAc9F1ddWkUtndmKtgheOp46UysX049
eFVcdnxqAhn/voHlNLI++g2R/FctFtqHbKWPcJicf1gNlj6tm5YUTuqfDZ76
XULD7DvZ/7kEbvujll2SX4jx14Hpto0UbVecH1u/gLMM3IWvA3E8pahy4X5U
qi5kziDnX6zAlcJAFbfL5PzPXjDfcTj06AE878VNBKucezNvfg4f468Bv/cP
jf+YhvO1uA/cOEjP3VZOzj9Mi4P2y+tNrqeT/R86+Jyz+o/dGmT83w0euuLo
mD+I/YUfD27MmXzpPDl/I7wD/rngs1azN1n/fgJLLFa1E+0g+19K50SMj5ri
ircn8PvsFeD5MvOlqCfI/p8XWLowyzL2C16/NQ5cMbv6/dSjpP4rwQfqgsqb
I/Bz2gfw3yyPg+vNyPxHPS9iBOie2HXqJln/LgfnROYNWm4j8787eGllwNYr
5Hyu+Cz448qIJU/uk/hvgU2lX60v20P2/7rBKT+1VOlsrE/OpHiYP+emzZO/
i+sRvgl4ofa1l/ZHMF8Q7gJXta5YU9tI9r9Pg+sLrp0VamL7opeBO70VXa/t
Ifm/EPxEftA00ZeMfxMTRIw7O5KipF0wnlZjsOPVALZ1Jln/7QSneetWzyvD
fJ52Cnzq20jehhq8H1YJ2DP6ZuiMEjL+vwKLb2aEHXiM+80C6QsiRkfT8IHM
MFL/RuBT4RM6JhRhPqvpDK502UDxS8TxmXkS3GSs56n4mZx/44NneMffZ5Lz
yfzn4GNfvfQfCtDC8YnQXr/+9WpaSs6/GoJjenUEdhexP9K3greN/5Xv+onU
f9jY5+8rVvz0I+ffr4O7f3zYtDAA42t9Cp645Z5zj1Ilxj8uCdY/6f5h87/f
wvj1wfXyotL+v7jeYG0BfzSIb8+dj/uRXA7YM+d3AVOD5D954D+HfI/N7sXf
Fz8BnzD5ejPFHOdzzX/gZVbJ84Pzcf+aOf8izAe1vq+WSeD8ydkIXkCfu5Fx
Cf+efwxcQr2+tCWSPP+4CnZ75Jf0xI3M/23g4T/x4tRp2P7ov8HqkZVzVLrw
vDV77iURY4lS5a/J97B98Zjg+XbtBWo25PlnEHhiDKN2w0t8nkjJAg9ExqiI
BHiekPYIPP3P0n30gWKMfxhc/P231rUUrC+udjLks0UL/zZYkP3P9eBZehcu
sGWxf4sDwVNrNjk9SCHnXy+DLVmFpSlaZP3XAnZRK5G5MB7bK2cQfFFO68Hb
XDyfyNdMgXxordHGQ8looR24/FDff2IK1jfVH6w21B9/K4Gcf0oHz0oV16gs
wvUpuxHcc6E5pjmbrP9+gJ+pK3EHAkn7V08VMY7IzEv8vQPLk2Kb+v+dd6Md
AJckUHk/l+F8x0oB7534Nv2iIsbLvQ9+WLxgY/ZH8vxTDH62880x6wBy/mFG
GsynXnntplPI+T9r8GWf07XvojFfYPqBf+gfWpodSp5/XARLV2Z0Rj7B+ubX
gvU3uawsUcDxSfgZ7HwkzrVngMSvki5i3DfZ/IUdQta/lmBd8XqP5J3k/PMe
8Ipv/SmVcST/uwDO7q03TJbAfLJVAF7VGCGYsBbna0ofWKn9x6nf4bgepU3l
iRghhUbZZiQfZVmAdevC06dFkPWfD9ibmnR8tj3ev+A8OHb88zi6GXn+UQVO
L1sst/gFaf+94LfR8/bn+2N/YSpmQH/iHBSYCsn+rzlYSanBZ+jOdozfE1wx
MLFbHIX5i5AL1s8b/K6/lux/VIA1H75/bLuI1P97sOubb6t7C3E+Yitchusx
I3Ym7cf2zTMF77LadFhmJjn/7wauzD7fVqdMxv+z4GLKz8khDGwvtHKwo/uR
D6eTSP73DpxgmTXr4iU8f8mVzxx7/+eZWsJlnF8FSzPH2n/K06KJ2F7FLPCU
55ctN6uT+o8Bt6iEnp7cRdY/N8AT3Ovq7Mj5KM4bcJWVUdKUOdh/+LJXRIwR
xfs/XDRJ/rMY3EJzmGAmifMzdQe4WS++L00e2yM9CjzrWP6Ra3JYv+xi8Ko+
sxC2PVn/vATPqDbs+ZqH9d0qlSVivHI86C7QIeefjMAjGr/5TjvI/u928Bv5
m+q7ojAfZUWADVP1PI9MIecfC8E3NM5YSOmS/KcLLMNy3iScS/J/yWwRw9/Y
/nXJNrL/sxDMdHiZ0m+G/YPpBI7V0j/j30TW/yfAE93k+bEsrF/+NfAZ42lh
c6vI8/9O8H8y4tk+z3C8o0pchfkgPO/HdjWS/ywA+72sV1Y/SM5/bAa3b7E1
+eeK7Y93HKxdtFNKbQfmA6254E2WVMkyXZyvKU/AD78P7t9O3l+i/QXvsr89
59ZBcv5FNwfmN6eSyXdW4N9zN4C3Livb+CALxwvBUfDM+v3wj5z/zAabmWV5
Tp+N84fmY/DEnccvh5L3K5ijYMU77butbuD8ydHJhfKcdnMkxpHkvw7grNVW
NbRBMv4fAV/WKRn5PID5OPUKuHLq9ywJ0p/pD8ELY/otbv0j7/8MgfeXZoi+
qJL9H608EYPiYiBRm0/Ov64DD3QJH9TfJ++/BIKNJ4vVLraQ8S8D/GTvBtM9
rbifx2oGD/8rDXXowPbIHQD78t5NbInB+xPMygfPTqj0SyD7v2vAQR12O+4M
kfOfh8DnfJ4/TFcl+V8amGZ1XmiujeMBpwEcrTnuVS2bxP8dHNKWJ+frjPO1
cOY1mM8fP1CmKJL9Lxuwg/Vd8dfxmG/Q94PlpMZFDc3B/s5OBo9IxC43mEbe
f7kHzqSEnm7dhuNV61fwdQcL09EgnH8pM66LGN8KNm9p30nef1kFXi+nfC93
Mp7vZu0DV9GCh9bXkf2/JLBbQtndnU1k//sumGlSK7nHmpx/7QeL1FfS6sn5
dM3pBWP7wRFSmxywPTMZYM2gmAPjfUn+5wsuDX42spRFzv8mgE06bzscsMPP
hdXgWEZE320jsv8pArvXhF9buRDPL9CVC0WM8a3WF0v34v2zV4I/XsusWPQV
y4/nDR6OaAqMcCbj3zmwz+xH4u8NOJ5TqsChFRU9p5+T8z8fwek9gS5N7WT/
cwpfxHAqC8mbYI39m2sGvmtcU1hsg/cj8ACzs5J/ezeT/C8WfOntjEIdDYxH
8zb4nsWA4pADjofMHrAW/of5CmdykYgRrJY4Pes2xstfBpbOix1nSfajhK7g
j8snjjr8L/87A37quXrT9Pvk/NPNorH9AaV9Felk//MtWKKqTG7/N9L+5Yph
/uu7+OChI5Z/6xLw4u0zlrtIkPP/LLDcgS/yFz9hf6BFg9db/Q7naJL9z1Kw
6r3nSYYy+Dn3NfiljeT2lkDMlwQyJTDe8w4kP5XG/UbxIrC+ypMAzz3YnjVd
wAPn7+d/syXr38gxX1zVkKVE9v+KwAbKkwKYq8j+/wvwFd7X9EW1JP+fUArr
9X2bcrup5PkvDdy29aF7UhE5/7ytdCw/N3mQSs5nssPB9C0ao49iyPn/AnBA
0Z0tCRXk/a9n4JyHEV7On0n8kjdEjM2NK48mFZP+bwD+uzbQQ9KbrH/+A+vk
psQwyfkobig4+ezgqUpj8v5fPthR4kbq1Ulk/OsAz3Ve/um+HeZ3mpQyaG/W
v3577iLzvx64f/iYWrcKzl+cTeA320fMI7jk+X8I2DWnrVwhkDz/zwHLl+bZ
xP/A/kVtBzM9R86fMyHrvz9j39+UcfyxD8n/592EfPsjV+Y/G3L+xRGc2/y8
b44YP28NBvf7SWmtTiTn/7LBz1QS1HVKyPPf1ptj541nG/Z6kOdfI+A8m5oz
DmFk/T+nXMS4aiv1KIVJnv/agw3mbVEJ08L1vfhw+Vh5L/A/ysb5SDMTvGDj
zNCySjTzAVjJUNhf94/k/7/AdkskpR3zyPs/s2/BeHBEMPRwGzn/txbsPvBP
6LuEvP8ZAM4ob34WOofEzwM7dKieG2nF86bsJnCs23t1egcZ/36Cv7xZYXrA
k+x/atwWMWxL736gk/U9ZQ341E7H3d4HSfwHwVvW13Re+YzxsFLBp3VjlQ6t
xfO03HpwlnLGqvi95PnXN3AB5UKITTleT6xWAeNX1sPSxfpk/2s1mGmhGxtd
TN5/ZY99/qUg+6M1vp/DuQSmNolfV/aR9//qwEYycYdKqPj3wi/gzUOPJ+s0
k/e/VCuhf589vllYTZ7/WoELJgfPmFtH5v+94NBd3QVFjuT8ayLYYNRsITON
vP9cA85Y4qVVZk6e//WDV54MsX0YgPkrbVoVrFdea0SeDCHP/+ngq6+u/bIm
+znc3eDAldJGkYvI+B8Prl+swumahuOp+A5Y4uUJpYBPuN+m+QmsuNm0N2Ec
Of+hdEfEuHDx69wrGtifOCvu/N/5QbL/4wXuXzp0PduAnH+KA9s27P6+n5wf
o1aCb0c0Ct12kvNPH8DG5jETA53J+T9qtYhh85u57M8Aef65HPz+nIb442py
/scdPDThXdOyBOzvlFjw7G8VP1etJe8/3AL7V/+nV9tE2n/32Oce9n6JG8n5
l0kCEaPutv+EM0Vk/WcCDlYusHkbhOOzeBd4hcqLTW7dmK9ongZ7nk0op//D
fIVZBm43Mn1n9xrLlyMEj6ikxNYM43zJn1gD9delEeKRSM7/GoOrVAu3tDmi
qTvBJ4J/2OU7Y/ujnwJ/NDzpMxRCnn+UgP/JXArTL0bzXoFTPzyIeydLzr9K
3x0bLxdYLx9FUxaBFze0WvNXkfcfnMG52YOKqd5YXqyT4GkHc+dq++P6iMsH
h8hq9qfsRwueg72UdSN9ZmF9icfXihhfNw/MOTKBvP9vCLaMM5QueYDtkbkV
rOvWxWj+Q/b/w8AnZDZ0jNzA/sy/Dlbc0mKVdBnnE+FTsLVCTp3pVfL8e1wd
XK+mJo/1H+bzdH3w1jKfKSVBpP1vAbeFqYXlV2P58jjgs+MO3bUaJvtfeeCJ
Ydvse/Kw/igd4MyNt9aMO0LOP/0DH4//s9shENdfrPn3IB/QnqJ6ZQB/j7sR
3LyKd95Xn7z/fwx8RavLaK0sif8qeFBcriR+S86/tIFXTNCvKQsi6//f4DUd
Jx5P+YXX58y9D7+nnNPQPor1y2eCrTJ3DhwIJe+/BYFPjO51WXyZnH/MAj8d
xw/8d5asfx6BN7KjXZ3CSfzD4PPbl+6ykMX+wNOuh/mWm/r0+hmy/7Me7G/4
PSPsLnn+exhcmV7beccZ9w9ol8GW0/zNSr6R838tYPpAxn8e+8j6dxDsSVvC
abmN9yPQbIDxslCh7pweOf9rB7aKUVD1Wr8J4/cH87S/xwRcIM9/08EV0+jv
NrSR8b8RfPph5MxqX7L/8wOcqfFpyeo8sv+r3ihi7L3LvbSIRt5/sgXbftzu
qSONz0voB8CvGl7C/3A/i50C7r6pVWcodwPjvw+2fxgbrHBOgPGLwRLmDSMK
b0oxfrUm6H/tsyJmmuH6mWYNfnzp9XIvHjn/5gdOVfvFnPKJ5H8XwaZPNyS8
liD1XwuOPXBd45Qm5nPiz+Af7R/C4u/i/WqqNIsYaaPXLTWayftfluB3Hc8O
56Rg/sTZA663X6Lv10v2fy+AMxjLE4Tk/WihADxKc1n7v+en1D7w8vdHpXL7
yfuvU1tEjKnNWRFpPuT5rwU4v/rBnh0r8Pd4PmD3jw4qmlfI/s958O43v7bt
MiHvP90Bn0o7aFVzijz/7gVL9su4//lE9n8UH0C++2fc78Ld2D+45mD1gIpr
F9fj/CHwBOfeel6lLyD5P/fB/+1nxFj8P4IwOww=
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.5028288*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->
   FrontEndValueCache[{{Automatic, Automatic}, {Charting`FindScaledTicks[
       (Charting`getDateTicks[Automatic, {Automatic}, 
        (Map[DateList, {
          SlotSequence[1]}]& )[
         SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, Automatic]& )[
        SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
       (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
         (Map[DateList, {
           SlotSequence[1]}]& )[
          SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
         Automatic]& , {Automatic}, 
        (Map[DateList, {
          SlotSequence[1]}]& )[
         SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
        SlotSequence[1]], {Identity, Identity}]& }}, {{
     Automatic, Automatic}, {{{3.5028288*^9, 
        FormBox["\"2011\"", TraditionalForm], {0.0125, 0.}}, {3.5343648*^9, 
        FormBox["\"2012\"", TraditionalForm], {0.0125, 0.}}, {3.5659872*^9, 
        FormBox["\"2013\"", TraditionalForm], {0.0125, 0.}}, {3.5975232*^9, 
        FormBox["\"2014\"", TraditionalForm], {0.0125, 0.}}, {3.5028288*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.5106048*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.5184672*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.526416*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.5343648*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.5422272*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.5500896*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.5580384*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.5659872*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.5737632*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.5816256*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.5895744*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.5975232*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}}, {{3.5028288*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0125, 0.}}, {3.5343648*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0125, 0.}}, {3.5659872*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0125, 0.}}, {3.5975232*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0125, 0.}}, {3.5028288*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.5106048*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.5184672*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.526416*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.5343648*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.5422272*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.5500896*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.5580384*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.5659872*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.5737632*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.5816256*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.5895744*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.5975232*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{3.5028288*^9, 3.5974368*^9}, {0, 0.33554097548898243`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{{3.710075720638712*^9, 3.71007573168592*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dates2yr", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"DateObject", "[", 
       RowBox[{
        RowBox[{"years0", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"TimeObject", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"12", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"TimeZone", "\[Rule]", "\"\<America/Chicago\>\""}]}], 
         "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "years0", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.709754628673974*^9, 3.7097546537161055`*^9}, {
  3.7097708340223227`*^9, 3.7097708412618065`*^9}, {3.7097709256168137`*^9, 
  3.7097709355598507`*^9}, {3.7097751066253967`*^9, 3.709775111530402*^9}, {
  3.709929877813649*^9, 3.7099298785287943`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["dates2yr"], "Input",
 CellChangeTimes->{{3.7099302829549537`*^9, 3.7099302850353727`*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           TemplateBox[{RowBox[{"\"Tue 4 Jan 2011 12:00:00\"", 
               StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
             RowBox[{"DateObject", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"2011", ",", "1", ",", "4"}], "}"}], ",", 
                 RowBox[{"TimeObject", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                   "]"}], ",", 
                 RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
               "]"}]},
            "DateObject",
            Editable->False], ",", 
           TemplateBox[{RowBox[{"\"Wed 5 Jan 2011 12:00:00\"", 
               StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
             RowBox[{"DateObject", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"2011", ",", "1", ",", "5"}], "}"}], ",", 
                 RowBox[{"TimeObject", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                   "]"}], ",", 
                 RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
               "]"}]},
            "DateObject",
            Editable->False], ",", 
           TemplateBox[{RowBox[{"\"Thu 6 Jan 2011 12:00:00\"", 
               StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
             RowBox[{"DateObject", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"2011", ",", "1", ",", "6"}], "}"}], ",", 
                 RowBox[{"TimeObject", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                   "]"}], ",", 
                 RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
               "]"}]},
            "DateObject",
            Editable->False], ",", 
           TemplateBox[{RowBox[{"\"Fri 7 Jan 2011 12:00:00\"", 
               StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
             RowBox[{"DateObject", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"2011", ",", "1", ",", "7"}], "}"}], ",", 
                 RowBox[{"TimeObject", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                   "]"}], ",", 
                 RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
               "]"}]},
            "DateObject",
            Editable->False], ",", 
           TemplateBox[{RowBox[{"\"Sat 8 Jan 2011 12:00:00\"", 
               StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
             RowBox[{"DateObject", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"2011", ",", "1", ",", "8"}], "}"}], ",", 
                 RowBox[{"TimeObject", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                   "]"}], ",", 
                 RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
               "]"}]},
            "DateObject",
            Editable->False], ",", 
           TemplateBox[{"1087"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
              FrameStyle -> None, RoundingRadius -> 7]& )], ",", 
           TemplateBox[{RowBox[{"\"Tue 17 Dec 2013 12:00:00\"", 
               StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
             RowBox[{"DateObject", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"2013", ",", "12", ",", "17"}], "}"}], ",", 
                 RowBox[{"TimeObject", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                   "]"}], ",", 
                 RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
               "]"}]},
            "DateObject",
            Editable->False], ",", 
           TemplateBox[{RowBox[{"\"Wed 18 Dec 2013 12:00:00\"", 
               StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
             RowBox[{"DateObject", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"2013", ",", "12", ",", "18"}], "}"}], ",", 
                 RowBox[{"TimeObject", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                   "]"}], ",", 
                 RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
               "]"}]},
            "DateObject",
            Editable->False], ",", 
           TemplateBox[{RowBox[{"\"Sat 14 Dec 2013 12:00:00\"", 
               StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
             RowBox[{"DateObject", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"2013", ",", "12", ",", "14"}], "}"}], ",", 
                 RowBox[{"TimeObject", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                   "]"}], ",", 
                 RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
               "]"}]},
            "DateObject",
            Editable->False], ",", 
           TemplateBox[{RowBox[{"\"Fri 13 Dec 2013 12:00:00\"", 
               StyleBox["\"CST\"", FontColor -> GrayLevel[0.5]]}],
             RowBox[{"DateObject", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"2013", ",", "12", ",", "13"}], "}"}], ",", 
                 RowBox[{"TimeObject", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"12", ",", "0", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
                   "]"}], ",", 
                 RowBox[{"TimeZone", "\[Rule]", "\"America/Chicago\""}]}], 
               "]"}]},
            "DateObject",
            Editable->False]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{109., {5., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{90., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{90., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 128, 15167562623507322558, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{104., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{104., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 128, 15167562623507322558, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{78., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{78., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 128, 15167562623507322558, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{135., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{135., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[128]]], "Output",
 CellChangeTimes->{3.70993028654368*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"flightMerRx2yr", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"PlanetData", "[", 
      RowBox[{
       TemplateBox[{"\"Mercury\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Planet\"", ",", "\"Mercury\""}], "]"}],
         "\"Entity[\\\"Planet\\\", \\\"Mercury\\\"]\"","\"planet\""},
        "Entity"], ",", 
       RowBox[{"EntityProperty", "[", 
        RowBox[{
        "\"\<Planet\>\"", ",", "\"\<RetrogradeApparentMotionQuery\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Date\>\"", "\[Rule]", "#"}], "}"}]}], "]"}]}], "]"}], 
     "&"}], "/@", "dates2yr"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.709754591337324*^9, 3.7097545993799725`*^9}, {
  3.7097546583700604`*^9, 3.7097546629447217`*^9}, {3.7099299615786653`*^9, 
  3.709929983934206*^9}}],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","nodat",
   "\"Unable to download data. Some or all results may be missing.\"",2,129,
   41,15167562623507322558,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7099310524512663`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<2 yr MerRx.mx\>\"", ",", "flightMerRx2yr"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7097554536026173`*^9, 3.709755458805684*^9}, {
  3.709755508496484*^9, 3.709755513531516*^9}, {3.7098140692696266`*^9, 
  3.709814069441662*^9}, {3.709929969122201*^9, 3.7099300105116053`*^9}, {
  3.709930060739809*^9, 3.7099300613189263`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"flightVenRx2yr", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"PlanetData", "[", 
      RowBox[{
       RowBox[{"Entity", "[", 
        RowBox[{"\"\<Planet\>\"", ",", " ", "\"\<Venus\>\""}], "]"}], ",", 
       RowBox[{"EntityProperty", "[", 
        RowBox[{
        "\"\<Planet\>\"", ",", "\"\<RetrogradeApparentMotionQuery\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Date\>\"", "\[Rule]", "#"}], "}"}]}], "]"}]}], "]"}], 
     "&"}], "/@", "dates2yr"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7095945490185237`*^9, 3.709594569452712*^9}, {
  3.70975522672911*^9, 3.7097552459670515`*^9}, {3.7099298846300335`*^9, 
  3.709929885634237*^9}, {3.7099299884971323`*^9, 3.709929989094263*^9}}],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","nodat",
   "\"Unable to download data. Some or all results may be missing.\"",2,131,
   42,15167562623507322558,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7099312722589197`*^9}],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","nodat",
   "\"Unable to download data. Some or all results may be missing.\"",2,131,
   43,15167562623507322558,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.709931274290332*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<2 yr VenRx.mx\>\"", ",", "flightVenRx2yr"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7097554536026173`*^9, 3.709755458805684*^9}, {
  3.709755508496484*^9, 3.709755513531516*^9}, {3.7098140692696266`*^9, 
  3.709814069441662*^9}, {3.709929969122201*^9, 3.7099299939752455`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"flightMarRx2yr", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"PlanetData", "[", 
      RowBox[{
       TemplateBox[{"\"Mars\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Planet\"", ",", "\"Mars\""}], "]"}],
         "\"Entity[\\\"Planet\\\", \\\"Mars\\\"]\"","\"planet\""},
        "Entity"], ",", 
       RowBox[{"EntityProperty", "[", 
        RowBox[{
        "\"\<Planet\>\"", ",", "\"\<RetrogradeApparentMotionQuery\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Date\>\"", "\[Rule]", "#"}], "}"}]}], "]"}]}], "]"}], 
     "&"}], "/@", "dates2yr"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.709594635420227*^9, 3.709594654341104*^9}, {
  3.70992989150443*^9, 3.709929892176567*^9}, {3.7099300709438815`*^9, 
  3.709930072248147*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<2 yr MarRx.mx\>\"", ",", "flightMarRx2yr"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7097554731752467`*^9, 3.7097554787203827`*^9}, {
  3.7097555183355002`*^9, 3.709755520417927*^9}, {3.709814075218845*^9, 
  3.709814075396881*^9}, {3.7099300827282753`*^9, 3.7099300874052258`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"flightJupRx2yr", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"PlanetData", "[", 
      RowBox[{
       TemplateBox[{"\"Jupiter\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Planet\"", ",", "\"Jupiter\""}], "]"}],
         "\"Entity[\\\"Planet\\\", \\\"Jupiter\\\"]\"","\"planet\""},
        "Entity"], ",", 
       RowBox[{"EntityProperty", "[", 
        RowBox[{
        "\"\<Planet\>\"", ",", "\"\<RetrogradeApparentMotionQuery\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Date\>\"", "\[Rule]", "#"}], "}"}]}], "]"}]}], "]"}], 
     "&"}], "/@", "dates2yr"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7095946707884736`*^9, 3.709594701100684*^9}, {
  3.709929896506446*^9, 3.709929897252597*^9}, {3.7099301158730087`*^9, 
  3.709930116437123*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<2 yr JupRx.mx\>\"", ",", "flightJupRx2yr"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7097554947366643`*^9, 3.7097555262971325`*^9}, {
  3.7098140810590415`*^9, 3.709814081221074*^9}, {3.7099301106609507`*^9, 
  3.7099301284245577`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"flightSatRx2yr", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"PlanetData", "[", 
      RowBox[{
       TemplateBox[{"\"Saturn\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Planet\"", ",", "\"Saturn\""}], "]"}],
         "\"Entity[\\\"Planet\\\", \\\"Saturn\\\"]\"","\"planet\""},
        "Entity"], ",", 
       RowBox[{"EntityProperty", "[", 
        RowBox[{
        "\"\<Planet\>\"", ",", "\"\<RetrogradeApparentMotionQuery\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Date\>\"", "\[Rule]", "#"}], "}"}]}], "]"}]}], "]"}], 
     "&"}], "/@", "dates2yr"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.709594743319336*^9, 3.7095947684044733`*^9}, {
  3.709850483358243*^9, 3.7098504844054585`*^9}, {3.7099299023496323`*^9, 
  3.7099299031497955`*^9}, {3.709930132118309*^9, 3.709930132855461*^9}}],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","nodat",
   "\"Unable to download data. Some or all results may be missing.\"",2,137,
   44,15167562623507322558,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.709934615302032*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<2 yr SatRx.mx\>\"", ",", "flightSatRx2yr"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7097555353289833`*^9, 3.7097555466333017`*^9}, {
  3.709814086788215*^9, 3.7098140869712534`*^9}, {3.709930141692253*^9, 
  3.7099301468082933`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"flightUraRx2yr", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"PlanetData", "[", 
      RowBox[{
       TemplateBox[{"\"Uranus\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Planet\"", ",", "\"Uranus\""}], "]"}],
         "\"Entity[\\\"Planet\\\", \\\"Uranus\\\"]\"","\"planet\""},
        "Entity"], ",", 
       RowBox[{"EntityProperty", "[", 
        RowBox[{
        "\"\<Planet\>\"", ",", "\"\<RetrogradeApparentMotionQuery\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Date\>\"", "\[Rule]", "#"}], "}"}]}], "]"}]}], "]"}], 
     "&"}], "/@", "dates2yr"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7097552723269324`*^9, 3.7097552808726826`*^9}, {
  3.709929906838545*^9, 3.709929907462674*^9}, {3.709930151211187*^9, 
  3.70993015215738*^9}}],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","nodat",
   "\"Unable to download data. Some or all results may be missing.\"",2,139,
   45,15167562623507322558,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.709935878636668*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<2 yr UraRx.mx\>\"", ",", "flightUraRx2yr"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.709755554368883*^9, 3.709755563568768*^9}, {
  3.7098140967722616`*^9, 3.7098140969603014`*^9}, {3.709930164822953*^9, 
  3.7099301695579157`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"flightNepRx2yr", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"PlanetData", "[", 
      RowBox[{
       TemplateBox[{"\"Neptune\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Planet\"", ",", "\"Neptune\""}], "]"}],
         "\"Entity[\\\"Planet\\\", \\\"Neptune\\\"]\"","\"planet\""},
        "Entity"], ",", 
       RowBox[{"EntityProperty", "[", 
        RowBox[{
        "\"\<Planet\>\"", ",", "\"\<RetrogradeApparentMotionQuery\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Date\>\"", "\[Rule]", "#"}], "}"}]}], "]"}]}], "]"}], 
     "&"}], "/@", "dates2yr"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7099064333034267`*^9, 3.7099064582325773`*^9}, {
  3.7099299125757113`*^9, 3.709929913306859*^9}, {3.709930174288875*^9, 
  3.709930174972028*^9}}],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","nodat",
   "\"Unable to download data. Some or all results may be missing.\"",2,141,
   46,15167562623507322558,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7099362627056913`*^9}],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","nodat",
   "\"Unable to download data. Some or all results may be missing.\"",2,141,
   47,15167562623507322558,"Kernel 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.709936512446421*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<2 yr NepRx.mx\>\"", ",", "flightNepRx2yr"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.709906490065156*^9, 3.709906496632513*^9}, {
  3.7099301877926188`*^9, 3.7099301922585254`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"flightPluRx2yr", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"MinorPlanetData", "[", 
      RowBox[{
       TemplateBox[{"\"Pluto\"",RowBox[{"Entity", "[", 
           RowBox[{"\"MinorPlanet\"", ",", "\"Pluto\""}], "]"}],
         "\"Entity[\\\"MinorPlanet\\\", \\\"Pluto\\\"]\"","\"minor planet\""},
        "Entity"], ",", 
       RowBox[{"EntityProperty", "[", 
        RowBox[{
        "\"\<MinorPlanet\>\"", ",", "\"\<RetrogradeApparentMotionQuery\>\"", 
         ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Date\>\"", "\[Rule]", "#"}], "}"}]}], "]"}]}], "]"}], 
     "&"}], "/@", "dates2yr"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.709755301958617*^9, 3.7097553320627146`*^9}, {
  3.7099299199492073`*^9, 3.709929920553331*^9}, {3.709930197214532*^9, 
  3.709930197805653*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<2 yr PluRx.mx\>\"", ",", "flightPluRx2yr"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.709930238534927*^9, 3.7099302436519947`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fulldata2yr", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"flightMerRx2yr", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"flightVenRx2yr", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"flightMarRx2yr", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"flightJupRx2yr", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"flightSatRx2yr", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"flightUraRx2yr", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"flightNepRx2yr", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"flightPluRx2yr", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"Log", "[", 
        RowBox[{"years0", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "dates2yr", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7099303875331945`*^9, 3.709930439013652*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alldeletes2yr", "=", 
  RowBox[{"Union", "[", 
   RowBox[{
    RowBox[{"Position", "[", 
     RowBox[{"flightMerRx2yr", ",", "_Missing"}], "]"}], ",", 
    RowBox[{"Position", "[", 
     RowBox[{"flightVenRx2yr", ",", "_Missing"}], "]"}], ",", 
    RowBox[{"Position", "[", 
     RowBox[{"flightMarRx2yr", ",", "_Missing"}], "]"}], ",", 
    RowBox[{"Position", "[", 
     RowBox[{"flightJupRx2yr", ",", "_Missing"}], "]"}], ",", 
    RowBox[{"Position", "[", 
     RowBox[{"flightSatRx2yr", ",", "_Missing"}], "]"}], ",", 
    RowBox[{"Position", "[", 
     RowBox[{"flightUraRx2yr", ",", "_Missing"}], "]"}], ",", 
    RowBox[{"Position", "[", 
     RowBox[{"flightNepRx2yr", ",", "_Missing"}], "]"}], ",", 
    RowBox[{"Position", "[", 
     RowBox[{"flightPluRx2yr", ",", "_Missing"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.709930484608914*^9, 3.7099305443760552`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "51", "}"}], ",", 
   RowBox[{"{", "54", "}"}], ",", 
   RowBox[{"{", "391", "}"}], ",", 
   RowBox[{"{", "663", "}"}], ",", 
   RowBox[{"{", "664", "}"}], ",", 
   RowBox[{"{", "906", "}"}], ",", 
   RowBox[{"{", "1058", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7099378875157566`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"alldeletes2yr", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "51", "}"}], ",", 
     RowBox[{"{", "54", "}"}], ",", 
     RowBox[{"{", "391", "}"}], ",", 
     RowBox[{"{", "663", "}"}], ",", 
     RowBox[{"{", "664", "}"}], ",", 
     RowBox[{"{", "906", "}"}], ",", 
     RowBox[{"{", "1058", "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7099475372698135`*^9, 3.709947550095437*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "dates2yr", "]"}]], "Input",
 CellChangeTimes->{{3.709930581570612*^9, 3.709930587391794*^9}}],

Cell[BoxData["1096"], "Output",
 CellChangeTimes->{3.709937887546764*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Directory", "[", "]"}]], "Input",
 CellChangeTimes->{{3.710006391781026*^9, 3.7100064010857105`*^9}}],

Cell[BoxData["\<\"E:\\\\Documents\"\>"], "Output",
 CellChangeTimes->{{3.7100063971704216`*^9, 3.7100064018602395`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fulldata2yr", "=", 
  RowBox[{"Import", "[", "\"\<2 yr fulldata.mx\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.70994762753128*^9, 3.7099476453010263`*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"prograde\"\>", ",", "\<\"prograde\"\>", 
             ",", "\<\"prograde\"\>", ",", "\<\"prograde\"\>", 
             ",", "\<\"prograde\"\>", ",", "\<\"prograde\"\>", 
             ",", "\<\"prograde\"\>", ",", "\<\"prograde\"\>", ",", 
             RowBox[{"-", "5.037801859364884`"}]}], "}"}], ",", 
           TemplateBox[{"1094"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
              FrameStyle -> None, RoundingRadius -> 7]& )], ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\"prograde\"\>", ",", "\<\"prograde\"\>", 
             ",", "\<\"prograde\"\>", ",", "\<\"retrograde\"\>", 
             ",", "\<\"prograde\"\>", ",", "\<\"retrograde\"\>", 
             ",", "\<\"prograde\"\>", ",", "\<\"prograde\"\>", ",", 
             RowBox[{"-", "4.8515739554471775`"}]}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{109., {5., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{90., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 2, 26187412427349200473, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{104., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 2, 26187412427349200473, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{78., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 2, 26187412427349200473, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{135., {1., 15.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[2]]], "Output",
 CellChangeTimes->{3.709947645888036*^9, 3.709955453464789*^9, 
  3.709960910364189*^9, 3.709982535318269*^9, 3.71000645019014*^9, 
  3.7100684253475885`*^9, 3.7100758682436686`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fulldata", "=", 
   RowBox[{
   "Import", "[", "\"\<22 yrs flight cancellation full data.mx\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.709649761822526*^9, 3.70964978770383*^9}, {
  3.709947763613124*^9, 3.7099477682360687`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"alldeletes", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "59", "}"}], ",", 
     RowBox[{"{", "227", "}"}], ",", 
     RowBox[{"{", "626", "}"}], ",", 
     RowBox[{"{", "630", "}"}], ",", 
     RowBox[{"{", "1036", "}"}], ",", 
     RowBox[{"{", "1205", "}"}], ",", 
     RowBox[{"{", "1250", "}"}], ",", 
     RowBox[{"{", "1746", "}"}], ",", 
     RowBox[{"{", "1747", "}"}], ",", 
     RowBox[{"{", "1828", "}"}], ",", 
     RowBox[{"{", "2081", "}"}], ",", 
     RowBox[{"{", "2108", "}"}], ",", 
     RowBox[{"{", "2193", "}"}], ",", 
     RowBox[{"{", "2194", "}"}], ",", 
     RowBox[{"{", "2197", "}"}], ",", 
     RowBox[{"{", "2209", "}"}], ",", 
     RowBox[{"{", "2552", "}"}], ",", 
     RowBox[{"{", "2896", "}"}], ",", 
     RowBox[{"{", "3013", "}"}], ",", 
     RowBox[{"{", "3016", "}"}], ",", 
     RowBox[{"{", "3638", "}"}], ",", 
     RowBox[{"{", "3726", "}"}], ",", 
     RowBox[{"{", "3854", "}"}], ",", 
     RowBox[{"{", "3921", "}"}], ",", 
     RowBox[{"{", "3948", "}"}], ",", 
     RowBox[{"{", "4262", "}"}], ",", 
     RowBox[{"{", "4300", "}"}], ",", 
     RowBox[{"{", "4992", "}"}], ",", 
     RowBox[{"{", "5094", "}"}], ",", 
     RowBox[{"{", "5095", "}"}], ",", 
     RowBox[{"{", "5096", "}"}], ",", 
     RowBox[{"{", "5097", "}"}], ",", 
     RowBox[{"{", "5225", "}"}], ",", 
     RowBox[{"{", "5376", "}"}], ",", 
     RowBox[{"{", "5603", "}"}], ",", 
     RowBox[{"{", "5605", "}"}], ",", 
     RowBox[{"{", "5606", "}"}], ",", 
     RowBox[{"{", "5627", "}"}], ",", 
     RowBox[{"{", "5849", "}"}], ",", 
     RowBox[{"{", "6226", "}"}], ",", 
     RowBox[{"{", "6994", "}"}], ",", 
     RowBox[{"{", "7379", "}"}], ",", 
     RowBox[{"{", "7418", "}"}], ",", 
     RowBox[{"{", "7458", "}"}], ",", 
     RowBox[{"{", "7694", "}"}], ",", 
     RowBox[{"{", "7696", "}"}], ",", 
     RowBox[{"{", "7805", "}"}], ",", 
     RowBox[{"{", "7806", "}"}], ",", 
     RowBox[{"{", "7808", "}"}], ",", 
     RowBox[{"{", "7809", "}"}], ",", 
     RowBox[{"{", "7877", "}"}], ",", 
     RowBox[{"{", "7972", "}"}], ",", 
     RowBox[{"{", "8037", "}"}], ",", 
     RowBox[{"{", "8085", "}"}], ",", 
     RowBox[{"{", "8086", "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7099475758847136`*^9, 3.7099475827271147`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"testset", "=", 
   RowBox[{"Delete", "[", 
    RowBox[{"fulldata2yr", ",", "alldeletes2yr"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7099305569606123`*^9, 3.7099305682929134`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "fulldata", "]"}]], "Input",
 CellChangeTimes->{{3.709947702558633*^9, 3.7099477180408*^9}}],

Cell[BoxData["8128"], "Output",
 CellChangeTimes->{{3.7099477119065437`*^9, 3.709947718846966*^9}, 
   3.709947805710737*^9, 3.7099554581947584`*^9, 3.7099609319026012`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingset", "=", 
   RowBox[{"Delete", "[", 
    RowBox[{"fulldata", ",", "alldeletes"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.709928395441517*^9, 3.7099284343664236`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "trainingset", "]"}]], "Input",
 CellChangeTimes->{{3.7100703856325035`*^9, 3.710070391906757*^9}}],

Cell[BoxData["8073"], "Output",
 CellChangeTimes->{3.7100703927699304`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"Standardize", "[", 
   RowBox[{"testset", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "9"}], "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7100691297034082`*^9, 3.710069146793825*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.567], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.567], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-4., 0}, {-3.5, 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{42.7824459567654, 76.3014046531343}, {
          157.36906050615673`, 159.66476806739308`}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-3., 0}, {-2.5, 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{108.12036334950312`, 141.63932204587198`}, {
          157.36906050615673`, 159.66476806739308`}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-2.5, 0}, {-2., 6}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{140.78932204587196`, 174.3082807422408}, {
          150.14052269997492`, 159.66476806739308`}}],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-2., 0}, {-1.5, 31}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{173.45828074224082`, 206.97723943860967`}, {
          113.99783366906591`, 159.66476806739308`}}],
        StatusArea[#, 31]& ,
        TagBoxNote->"31"],
       StyleBox["31", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[31, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-1.5, 0}, {-1., 104}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{206.12723943860968`, 239.6461981349785}, {
          8.461181698811686, 159.66476806739308`}}],
        StatusArea[#, 104]& ,
        TagBoxNote->"104"],
       StyleBox["104", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[104, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-1., 0}, {-0.5, 230}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{238.7961981349785, 
          272.3151568313474}, {-173.6979710169697, 159.66476806739308`}}],
        StatusArea[#, 230]& ,
        TagBoxNote->"230"],
       StyleBox["230", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[230, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-0.5, 0}, {0., 226}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{271.4651568313474, 
          304.98411552771626`}, {-167.91514077202424`, 159.66476806739308`}}],
        StatusArea[#, 226]& ,
        TagBoxNote->"226"],
       StyleBox["226", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[226, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {0.5, 206}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{304.13411552771623`, 
          337.6530742240851}, {-139.00098954729702`, 159.66476806739308`}}],
        StatusArea[#, 206]& ,
        TagBoxNote->"206"],
       StyleBox["206", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[206, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.5, 0}, {1., 116}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{336.8030742240851, 
          370.322032920454}, {-8.887309036024647, 159.66476806739308`}}],
        StatusArea[#, 116]& ,
        TagBoxNote->"116"],
       StyleBox["116", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[116, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1., 0}, {1.5, 88}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{369.47203292045396`, 402.9909916168228}, {
          31.592502678593405`, 159.66476806739308`}}],
        StatusArea[#, 88]& ,
        TagBoxNote->"88"],
       StyleBox["88", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[88, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.5, 0}, {2., 39}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{402.14099161682276`, 435.6599503131917}, {
          102.43217317917505`, 159.66476806739308`}}],
        StatusArea[#, 39]& ,
        TagBoxNote->"39"],
       StyleBox["39", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[39, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2., 0}, {2.5, 21}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{434.8099503131917, 468.3289090095605}, {
          128.45490928142954`, 159.66476806739308`}}],
        StatusArea[#, 21]& ,
        TagBoxNote->"21"],
       StyleBox["21", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[21, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2.5, 0}, {3., 9}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{467.4789090095605, 500.99786770592937`}, {
          145.80340001626584`, 159.66476806739308`}}],
        StatusArea[#, 9]& ,
        TagBoxNote->"9"],
       StyleBox["9", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[9, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3., 0}, {3.5, 5}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{500.14786770592934`, 533.6668264022983}, {
          151.58623026121128`, 159.66476806739308`}}],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3.5, 0}, {4., 3}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{532.8168264022981, 566.3357850986671}, {
          154.477645383684, 159.66476806739308`}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4., 0}, {4.5, 3}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{565.4857850986671, 599.0047437950361}, {
          154.477645383684, 159.66476806739308`}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-4.17, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-4., 4.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7100691352905245`*^9, 3.7100691475959845`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"trainingset", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"1", ";;", "8"}]}], "]"}], "]"}], "\[Rule]", 
     RowBox[{"Standardize", "[", 
      RowBox[{"trainingset", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "9"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<NearestNeighbors\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7099283795432873`*^9, 3.709928384129219*^9}, {
  3.709930636731817*^9, 3.7099306458736744`*^9}, {3.709938006930014*^9, 
  3.7099380446746817`*^9}, {3.709938155361167*^9, 3.709938175648289*^9}, {
  3.710062095665888*^9, 3.7100621026628623`*^9}, {3.7100692406785955`*^9, 
  3.710069247161892*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{}, {{}, {
                  PointSize[0.125], 
                  GrayLevel[0.55], 
                  
                  PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                    4, 4.}}]}, {
                  GrayLevel[0.7], 
                  AbsoluteThickness[1.5], 
                  
                  BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                   5, 4}}]}}, {}}, Axes -> {False, False}, 
               AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
               BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {All, All}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of features: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["8", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{}, {{}, {
                  PointSize[0.125], 
                  GrayLevel[0.55], 
                  
                  PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                    4, 4.}}]}, {
                  GrayLevel[0.7], 
                  AbsoluteThickness[1.5], 
                  
                  BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                   5, 4}}]}}, {}}, Axes -> {False, False}, 
               AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
               BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {All, All}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of features: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["8", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["8073", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.709937888835026*^9, 3.7099380252587385`*^9, 3.7099380594136763`*^9, {
   3.709938160539219*^9, 3.7099381891540337`*^9}, 3.7100619393544674`*^9, 
   3.7100621153924217`*^9, 3.7100623685819225`*^9, 3.710069259619382*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "=", 
  RowBox[{"PredictorMeasurements", "[", 
   RowBox[{"p", ",", 
    RowBox[{
     RowBox[{"testset", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"1", ";;", "8"}]}], "]"}], "]"}], "\[Rule]", 
     RowBox[{"Standardize", "[", 
      RowBox[{"testset", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "9"}], "]"}], "]"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7099306481711426`*^9, 3.7099306813918896`*^9}, {
  3.7099380700258317`*^9, 3.7099380853819513`*^9}, {3.7099381451951017`*^9, 
  3.709938150275134*^9}, {3.709938237539863*^9, 3.7099382390641713`*^9}, {
  3.7100692526239843`*^9, 3.7100692590752735`*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorMeasurementsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  GrayLevel[0.6], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  Dashing[{Small, Small}], 
                  
                  LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                   11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                   GrayLevel[0.4], 
                   PointSize[0.09], 
                   AbsoluteThickness[1.6], 
                   
                   PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                    2.227816320451859, 2.584653237430766}, {3.043099335090081,
                     4.798822972025658}, {3.5728355469237116`, 
                    5.9507424155697155`}, {4.158566334344331, 
                    5.2097676165465385`}, {4.824808988689111, 
                    7.23346088027902}, {6.88649660338492, 
                    5.297021421229134}, {7.819072150835878, 
                    6.533166043611269}, {8.437306856915493, 
                    8.81724006216815}, {8.604907881861761, 
                    11.302704526196452`}}]}, {}}, {}}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1089", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  GrayLevel[0.6], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  Dashing[{Small, Small}], 
                  
                  LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                   11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                   GrayLevel[0.4], 
                   PointSize[0.09], 
                   AbsoluteThickness[1.6], 
                   
                   PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                    2.227816320451859, 2.584653237430766}, {3.043099335090081,
                     4.798822972025658}, {3.5728355469237116`, 
                    5.9507424155697155`}, {4.158566334344331, 
                    5.2097676165465385`}, {4.824808988689111, 
                    7.23346088027902}, {6.88649660338492, 
                    5.297021421229134}, {7.819072150835878, 
                    6.533166043611269}, {8.437306856915493, 
                    8.81724006216815}, {8.604907881861761, 
                    11.302704526196452`}}]}, {}}, {}}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1089", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"StandardDeviation: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["1.0386402210943702`", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorMeasurementsObject[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7099378892981195`*^9, 3.7099380596187177`*^9, 3.709938096578226*^9, {
   3.709938210398347*^9, 3.70993823999936*^9}, 3.7100619399239054`*^9, 
   3.710062116021097*^9, 3.710062211480158*^9, 3.7100623693167577`*^9, 
   3.7100692602335043`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ComparisonPlot\>\"", "]"}]], "Input"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.004583333333333334], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1: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
Ke4/DqC9cP51UU5/HPZ/sg3hgw==
          "]]}, {}}}, {}, {}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           GrayLevel[0.5], 
           Dashing[{Small, Small}], 
           Thickness[0.002]], 
          LineBox[CompressedData["
1:eJxFxXswE3AcAPANsxmbR5JTdulWEs3RnUMOvTzOtTMmcVOzmi7uOPpnp0hm
t7z6ozy3CzujNJpXmeYx5hxJs5Iyzh8s1yZbt26Xck71x76/Pz738eMUpHDt
MBjM5X/+P3xTkBfT56qynV9t+aqRoan919nsTvSj/Yi0B2I0R2SKVgvQxIV0
j/hMNOvsqWG6PXrfXeN4LY0MH5zkiCNWXeAabkvigXvO8NoVEuvTMSKMSZq+
xewmwPxQ/1otHQ8vHfkgc17EwQ5pvTQa2wF+UhY2R8fZw5aXjtlBtVi4f6HU
jUDDwOIyZkKTbG/cdiE3hiNS/YGdQorlTfgd+JxdotnN0woHF5T+yqBZ4HEB
PifaaoLZ4ZGTI94GWKBwEZxp24AXheTMKO4KbPGJauwq18ANisEAXv0ArMh9
36cuV8bYLp7x9NKsaeE84WHKi45V2HTI0EMP1MPtLdRNTasB9vYJj8iqNMOu
weMlUpkFZuQ+DmxhW+GfrdpN3+Qd+KNJlS8h7cJ7kkQac3QPVvu3lkynYmJt
n6gufKuXY+Hhrd++cQH28NZVXXpXpQN8nic8Td3AwbN1Rqf1DDxsHu14Jxki
wJf0Xg3SUCKsGmHujnU6wzqJMW4FS4KpFWHNkcVkmHRHpxUvu6KrjqcSm93g
oGVF7LdUd1hM4/nF23nALAFWycChKatVTBYBLal8Kiwko5/pJ7fFPugBEenN
j1D0nGN7iugGuiYr6Ls0B00ffCWQ30Zrs2cUUwXozyPbFPNd9EZR+NaFOrR0
dqKC3ojOOZpEyRChDfNZjPw2tPkkf6ipG91734XRLkcXLdUbe/rRVv5zX7UC
/VoXMjSvRPNClMlfxtCRDy8a1yfQu2vz/O0p9F/DyD+p
           "]]}, 
         Annotation[#, "Charting`Private`Tag$226698#1"]& ]}}, {}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, 
     PlotRange -> {{-3.961546921917627, 
      4.692312473896715}, {-3.961546921917627, 4.692312473896715}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"actual value\"", TraditionalForm], None}, {
        FormBox["\"predicted value\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-3.961546921917627, 
      4.692312473896715}, {-3.961546921917627, 4.692312473896715}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"predictions\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"perfect prediction line\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}], 
                    Thickness[0.018000000000000002`]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}], 
                    Thickness[0.018000000000000002`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.70993788940014*^9, 3.709938098578633*^9, 
  3.7099382416136885`*^9, 3.710061940063315*^9, 3.710062116148978*^9, 
  3.710062369477849*^9, 3.7100692617558103`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<StandardDeviation\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.709930734296636*^9, 3.7099307352898397`*^9}}],

Cell[BoxData["1.0386402210943702`"], "Output",
 CellChangeTimes->{3.7100621161915956`*^9, 3.7100622203328266`*^9, 
  3.7100623844764566`*^9, 3.7100692638842344`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ResidualPlot\>\"", "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
IB8mHRjZfkPyLfho4Ikvo7aD4ImtoSHGN2g/tO7oK16tqO+Qf7usHrnUTtkF
+dkJbj1GN8ta8J0NjXFSPrS//Xg+A+newDFo776FpU+Mwiy0VxV8RHT3jzqI
e0tnvBkVJSzAmbTrW22KaSDEK6eyGvdOLEF9Tw6Ndr3NdZQP38UeTPWpH2z6
KKrGJRLtBz+NN0XVx4QnDeVJKBUz3GagfBptVuCH8zWw/jT3a2D1wtfBlzlI
yqRcXoMFb4bu47vTDPUfG23jPbMYgfWlcDFN70hCD8T7k4MHkvRb0N977M9O
CezdhPET39nlIqOF9stvPuSY1wqbhfbufkn/lH55APvxmnrJbdp/rMMaGonp
bwsYnFsfaDmPL89BvsznhFf79zOz4Cbsg6G9gx1QfrQ0umPyRDOMD6u6Bb/i
ID6Mz7Rf/bV3njMQt7ziimU/2QLWWdXGXMKWwPt5vTXn5FJA4//83WKJlSoh
tOc0F6kSO0sKDudSD73XQwwWjzYrritH7m4cFlpQJgeTH6SwliJE+WI8Djly
MwbUH4ZcPxnq1Fl4v4CnEwvnnwzBeG060FlfjRwHu7Ny2vctVEL59iCf9UmG
VLBK4B2Xg7EjYKv2s9p8+NVQn8aSPSDuTTdYcugCVwNeK/RvwGDisfD0MPSv
iONheFfwKszHBtW5V6JbKN8eP36RT0YYjf/eLzeO29UXQj4N7///z9/+a43L
V/xZ/tXP/9t/+880nAfyL/yr+/dXvy/u/Iz/qYbzOv5D/LP19kf9q9/vb/97
jct3/u3/DP+nzRcun/K3/xr/2fOFy///7T/Hf3R+cec7/Cv/tvzv7d/P2v93
G86D+F/qv8fzb/9KQz7wf4lx+5n/Xf6j8/NHn4873+P/1bh863+r/+p855+9
Xv7d+Vo4T+Hf5F+dn/7Vhr+P/x/i387vr37+n+2fPR93fsH/VP/e+fhP68+f
7V+df/t3+7fjjzs/41+Nz++N/9Y/m+/flv9tf3/vfP62Pdx5Cf+t/tl8/tnt
/VH/1c/7Wfu/N1/22/bgPIx/4Z+N78/q/9n+1c//s407DwTn35vf/J+WD/29
+d4/O9//Z/f3f9v3h//0/PR/mn/7fnA+x7/wz9r7Wf1f7d/b3189P3/Uvzo/
+p/u3873X13/jz7v351//Zl/mx/G7Sf+V+V/9j5/NL/+R9/nt/3/mf/o/P02
/qvzvX/Uv52PP7u9n/nPbu/P9q+enz+a///V/flv69+/+3vKn72f+6/e//ir
vyf8Xv/e/cb/2/cr/7f7Z/mx377/r843/7v9s/f/o+vp9z7/z27/b//P8q/e
b/zvNu58hf9b/6eN98/6C+dF/EX+vfm/Pztf+Nv+/Nn5oZ+N58/K/9X+q9//
b//tv9K/Ot/9q/Pbv/r94LyO/xL/6vH6q/1n59N+b372V+f/fq9/7/r5Wf3f
xn87Pj8bv9+2hzt/4l/5Z/mw35b/1eP9Z/tn4/NX+/fmo39WHvJh1oNTiaHo
fsAP2OE3Ro/Q/X86jrd/pJxC9xVa1948Pe80hO5bLHDdmJtagLgppTtrXMYm
xL8q0lq9KtsF5/M+l1lt42IlB8ub5H24y4biwu+e3S5YHYD6Fg2TtGHD6Dzg
kNn0lobD6D5CXWatXtUxdB7zsZkADQ+XeXRecDh9+Aj3MphRMI1h6WYKlCeX
7JNukyqAOEdT391zOlPgQyInSp49H4XyqXQe6hzNyGIzhcNq3c1ovPwzv6RG
dUL9HdeclBZTIjhv9szqgQfsjwjBTix3l5SyGuF80w0tHh3xmmE4/9Q1/h2Z
LgadD6wTVaagTLcE7Y8FsB+ctBuB5596MyeQeKYVzMJuH8nA8Q2d91odRL/b
eQKeV5s01PXxzSj4uO/6LNX4ILggzU5/Zi86H1l1ULx83uQ72HQsXUpFthza
V+JkiDToRP1fK9Q7/cFzFBwzMmMvFTID7tag7ntKWgkWtMRf3DicDT778KuB
ZXoj2EOZ0Fi+sxWer7Ce7HV/uws930v42dUoVN7qgu2lMs0NKK/NyXze6MAa
OHjwK4W4VRXY73r6wx832qF+/2ybq4EROl+bJEK9OPt8M3hPqfnVs6+m0Xnc
jYYSRl57YH69Vu0Nn0ZSgQUClixHLNF6cGN/tWHPRgye176xh2QlEJ5PsLtx
9OhaIXi285b7lNQY2F2MWEZqcwgcqXN8IXmiBay9c30/4Q46j1pTR3v2cEMy
eJDVYIiwswD83k/oSqYOer9H28levnzzaH2WvHnLlDaAxk9D5RLp7WR0nrbt
9cdWFf7QnlddmvECUzPqv7/lTE8cmh/RJl7G/n2DcL4zXgqLmtyIPnj92qUK
9dP10D5hnADFTh96Pzbm3t59z7LAzU84PMh609F6aL7ZLCSRi9bTKwb5EO0a
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
7vBTHU2q/wEOu+kx
    "], {{{}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{1090, 1}], LineBox[{1091, 2}], LineBox[{1092, 3}], 
       LineBox[{1094, 5}], LineBox[{1100, 11}], LineBox[{1101, 12}], 
       LineBox[{1102, 13}], LineBox[{1105, 16}], LineBox[{1108, 19}], 
       LineBox[{1109, 20}], LineBox[{1110, 21}], LineBox[{1115, 26}], 
       LineBox[{1116, 27}], LineBox[{1118, 29}], LineBox[{1119, 30}], 
       LineBox[{1120, 31}], LineBox[{1126, 37}], LineBox[{1127, 38}], 
       LineBox[{1128, 39}], LineBox[{1129, 40}], LineBox[{1130, 41}], 
       LineBox[{1131, 42}], LineBox[{1132, 43}], LineBox[{1134, 45}], 
       LineBox[{1135, 46}], LineBox[{1139, 50}], LineBox[{1147, 58}], 
       LineBox[{1148, 59}], LineBox[{1149, 60}], LineBox[{1150, 61}], 
       LineBox[{1151, 62}], LineBox[{1152, 63}], LineBox[{1153, 64}], 
       LineBox[{1154, 65}], LineBox[{1159, 70}], LineBox[{1160, 71}], 
       LineBox[{1161, 72}], LineBox[{1162, 73}], LineBox[{1163, 74}], 
       LineBox[{1165, 76}], LineBox[{1166, 77}], LineBox[{1167, 78}], 
       LineBox[{1168, 79}], LineBox[{1171, 82}], LineBox[{1172, 83}], 
       LineBox[{1175, 86}], LineBox[{1177, 88}], LineBox[{1181, 92}], 
       LineBox[{1185, 96}], LineBox[{1192, 103}], LineBox[{1201, 112}], 
       LineBox[{1206, 117}], LineBox[{1208, 119}], LineBox[{1209, 120}], 
       LineBox[{1210, 121}], LineBox[{1211, 122}], LineBox[{1212, 123}], 
       LineBox[{1230, 141}], LineBox[{1233, 144}], LineBox[{1235, 146}], 
       LineBox[{1236, 147}], LineBox[{1237, 148}], LineBox[{1239, 150}], 
       LineBox[{1240, 151}], LineBox[{1241, 152}], LineBox[{1245, 156}], 
       LineBox[{1246, 157}], LineBox[{1247, 158}], LineBox[{1252, 163}], 
       LineBox[{1259, 170}], LineBox[{1260, 171}], LineBox[{1262, 173}], 
       LineBox[{1265, 176}], LineBox[{1266, 177}], LineBox[{1267, 178}], 
       LineBox[{1268, 179}], LineBox[{1272, 183}], LineBox[{1273, 184}], 
       LineBox[{1284, 195}], LineBox[{1293, 204}], LineBox[{1294, 205}], 
       LineBox[{1300, 211}], LineBox[{1301, 212}], LineBox[{1305, 216}], 
       LineBox[{1306, 217}], LineBox[{1307, 218}], LineBox[{1308, 219}], 
       LineBox[{1310, 221}], LineBox[{1311, 222}], LineBox[{1312, 223}], 
       LineBox[{1317, 228}], LineBox[{1318, 229}], LineBox[{1319, 230}], 
       LineBox[{1325, 236}], LineBox[{1326, 237}], LineBox[{1328, 239}], 
       LineBox[{1329, 240}], LineBox[{1330, 241}], LineBox[{1335, 246}], 
       LineBox[{1336, 247}], LineBox[{1337, 248}], LineBox[{1338, 249}], 
       LineBox[{1339, 250}], LineBox[{1340, 251}], LineBox[{1341, 252}], 
       LineBox[{1342, 253}], LineBox[{1343, 254}], LineBox[{1344, 255}], 
       LineBox[{1345, 256}], LineBox[{1346, 257}], LineBox[{1347, 258}], 
       LineBox[{1348, 259}], LineBox[{1349, 260}], LineBox[{1350, 261}], 
       LineBox[{1351, 262}], LineBox[{1352, 263}], LineBox[{1353, 264}], 
       LineBox[{1355, 266}], LineBox[{1356, 267}], LineBox[{1357, 268}], 
       LineBox[{1358, 269}], LineBox[{1359, 270}], LineBox[{1360, 271}], 
       LineBox[{1361, 272}], LineBox[{1362, 273}], LineBox[{1363, 274}], 
       LineBox[{1364, 275}], LineBox[{1365, 276}], LineBox[{1366, 277}], 
       LineBox[{1367, 278}], LineBox[{1368, 279}], LineBox[{1369, 280}], 
       LineBox[{1370, 281}], LineBox[{1371, 282}], LineBox[{1372, 283}], 
       LineBox[{1373, 284}], LineBox[{1375, 286}], LineBox[{1376, 287}], 
       LineBox[{1377, 288}], LineBox[{1378, 289}], LineBox[{1379, 290}], 
       LineBox[{1380, 291}], LineBox[{1381, 292}], LineBox[{1382, 293}], 
       LineBox[{1383, 294}], LineBox[{1386, 297}], LineBox[{1387, 298}], 
       LineBox[{1388, 299}], LineBox[{1389, 300}], LineBox[{1390, 301}], 
       LineBox[{1391, 302}], LineBox[{1392, 303}], LineBox[{1393, 304}], 
       LineBox[{1394, 305}], LineBox[{1395, 306}], LineBox[{1396, 307}], 
       LineBox[{1399, 310}], LineBox[{1400, 311}], LineBox[{1401, 312}], 
       LineBox[{1402, 313}], LineBox[{1403, 314}], LineBox[{1404, 315}], 
       LineBox[{1405, 316}], LineBox[{1406, 317}], LineBox[{1407, 318}], 
       LineBox[{1408, 319}], LineBox[{1409, 320}], LineBox[{1410, 321}], 
       LineBox[{1411, 322}], LineBox[{1412, 323}], LineBox[{1413, 324}], 
       LineBox[{1414, 325}], LineBox[{1415, 326}], LineBox[{1418, 329}], 
       LineBox[{1419, 330}], LineBox[{1420, 331}], LineBox[{1421, 332}], 
       LineBox[{1422, 333}], LineBox[{1423, 334}], LineBox[{1424, 335}], 
       LineBox[{1425, 336}], LineBox[{1426, 337}], LineBox[{1427, 338}], 
       LineBox[{1428, 339}], LineBox[{1429, 340}], LineBox[{1431, 342}], 
       LineBox[{1432, 343}], LineBox[{1433, 344}], LineBox[{1434, 345}], 
       LineBox[{1435, 346}], LineBox[{1436, 347}], LineBox[{1437, 348}], 
       LineBox[{1438, 349}], LineBox[{1439, 350}], LineBox[{1440, 351}], 
       LineBox[{1441, 352}], LineBox[{1442, 353}], LineBox[{1443, 354}], 
       LineBox[{1444, 355}], LineBox[{1449, 360}], LineBox[{1450, 361}], 
       LineBox[{1451, 362}], LineBox[{1452, 363}], LineBox[{1459, 370}], 
       LineBox[{1463, 374}], LineBox[{1464, 375}], LineBox[{1465, 376}], 
       LineBox[{1466, 377}], LineBox[{1467, 378}], LineBox[{1468, 379}], 
       LineBox[{1469, 380}], LineBox[{1471, 382}], LineBox[{1472, 383}], 
       LineBox[{1473, 384}], LineBox[{1474, 385}], LineBox[{1475, 386}], 
       LineBox[{1476, 387}], LineBox[{1477, 388}], LineBox[{1478, 389}], 
       LineBox[{1479, 390}], LineBox[{1480, 391}], LineBox[{1481, 392}], 
       LineBox[{1482, 393}], LineBox[{1483, 394}], LineBox[{1484, 395}], 
       LineBox[{1485, 396}], LineBox[{1486, 397}], LineBox[{1487, 398}], 
       LineBox[{1488, 399}], LineBox[{1491, 402}], LineBox[{1492, 403}], 
       LineBox[{1493, 404}], LineBox[{1494, 405}], LineBox[{1495, 406}], 
       LineBox[{1496, 407}], LineBox[{1498, 409}], LineBox[{1499, 410}], 
       LineBox[{1500, 411}], LineBox[{1501, 412}], LineBox[{1502, 413}], 
       LineBox[{1503, 414}], LineBox[{1506, 417}], LineBox[{1507, 418}], 
       LineBox[{1508, 419}], LineBox[{1509, 420}], LineBox[{1510, 421}], 
       LineBox[{1511, 422}], LineBox[{1512, 423}], LineBox[{1515, 426}], 
       LineBox[{1516, 427}], LineBox[{1517, 428}], LineBox[{1518, 429}], 
       LineBox[{1519, 430}], LineBox[{1520, 431}], LineBox[{1521, 432}], 
       LineBox[{1522, 433}], LineBox[{1523, 434}], LineBox[{1524, 435}], 
       LineBox[{1525, 436}], LineBox[{1526, 437}], LineBox[{1527, 438}], 
       LineBox[{1528, 439}], LineBox[{1529, 440}], LineBox[{1532, 443}], 
       LineBox[{1534, 445}], LineBox[{1536, 447}], LineBox[{1537, 448}], 
       LineBox[{1538, 449}], LineBox[{1539, 450}], LineBox[{1540, 451}], 
       LineBox[{1541, 452}], LineBox[{1542, 453}], LineBox[{1543, 454}], 
       LineBox[{1544, 455}], LineBox[{1545, 456}], LineBox[{1546, 457}], 
       LineBox[{1547, 458}], LineBox[{1548, 459}], LineBox[{1549, 460}], 
       LineBox[{1550, 461}], LineBox[{1551, 462}], LineBox[{1552, 463}], 
       LineBox[{1553, 464}], LineBox[{1554, 465}], LineBox[{1555, 466}], 
       LineBox[{1556, 467}], LineBox[{1557, 468}], LineBox[{1558, 469}], 
       LineBox[{1559, 470}], LineBox[{1560, 471}], LineBox[{1561, 472}], 
       LineBox[{1562, 473}], LineBox[{1563, 474}], LineBox[{1564, 475}], 
       LineBox[{1565, 476}], LineBox[{1566, 477}], LineBox[{1567, 478}], 
       LineBox[{1571, 482}], LineBox[{1572, 483}], LineBox[{1573, 484}], 
       LineBox[{1574, 485}], LineBox[{1575, 486}], LineBox[{1576, 487}], 
       LineBox[{1577, 488}], LineBox[{1578, 489}], LineBox[{1579, 490}], 
       LineBox[{1580, 491}], LineBox[{1581, 492}], LineBox[{1582, 493}], 
       LineBox[{1583, 494}], LineBox[{1584, 495}], LineBox[{1585, 496}], 
       LineBox[{1590, 501}], LineBox[{1591, 502}], LineBox[{1592, 503}], 
       LineBox[{1593, 504}], LineBox[{1594, 505}], LineBox[{1595, 506}], 
       LineBox[{1596, 507}], LineBox[{1599, 510}], LineBox[{1600, 511}], 
       LineBox[{1601, 512}], LineBox[{1602, 513}], LineBox[{1603, 514}], 
       LineBox[{1604, 515}], LineBox[{1607, 518}], LineBox[{1608, 519}], 
       LineBox[{1609, 520}], LineBox[{1611, 522}], LineBox[{1612, 523}], 
       LineBox[{1614, 525}], LineBox[{1615, 526}], LineBox[{1619, 530}], 
       LineBox[{1620, 531}], LineBox[{1622, 533}], LineBox[{1624, 535}], 
       LineBox[{1625, 536}], LineBox[{1626, 537}], LineBox[{1627, 538}], 
       LineBox[{1631, 542}], LineBox[{1632, 543}], LineBox[{1633, 544}], 
       LineBox[{1635, 546}], LineBox[{1638, 549}], LineBox[{1640, 551}], 
       LineBox[{1641, 552}], LineBox[{1642, 553}], LineBox[{1646, 557}], 
       LineBox[{1647, 558}], LineBox[{1648, 559}], LineBox[{1651, 562}], 
       LineBox[{1652, 563}], LineBox[{1654, 565}], LineBox[{1655, 566}], 
       LineBox[{1657, 568}], LineBox[{1659, 570}], LineBox[{1660, 571}], 
       LineBox[{1661, 572}], LineBox[{1662, 573}], LineBox[{1663, 574}], 
       LineBox[{1665, 576}], LineBox[{1666, 577}], LineBox[{1667, 578}], 
       LineBox[{1668, 579}], LineBox[{1669, 580}], LineBox[{1670, 581}], 
       LineBox[{1677, 588}], LineBox[{1678, 589}], LineBox[{1679, 590}], 
       LineBox[{1680, 591}], LineBox[{1682, 593}], LineBox[{1683, 594}], 
       LineBox[{1684, 595}], LineBox[{1687, 598}], LineBox[{1688, 599}], 
       LineBox[{1689, 600}], LineBox[{1691, 602}], LineBox[{1693, 604}], 
       LineBox[{1695, 606}], LineBox[{1696, 607}], LineBox[{1697, 608}], 
       LineBox[{1698, 609}], LineBox[{1699, 610}], LineBox[{1700, 611}], 
       LineBox[{1702, 613}], LineBox[{1703, 614}], LineBox[{1704, 615}], 
       LineBox[{1705, 616}], LineBox[{1706, 617}], LineBox[{1707, 618}], 
       LineBox[{1708, 619}], LineBox[{1709, 620}], LineBox[{1710, 621}], 
       LineBox[{1712, 623}], LineBox[{1713, 624}], LineBox[{1715, 626}], 
       LineBox[{1716, 627}], LineBox[{1717, 628}], LineBox[{1718, 629}], 
       LineBox[{1719, 630}], LineBox[{1721, 632}], LineBox[{1722, 633}], 
       LineBox[{1723, 634}], LineBox[{1724, 635}], LineBox[{1725, 636}], 
       LineBox[{1726, 637}], LineBox[{1727, 638}], LineBox[{1728, 639}], 
       LineBox[{1729, 640}], LineBox[{1730, 641}], LineBox[{1731, 642}], 
       LineBox[{1732, 643}], LineBox[{1733, 644}], LineBox[{1734, 645}], 
       LineBox[{1735, 646}], LineBox[{1737, 648}], LineBox[{1738, 649}], 
       LineBox[{1742, 653}], LineBox[{1743, 654}], LineBox[{1744, 655}], 
       LineBox[{1745, 656}], LineBox[{1746, 657}], LineBox[{1747, 658}], 
       LineBox[{1748, 659}], LineBox[{1749, 660}], LineBox[{1750, 661}], 
       LineBox[{1752, 663}], LineBox[{1753, 664}], LineBox[{1754, 665}], 
       LineBox[{1755, 666}], LineBox[{1756, 667}], LineBox[{1758, 669}], 
       LineBox[{1760, 671}], LineBox[{1761, 672}], LineBox[{1762, 673}], 
       LineBox[{1763, 674}], LineBox[{1765, 676}], LineBox[{1766, 677}], 
       LineBox[{1767, 678}], LineBox[{1768, 679}], LineBox[{1769, 680}], 
       LineBox[{1771, 682}], LineBox[{1773, 684}], LineBox[{1774, 685}], 
       LineBox[{1775, 686}], LineBox[{1776, 687}], LineBox[{1777, 688}], 
       LineBox[{1781, 692}], LineBox[{1782, 693}], LineBox[{1783, 694}], 
       LineBox[{1784, 695}], LineBox[{1786, 697}], LineBox[{1791, 702}], 
       LineBox[{1797, 708}], LineBox[{1798, 709}], LineBox[{1799, 710}], 
       LineBox[{1800, 711}], LineBox[{1801, 712}], LineBox[{1805, 716}], 
       LineBox[{1806, 717}], LineBox[{1808, 719}], LineBox[{1809, 720}], 
       LineBox[{1811, 722}], LineBox[{1812, 723}], LineBox[{1813, 724}], 
       LineBox[{1822, 733}], LineBox[{1823, 734}], LineBox[{1825, 736}], 
       LineBox[{1829, 740}], LineBox[{1834, 745}], LineBox[{1837, 748}], 
       LineBox[{1838, 749}], LineBox[{1839, 750}], LineBox[{1840, 751}], 
       LineBox[{1841, 752}], LineBox[{1843, 754}], LineBox[{1844, 755}], 
       LineBox[{1845, 756}], LineBox[{1846, 757}], LineBox[{1847, 758}], 
       LineBox[{1848, 759}], LineBox[{1849, 760}], LineBox[{1850, 761}], 
       LineBox[{1851, 762}], LineBox[{1852, 763}], LineBox[{1853, 764}], 
       LineBox[{1854, 765}], LineBox[{1858, 769}], LineBox[{1863, 774}], 
       LineBox[{1864, 775}], LineBox[{1865, 776}], LineBox[{1866, 777}], 
       LineBox[{1868, 779}], LineBox[{1869, 780}], LineBox[{1878, 789}], 
       LineBox[{1879, 790}], LineBox[{1880, 791}], LineBox[{1881, 792}], 
       LineBox[{1883, 794}], LineBox[{1884, 795}], LineBox[{1886, 797}], 
       LineBox[{1888, 799}], LineBox[{1889, 800}], LineBox[{1890, 801}], 
       LineBox[{1891, 802}], LineBox[{1892, 803}], LineBox[{1894, 805}], 
       LineBox[{1895, 806}], LineBox[{1896, 807}], LineBox[{1897, 808}], 
       LineBox[{1901, 812}], LineBox[{1902, 813}], LineBox[{1906, 817}], 
       LineBox[{1908, 819}], LineBox[{1911, 822}], LineBox[{1913, 824}], 
       LineBox[{1917, 828}], LineBox[{1918, 829}], LineBox[{1919, 830}], 
       LineBox[{1920, 831}], LineBox[{1921, 832}], LineBox[{1922, 833}], 
       LineBox[{1923, 834}], LineBox[{1924, 835}], LineBox[{1925, 836}], 
       LineBox[{1926, 837}], LineBox[{1927, 838}], LineBox[{1928, 839}], 
       LineBox[{1932, 843}], LineBox[{1933, 844}], LineBox[{1936, 847}], 
       LineBox[{1937, 848}], LineBox[{1938, 849}], LineBox[{1939, 850}], 
       LineBox[{1941, 852}], LineBox[{1944, 855}], LineBox[{1949, 860}], 
       LineBox[{1950, 861}], LineBox[{1952, 863}], LineBox[{1953, 864}], 
       LineBox[{1954, 865}], LineBox[{1957, 868}], LineBox[{1960, 871}], 
       LineBox[{1961, 872}], LineBox[{1965, 876}], LineBox[{1966, 877}], 
       LineBox[{1968, 879}], LineBox[{1970, 881}], LineBox[{1971, 882}], 
       LineBox[{1974, 885}], LineBox[{1975, 886}], LineBox[{1976, 887}], 
       LineBox[{1977, 888}], LineBox[{1978, 889}], LineBox[{1979, 890}], 
       LineBox[{1987, 898}], LineBox[{1991, 902}], LineBox[{1992, 903}], 
       LineBox[{2005, 916}], LineBox[{2007, 918}], LineBox[{2011, 922}], 
       LineBox[{2012, 923}], LineBox[{2015, 926}], LineBox[{2028, 939}], 
       LineBox[{2030, 941}], LineBox[{2031, 942}], LineBox[{2032, 943}], 
       LineBox[{2033, 944}], LineBox[{2034, 945}], LineBox[{2035, 946}], 
       LineBox[{2036, 947}], LineBox[{2037, 948}], LineBox[{2039, 950}], 
       LineBox[{2040, 951}], LineBox[{2041, 952}], LineBox[{2042, 953}], 
       LineBox[{2044, 955}], LineBox[{2046, 957}], LineBox[{2047, 958}], 
       LineBox[{2048, 959}], LineBox[{2049, 960}], LineBox[{2052, 963}], 
       LineBox[{2053, 964}], LineBox[{2054, 965}], LineBox[{2058, 969}], 
       LineBox[{2059, 970}], LineBox[{2060, 971}], LineBox[{2061, 972}], 
       LineBox[{2062, 973}], LineBox[{2066, 977}], LineBox[{2067, 978}], 
       LineBox[{2068, 979}], LineBox[{2069, 980}], LineBox[{2072, 983}], 
       LineBox[{2073, 984}], LineBox[{2074, 985}], LineBox[{2075, 986}], 
       LineBox[{2076, 987}], LineBox[{2077, 988}], LineBox[{2078, 989}], 
       LineBox[{2079, 990}], LineBox[{2080, 991}], LineBox[{2082, 993}], 
       LineBox[{2083, 994}], LineBox[{2084, 995}], LineBox[{2085, 996}], 
       LineBox[{2086, 997}], LineBox[{2087, 998}], LineBox[{2088, 999}], 
       LineBox[{2089, 1000}], LineBox[{2090, 1001}], LineBox[{2091, 1002}], 
       LineBox[{2092, 1003}], LineBox[{2093, 1004}], LineBox[{2094, 1005}], 
       LineBox[{2095, 1006}], LineBox[{2096, 1007}], LineBox[{2098, 1009}], 
       LineBox[{2099, 1010}], LineBox[{2100, 1011}], LineBox[{2101, 1012}], 
       LineBox[{2102, 1013}], LineBox[{2103, 1014}], LineBox[{2104, 1015}], 
       LineBox[{2105, 1016}], LineBox[{2106, 1017}], LineBox[{2108, 1019}], 
       LineBox[{2109, 1020}], LineBox[{2110, 1021}], LineBox[{2112, 1023}], 
       LineBox[{2113, 1024}], LineBox[{2114, 1025}], LineBox[{2115, 1026}], 
       LineBox[{2116, 1027}], LineBox[{2117, 1028}], LineBox[{2118, 1029}], 
       LineBox[{2119, 1030}], LineBox[{2120, 1031}], LineBox[{2121, 1032}], 
       LineBox[{2123, 1034}], LineBox[{2124, 1035}], LineBox[{2125, 1036}], 
       LineBox[{2126, 1037}], LineBox[{2128, 1039}], LineBox[{2129, 1040}], 
       LineBox[{2130, 1041}], LineBox[{2132, 1043}], LineBox[{2133, 1044}], 
       LineBox[{2136, 1047}], LineBox[{2140, 1051}], LineBox[{2141, 1052}], 
       LineBox[{2142, 1053}], LineBox[{2143, 1054}], LineBox[{2144, 1055}], 
       LineBox[{2145, 1056}], LineBox[{2146, 1057}], LineBox[{2147, 1058}], 
       LineBox[{2156, 1067}], LineBox[{2157, 1068}], LineBox[{2163, 1074}], 
       LineBox[{2166, 1077}], LineBox[{2167, 1078}], LineBox[{2171, 1082}], 
       LineBox[{2172, 1083}], LineBox[{2173, 1084}], LineBox[{2176, 1087}], 
       LineBox[{2178, 1089}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{1093, 4}], LineBox[{1095, 6}], LineBox[{1096, 7}], 
       LineBox[{1097, 8}], LineBox[{1098, 9}], LineBox[{1099, 10}], 
       LineBox[{1103, 14}], LineBox[{1104, 15}], LineBox[{1106, 17}], 
       LineBox[{1107, 18}], LineBox[{1111, 22}], LineBox[{1112, 23}], 
       LineBox[{1113, 24}], LineBox[{1114, 25}], LineBox[{1117, 28}], 
       LineBox[{1121, 32}], LineBox[{1122, 33}], LineBox[{1123, 34}], 
       LineBox[{1124, 35}], LineBox[{1125, 36}], LineBox[{1133, 44}], 
       LineBox[{1136, 47}], LineBox[{1137, 48}], LineBox[{1138, 49}], 
       LineBox[{1140, 51}], LineBox[{1141, 52}], LineBox[{1142, 53}], 
       LineBox[{1143, 54}], LineBox[{1144, 55}], LineBox[{1145, 56}], 
       LineBox[{1146, 57}], LineBox[{1155, 66}], LineBox[{1156, 67}], 
       LineBox[{1157, 68}], LineBox[{1158, 69}], LineBox[{1164, 75}], 
       LineBox[{1169, 80}], LineBox[{1170, 81}], LineBox[{1173, 84}], 
       LineBox[{1174, 85}], LineBox[{1176, 87}], LineBox[{1178, 89}], 
       LineBox[{1179, 90}], LineBox[{1180, 91}], LineBox[{1182, 93}], 
       LineBox[{1183, 94}], LineBox[{1184, 95}], LineBox[{1186, 97}], 
       LineBox[{1187, 98}], LineBox[{1188, 99}], LineBox[{1189, 100}], 
       LineBox[{1190, 101}], LineBox[{1191, 102}], LineBox[{1193, 104}], 
       LineBox[{1194, 105}], LineBox[{1195, 106}], LineBox[{1196, 107}], 
       LineBox[{1197, 108}], LineBox[{1198, 109}], LineBox[{1199, 110}], 
       LineBox[{1200, 111}], LineBox[{1202, 113}], LineBox[{1203, 114}], 
       LineBox[{1204, 115}], LineBox[{1205, 116}], LineBox[{1207, 118}], 
       LineBox[{1213, 124}], LineBox[{1214, 125}], LineBox[{1215, 126}], 
       LineBox[{1216, 127}], LineBox[{1217, 128}], LineBox[{1218, 129}], 
       LineBox[{1219, 130}], LineBox[{1220, 131}], LineBox[{1221, 132}], 
       LineBox[{1222, 133}], LineBox[{1223, 134}], LineBox[{1224, 135}], 
       LineBox[{1225, 136}], LineBox[{1226, 137}], LineBox[{1227, 138}], 
       LineBox[{1228, 139}], LineBox[{1229, 140}], LineBox[{1231, 142}], 
       LineBox[{1232, 143}], LineBox[{1234, 145}], LineBox[{1238, 149}], 
       LineBox[{1242, 153}], LineBox[{1243, 154}], LineBox[{1244, 155}], 
       LineBox[{1248, 159}], LineBox[{1249, 160}], LineBox[{1250, 161}], 
       LineBox[{1251, 162}], LineBox[{1253, 164}], LineBox[{1254, 165}], 
       LineBox[{1255, 166}], LineBox[{1256, 167}], LineBox[{1257, 168}], 
       LineBox[{1258, 169}], LineBox[{1261, 172}], LineBox[{1263, 174}], 
       LineBox[{1264, 175}], LineBox[{1269, 180}], LineBox[{1270, 181}], 
       LineBox[{1271, 182}], LineBox[{1274, 185}], LineBox[{1275, 186}], 
       LineBox[{1276, 187}], LineBox[{1277, 188}], LineBox[{1278, 189}], 
       LineBox[{1279, 190}], LineBox[{1280, 191}], LineBox[{1281, 192}], 
       LineBox[{1282, 193}], LineBox[{1283, 194}], LineBox[{1285, 196}], 
       LineBox[{1286, 197}], LineBox[{1287, 198}], LineBox[{1288, 199}], 
       LineBox[{1289, 200}], LineBox[{1290, 201}], LineBox[{1291, 202}], 
       LineBox[{1292, 203}], LineBox[{1295, 206}], LineBox[{1296, 207}], 
       LineBox[{1297, 208}], LineBox[{1298, 209}], LineBox[{1299, 210}], 
       LineBox[{1302, 213}], LineBox[{1303, 214}], LineBox[{1304, 215}], 
       LineBox[{1309, 220}], LineBox[{1313, 224}], LineBox[{1314, 225}], 
       LineBox[{1315, 226}], LineBox[{1316, 227}], LineBox[{1320, 231}], 
       LineBox[{1321, 232}], LineBox[{1322, 233}], LineBox[{1323, 234}], 
       LineBox[{1324, 235}], LineBox[{1327, 238}], LineBox[{1331, 242}], 
       LineBox[{1332, 243}], LineBox[{1333, 244}], LineBox[{1334, 245}], 
       LineBox[{1354, 265}], LineBox[{1374, 285}], LineBox[{1384, 295}], 
       LineBox[{1385, 296}], LineBox[{1397, 308}], LineBox[{1398, 309}], 
       LineBox[{1416, 327}], LineBox[{1417, 328}], LineBox[{1430, 341}], 
       LineBox[{1445, 356}], LineBox[{1446, 357}], LineBox[{1447, 358}], 
       LineBox[{1448, 359}], LineBox[{1453, 364}], LineBox[{1454, 365}], 
       LineBox[{1455, 366}], LineBox[{1456, 367}], LineBox[{1457, 368}], 
       LineBox[{1458, 369}], LineBox[{1460, 371}], LineBox[{1461, 372}], 
       LineBox[{1462, 373}], LineBox[{1470, 381}], LineBox[{1489, 400}], 
       LineBox[{1490, 401}], LineBox[{1497, 408}], LineBox[{1504, 415}], 
       LineBox[{1505, 416}], LineBox[{1513, 424}], LineBox[{1514, 425}], 
       LineBox[{1530, 441}], LineBox[{1531, 442}], LineBox[{1533, 444}], 
       LineBox[{1535, 446}], LineBox[{1568, 479}], LineBox[{1569, 480}], 
       LineBox[{1570, 481}], LineBox[{1586, 497}], LineBox[{1587, 498}], 
       LineBox[{1588, 499}], LineBox[{1589, 500}], LineBox[{1597, 508}], 
       LineBox[{1598, 509}], LineBox[{1605, 516}], LineBox[{1606, 517}], 
       LineBox[{1610, 521}], LineBox[{1613, 524}], LineBox[{1616, 527}], 
       LineBox[{1617, 528}], LineBox[{1618, 529}], LineBox[{1621, 532}], 
       LineBox[{1623, 534}], LineBox[{1628, 539}], LineBox[{1629, 540}], 
       LineBox[{1630, 541}], LineBox[{1634, 545}], LineBox[{1636, 547}], 
       LineBox[{1637, 548}], LineBox[{1639, 550}], LineBox[{1643, 554}], 
       LineBox[{1644, 555}], LineBox[{1645, 556}], LineBox[{1649, 560}], 
       LineBox[{1650, 561}], LineBox[{1653, 564}], LineBox[{1656, 567}], 
       LineBox[{1658, 569}], LineBox[{1664, 575}], LineBox[{1671, 582}], 
       LineBox[{1672, 583}], LineBox[{1673, 584}], LineBox[{1674, 585}], 
       LineBox[{1675, 586}], LineBox[{1676, 587}], LineBox[{1681, 592}], 
       LineBox[{1685, 596}], LineBox[{1686, 597}], LineBox[{1690, 601}], 
       LineBox[{1692, 603}], LineBox[{1694, 605}], LineBox[{1701, 612}], 
       LineBox[{1711, 622}], LineBox[{1714, 625}], LineBox[{1720, 631}], 
       LineBox[{1736, 647}], LineBox[{1739, 650}], LineBox[{1740, 651}], 
       LineBox[{1741, 652}], LineBox[{1751, 662}], LineBox[{1757, 668}], 
       LineBox[{1759, 670}], LineBox[{1764, 675}], LineBox[{1770, 681}], 
       LineBox[{1772, 683}], LineBox[{1778, 689}], LineBox[{1779, 690}], 
       LineBox[{1780, 691}], LineBox[{1785, 696}], LineBox[{1787, 698}], 
       LineBox[{1788, 699}], LineBox[{1789, 700}], LineBox[{1790, 701}], 
       LineBox[{1792, 703}], LineBox[{1793, 704}], LineBox[{1794, 705}], 
       LineBox[{1795, 706}], LineBox[{1796, 707}], LineBox[{1802, 713}], 
       LineBox[{1803, 714}], LineBox[{1804, 715}], LineBox[{1807, 718}], 
       LineBox[{1810, 721}], LineBox[{1814, 725}], LineBox[{1815, 726}], 
       LineBox[{1816, 727}], LineBox[{1817, 728}], LineBox[{1818, 729}], 
       LineBox[{1819, 730}], LineBox[{1820, 731}], LineBox[{1821, 732}], 
       LineBox[{1824, 735}], LineBox[{1826, 737}], LineBox[{1827, 738}], 
       LineBox[{1828, 739}], LineBox[{1830, 741}], LineBox[{1831, 742}], 
       LineBox[{1832, 743}], LineBox[{1833, 744}], LineBox[{1835, 746}], 
       LineBox[{1836, 747}], LineBox[{1842, 753}], LineBox[{1855, 766}], 
       LineBox[{1856, 767}], LineBox[{1857, 768}], LineBox[{1859, 770}], 
       LineBox[{1860, 771}], LineBox[{1861, 772}], LineBox[{1862, 773}], 
       LineBox[{1867, 778}], LineBox[{1870, 781}], LineBox[{1871, 782}], 
       LineBox[{1872, 783}], LineBox[{1873, 784}], LineBox[{1874, 785}], 
       LineBox[{1875, 786}], LineBox[{1876, 787}], LineBox[{1877, 788}], 
       LineBox[{1882, 793}], LineBox[{1885, 796}], LineBox[{1887, 798}], 
       LineBox[{1893, 804}], LineBox[{1898, 809}], LineBox[{1899, 810}], 
       LineBox[{1900, 811}], LineBox[{1903, 814}], LineBox[{1904, 815}], 
       LineBox[{1905, 816}], LineBox[{1907, 818}], LineBox[{1909, 820}], 
       LineBox[{1910, 821}], LineBox[{1912, 823}], LineBox[{1914, 825}], 
       LineBox[{1915, 826}], LineBox[{1916, 827}], LineBox[{1929, 840}], 
       LineBox[{1930, 841}], LineBox[{1931, 842}], LineBox[{1934, 845}], 
       LineBox[{1935, 846}], LineBox[{1940, 851}], LineBox[{1942, 853}], 
       LineBox[{1943, 854}], LineBox[{1945, 856}], LineBox[{1946, 857}], 
       LineBox[{1947, 858}], LineBox[{1948, 859}], LineBox[{1951, 862}], 
       LineBox[{1955, 866}], LineBox[{1956, 867}], LineBox[{1958, 869}], 
       LineBox[{1959, 870}], LineBox[{1962, 873}], LineBox[{1963, 874}], 
       LineBox[{1964, 875}], LineBox[{1967, 878}], LineBox[{1969, 880}], 
       LineBox[{1972, 883}], LineBox[{1973, 884}], LineBox[{1980, 891}], 
       LineBox[{1981, 892}], LineBox[{1982, 893}], LineBox[{1983, 894}], 
       LineBox[{1984, 895}], LineBox[{1985, 896}], LineBox[{1986, 897}], 
       LineBox[{1988, 899}], LineBox[{1989, 900}], LineBox[{1990, 901}], 
       LineBox[{1993, 904}], LineBox[{1994, 905}], LineBox[{1995, 906}], 
       LineBox[{1996, 907}], LineBox[{1997, 908}], LineBox[{1998, 909}], 
       LineBox[{1999, 910}], LineBox[{2000, 911}], LineBox[{2001, 912}], 
       LineBox[{2002, 913}], LineBox[{2003, 914}], LineBox[{2004, 915}], 
       LineBox[{2006, 917}], LineBox[{2008, 919}], LineBox[{2009, 920}], 
       LineBox[{2010, 921}], LineBox[{2013, 924}], LineBox[{2014, 925}], 
       LineBox[{2016, 927}], LineBox[{2017, 928}], LineBox[{2018, 929}], 
       LineBox[{2019, 930}], LineBox[{2020, 931}], LineBox[{2021, 932}], 
       LineBox[{2022, 933}], LineBox[{2023, 934}], LineBox[{2024, 935}], 
       LineBox[{2025, 936}], LineBox[{2026, 937}], LineBox[{2027, 938}], 
       LineBox[{2029, 940}], LineBox[{2038, 949}], LineBox[{2043, 954}], 
       LineBox[{2045, 956}], LineBox[{2050, 961}], LineBox[{2051, 962}], 
       LineBox[{2055, 966}], LineBox[{2056, 967}], LineBox[{2057, 968}], 
       LineBox[{2063, 974}], LineBox[{2064, 975}], LineBox[{2065, 976}], 
       LineBox[{2070, 981}], LineBox[{2071, 982}], LineBox[{2081, 992}], 
       LineBox[{2097, 1008}], LineBox[{2107, 1018}], LineBox[{2111, 1022}], 
       LineBox[{2122, 1033}], LineBox[{2127, 1038}], LineBox[{2131, 1042}], 
       LineBox[{2134, 1045}], LineBox[{2135, 1046}], LineBox[{2137, 1048}], 
       LineBox[{2138, 1049}], LineBox[{2139, 1050}], LineBox[{2148, 1059}], 
       LineBox[{2149, 1060}], LineBox[{2150, 1061}], LineBox[{2151, 1062}], 
       LineBox[{2152, 1063}], LineBox[{2153, 1064}], LineBox[{2154, 1065}], 
       LineBox[{2155, 1066}], LineBox[{2158, 1069}], LineBox[{2159, 1070}], 
       LineBox[{2160, 1071}], LineBox[{2161, 1072}], LineBox[{2162, 1073}], 
       LineBox[{2164, 1075}], LineBox[{2165, 1076}], LineBox[{2168, 1079}], 
       LineBox[{2169, 1080}], LineBox[{2170, 1081}], LineBox[{2174, 1085}], 
       LineBox[{2175, 1086}], LineBox[{2177, 1088}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.004583333333333334], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwN00OiGAoCALA3tW3btm3btm392rZt27Zt27Y7WeQISdiofaV2/wsICCgY
JCBgUIiAgMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7z
mM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exhL/vY
zwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu97jP
Ax7yiMc84SnPeM4LXvKK17zhLe94zwc+8onPfOEr3/jOD37yi9/84S//CAgZ
EPA/AhGYIAQlGMEJQUhCEZowhCUc4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJ
QEISkZgkJCUZyUlBSlKRmjSkJR3pyUBGMpGZLGQlG9nJQU5ykZs85CUf+SlA
QQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa1alBTWpRmzrUpR71aUBD
GtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50pRvd6UFPetGbPvSlH//RnwEM
ZBCDGcJQhjGcEYxkFKMZw1jGMZ4JTGQSk5nCVKYxnRnMZBazmcNc5jGfBSxk
EYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb2cJWtrGdHexkF7vZw172sZ8DHOQQ
hznCUY5xnBOc5BSnOcNZznGeC1zkEpe5wlWucZ0b3OQWt7nDXe5xnwc85BGP
ecJTnvGcF7zkFa95w1ve8Z4PfOQTn/nCV77xnR/85Be/+cNf/hEQyn8CEZgg
BCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4xCUe8UlAQhKRmCQk
JRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzkJR/5KUBBClGYIhSl
GMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSlHvVpQEMa0ZgmNKUZ
zWlBS1rRmja0pR3t6UBHOtGZLnSlG93pQU960Zs+9KUf/9GfAQxkEIMZwlCG
MZwRjGQUoxnDWMYxnglMZBKTmcJUpjGdGcxkFrOZw1zmMZ8FLGQRi1nCUpax
nBWsZBWrWcNa1rGeDWxkE5vZwla2sZ0d7GQXu9nDXvaxnwMc5BCHOcJRjnGc
E5zkFKc5w1nOcZ4LXOQSl7nCVa5xnRvc5Ba3ucNd7nGfBzzkEY95wlOe8ZwX
vOQVr3nDW97xng985BOf+cJXvvGdH/zkF7/5w1/+ERDafwIRmCAEJRjBCUFI
QhGaMIQlHOGJQEQiEZkoRCUa0YlBTGIRmzjEJR7xSUBCEpGYJCQlGclJQUpS
kZo0pCUd6clARjKRmSxkJRvZyUFOcpGbPOQlH/kpQEEKUZgiFKUYxSlBSUpR
mjKUpRzlqUBFKlGZKlSlGtWpQU1qUZs61KUe9WlAQxrRmCY0pRnNaUFLWtGa
NrSlHe3pQEc60ZkudKUb3elBT3rRmz70pR//0Z8BDGQQgxnCUIYxnBGMZBSj
GcNYxjGeCUxkEpOZwlSmMZ0ZzGQWs5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZ
w1rWsZ4NbGQTm9nCVraxnR3sZBe72cNe9rGfAxzkEIc5wlGOcZwTnOQUpznD
Wc5xngtc5BKXucJVrnGdG9zkFre5w13ucZ8HPOQRj3nCU57xnBe85BWvecNb
3vGeD3zkE5/5wle+8Z0f/OQXv/nDX/4REMZ/AhGYIAQlGMEJQUhCEZowhCUc
4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJQEISkZgkJCUZyUlBSlKRmjSkJR3p
yUBGMpGZLGQlG9nJQU5ykZs85CUf+SlAQQpRmCIUpRjFKUFJSlGaMpSlHOWp
QEUqUZkqVKUa1alBTWpRmzrUpR71aUBDGtGYJjSlGc1pQUta0Zo2tKUd7elA
RzrRmS50pRvd6UFPetGbPvSlH//RnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4J
TGQSk5nCVKYxnRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1s
ZBOb2cJWtrGdHexkF7vZw172sZ8DHOQQ/wfgGlSS
        "]]}, {}}}], {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"actual value - predicted value\"", TraditionalForm], None}, {
     FormBox["\"predicted value\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.580564034076755, 0.8330920913992621}, {-4.151541057786707, 
   4.151541057786707}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.710062332680503*^9, 3.710062389846944*^9, 
  3.7100692658646307`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{
    RowBox[{"RandomSample", "[", 
     RowBox[{"trainingset", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"1", ";;", "8"}]}], "]"}], "]"}], "]"}], "\[Rule]", 
    RowBox[{"Standardize", "[", 
     RowBox[{"trainingset", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "9"}], "]"}], "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7099283795432873`*^9, 3.709928384129219*^9}, {
  3.709930636731817*^9, 3.7099306458736744`*^9}, {3.709938006930014*^9, 
  3.7099380446746817`*^9}, {3.709938155361167*^9, 3.709938175648289*^9}, {
  3.710068857210931*^9, 3.710068885335552*^9}, {3.710069871304674*^9, 
  3.710069878470106*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{}, {{}, {
                  PointSize[0.125], 
                  GrayLevel[0.55], 
                  
                  PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                    4, 4.}}]}, {
                  GrayLevel[0.7], 
                  AbsoluteThickness[1.5], 
                  
                  BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                   5, 4}}]}}, {}}, Axes -> {False, False}, 
               AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
               BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {All, All}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of features: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["8", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{}, {{}, {
                  PointSize[0.125], 
                  GrayLevel[0.55], 
                  
                  PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                    4, 4.}}]}, {
                  GrayLevel[0.7], 
                  AbsoluteThickness[1.5], 
                  
                  BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                   5, 4}}]}}, {}}, Axes -> {False, False}, 
               AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
               BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {All, All}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of features: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["8", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["8073", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.709937888835026*^9, 3.7099380252587385`*^9, 3.7099380594136763`*^9, {
   3.709938160539219*^9, 3.7099381891540337`*^9}, 3.7100619393544674`*^9, 
   3.710068899446374*^9, 3.7100698925389194`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "=", 
  RowBox[{"PredictorMeasurements", "[", 
   RowBox[{"p", ",", 
    RowBox[{
     RowBox[{"testset", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"1", ";;", "8"}]}], "]"}], "]"}], "\[Rule]", 
     RowBox[{"Standardize", "[", 
      RowBox[{"testset", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "9"}], "]"}], "]"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7099306481711426`*^9, 3.7099306813918896`*^9}, {
  3.7099380700258317`*^9, 3.7099380853819513`*^9}, {3.7099381451951017`*^9, 
  3.709938150275134*^9}, {3.709938237539863*^9, 3.7099382390641713`*^9}, {
  3.710068893456176*^9, 3.7100689016588163`*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorMeasurementsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  GrayLevel[0.6], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  Dashing[{Small, Small}], 
                  
                  LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                   11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                   GrayLevel[0.4], 
                   PointSize[0.09], 
                   AbsoluteThickness[1.6], 
                   
                   PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                    2.227816320451859, 2.584653237430766}, {3.043099335090081,
                     4.798822972025658}, {3.5728355469237116`, 
                    5.9507424155697155`}, {4.158566334344331, 
                    5.2097676165465385`}, {4.824808988689111, 
                    7.23346088027902}, {6.88649660338492, 
                    5.297021421229134}, {7.819072150835878, 
                    6.533166043611269}, {8.437306856915493, 
                    8.81724006216815}, {8.604907881861761, 
                    11.302704526196452`}}]}, {}}, {}}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1089", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  GrayLevel[0.6], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  Dashing[{Small, Small}], 
                  
                  LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                   11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                   GrayLevel[0.4], 
                   PointSize[0.09], 
                   AbsoluteThickness[1.6], 
                   
                   PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                    2.227816320451859, 2.584653237430766}, {3.043099335090081,
                     4.798822972025658}, {3.5728355469237116`, 
                    5.9507424155697155`}, {4.158566334344331, 
                    5.2097676165465385`}, {4.824808988689111, 
                    7.23346088027902}, {6.88649660338492, 
                    5.297021421229134}, {7.819072150835878, 
                    6.533166043611269}, {8.437306856915493, 
                    8.81724006216815}, {8.604907881861761, 
                    11.302704526196452`}}]}, {}}, {}}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1089", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"StandardDeviation: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["0.9993784376665875`", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorMeasurementsObject[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7099378892981195`*^9, 3.7099380596187177`*^9, 3.709938096578226*^9, {
   3.709938210398347*^9, 3.70993823999936*^9}, 3.7100619399239054`*^9, 
   3.7100689028010445`*^9, 3.710069893117035*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ComparisonPlot\>\"", "]"}]], "Input"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.004583333333333334], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1: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
OPs01SP0CNoLFAgKswZ0YP8PC556wg==
          "]]}, {}}}, {}, {}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           GrayLevel[0.5], 
           Dashing[{Small, Small}], 
           Thickness[0.002]], 
          LineBox[CompressedData["
1:eJxFxXswE3AcAPANsxmbR5JTdulWEs3RnUMOvTzOtTMmcVOzmi7uOPpnp0hm
t7z6ozy3CzujNJpXmeYx5hxJs5Iyzh8s1yZbt26Xck71x76/Pz738eMUpHDt
MBjM5X/+P3xTkBfT56qynV9t+aqRoan919nsTvSj/Yi0B2I0R2SKVgvQxIV0
j/hMNOvsqWG6PXrfXeN4LY0MH5zkiCNWXeAabkvigXvO8NoVEuvTMSKMSZq+
xewmwPxQ/1otHQ8vHfkgc17EwQ5pvTQa2wF+UhY2R8fZw5aXjtlBtVi4f6HU
jUDDwOIyZkKTbG/cdiE3hiNS/YGdQorlTfgd+JxdotnN0woHF5T+yqBZ4HEB
PifaaoLZ4ZGTI94GWKBwEZxp24AXheTMKO4KbPGJauwq18ANisEAXv0ArMh9
36cuV8bYLp7x9NKsaeE84WHKi45V2HTI0EMP1MPtLdRNTasB9vYJj8iqNMOu
weMlUpkFZuQ+DmxhW+GfrdpN3+Qd+KNJlS8h7cJ7kkQac3QPVvu3lkynYmJt
n6gufKuXY+Hhrd++cQH28NZVXXpXpQN8nic8Td3AwbN1Rqf1DDxsHu14Jxki
wJf0Xg3SUCKsGmHujnU6wzqJMW4FS4KpFWHNkcVkmHRHpxUvu6KrjqcSm93g
oGVF7LdUd1hM4/nF23nALAFWycChKatVTBYBLal8Kiwko5/pJ7fFPugBEenN
j1D0nGN7iugGuiYr6Ls0B00ffCWQ30Zrs2cUUwXozyPbFPNd9EZR+NaFOrR0
dqKC3ojOOZpEyRChDfNZjPw2tPkkf6ipG91734XRLkcXLdUbe/rRVv5zX7UC
/VoXMjSvRPNClMlfxtCRDy8a1yfQu2vz/O0p9F/DyD+p
           "]]}, 
         Annotation[#, "Charting`Private`Tag$342751#1"]& ]}}, {}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, 
     PlotRange -> {{-3.961546921917627, 
      4.692312473896715}, {-3.961546921917627, 4.692312473896715}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"actual value\"", TraditionalForm], None}, {
        FormBox["\"predicted value\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-3.961546921917627, 
      4.692312473896715}, {-3.961546921917627, 4.692312473896715}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"predictions\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"perfect prediction line\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}], 
                    Thickness[0.018000000000000002`]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}], 
                    Thickness[0.018000000000000002`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.70993788940014*^9, 3.709938098578633*^9, 
  3.7099382416136885`*^9, 3.710061940063315*^9, 3.7100689051235085`*^9, 
  3.7100698932420597`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ResidualPlot\>\"", "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
v3n4wY+2a2g/NNv65vawrmWUf3NaTJ7YOQD52a4wqW0COV1gPCvbJ5dKtL9c
SnQvqU4Y2h89+frsFd7cEWjPbKGH2oMJ5esSMxw/lrykyCf63rN7TKFrZRD3
JOXN1OCegfrVtGNznPlrEGfvVKn1F0f7pyvfJOXR7kb7wSWYFCk2726A/Sb3
FLJ6z0D5F1SuI8/NP2OI62Oxs+zqzpgZsFFoWVj9Sxysn67DJueTD6Dx25Dg
PrG5htazyf4Hs4klKJ86Lzj7UUsKfa9JO7mQgF+Zg/HbqeCtEDyJfn/hZt2r
kYUGtF5Fj9abq8lPYw9lXCkuPGODpW9wEY9mmccQfSyPXVboAspHS9eqiKlb
o/yc0MzIq2yFNii/o+1mac2LLhiPHz0xnHedSOSIvpMXd4CLBM1Xy0XbSAWF
IrAYz8qzmMVmeL8dVi/0YhoHUf72EH9W8DQptGdo36ZY6rMF7Jji8+yZPQWY
VTj6y/Qt5G9X2Xh2TlKDt94QsOKiQ/ni2Zn54x0kqD9BQ2Y0Abyj8H6kQwyL
SS+6YLyMHoo54WcGwFMRFxIaW1ugvOxUqVZueSV4MPy0g//lMbCSmddGiXsq
1B81uP6xSLIRzBu12xKniH6+vrF7uN0s6Ib+OZ/od2FrnIP5OGvrfayvEq0P
hmEKqcLwH1Ce/uljaowTyq+R/P///OO/18R8xV/lX/38f/yP/0oT87X/zr+6
f3/3+xLPz/ifatgP/l/EP1tvf9a/+v3+8X/WxHznrzJx/+c//v/++avn68/2
h5hP+cd/j//q9UPM///jv8Z/dn6J5zv8O/++/B/t38/a/0+bmK/53+p/xvMf
/0oT82X/Wwz7q/9D/rPz82efD+d7/F+amG/97+q/O9/5V6+X/3S+lnj+wX/K
vzo//atN/H30/yn+/fz+6uf/1f7Z84nnF/xP9R+dj/9q/fmr/avzb/9p/378
iedn/Lvx+aPx3/tn8/378r/v7x+dz9+3Rzwv4b+rfzaff3V7f9Z/9/N+1v4f
zZf9vj3i+RT/zj8b35/V/6v9q5//V5t4HgjRfzS/+T8tH/pH871/db7/r+7v
/7bvD//V89P/1fz79yPu3/x3/ll7P6v/q/1H+/ur5+fP+lfnR/+r+/fz/XfX
/7PP+0/nX3/m3+eHifuJ/135n73Pn82v/9n3+X3/f+Y/O3+/j//qfO+f9e/n
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
    "], {{{}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{1090, 1}], LineBox[{1091, 2}], LineBox[{1092, 3}], 
       LineBox[{1094, 5}], LineBox[{1100, 11}], LineBox[{1101, 12}], 
       LineBox[{1102, 13}], LineBox[{1108, 19}], LineBox[{1109, 20}], 
       LineBox[{1115, 26}], LineBox[{1116, 27}], LineBox[{1118, 29}], 
       LineBox[{1127, 38}], LineBox[{1128, 39}], LineBox[{1129, 40}], 
       LineBox[{1134, 45}], LineBox[{1139, 50}], LineBox[{1149, 60}], 
       LineBox[{1150, 61}], LineBox[{1151, 62}], LineBox[{1152, 63}], 
       LineBox[{1162, 73}], LineBox[{1165, 76}], LineBox[{1172, 83}], 
       LineBox[{1175, 86}], LineBox[{1177, 88}], LineBox[{1180, 91}], 
       LineBox[{1181, 92}], LineBox[{1185, 96}], LineBox[{1189, 100}], 
       LineBox[{1192, 103}], LineBox[{1201, 112}], LineBox[{1206, 117}], 
       LineBox[{1208, 119}], LineBox[{1209, 120}], LineBox[{1210, 121}], 
       LineBox[{1211, 122}], LineBox[{1212, 123}], LineBox[{1230, 141}], 
       LineBox[{1235, 146}], LineBox[{1236, 147}], LineBox[{1237, 148}], 
       LineBox[{1239, 150}], LineBox[{1240, 151}], LineBox[{1241, 152}], 
       LineBox[{1246, 157}], LineBox[{1260, 171}], LineBox[{1262, 173}], 
       LineBox[{1265, 176}], LineBox[{1266, 177}], LineBox[{1267, 178}], 
       LineBox[{1268, 179}], LineBox[{1272, 183}], LineBox[{1273, 184}], 
       LineBox[{1284, 195}], LineBox[{1293, 204}], LineBox[{1294, 205}], 
       LineBox[{1306, 217}], LineBox[{1307, 218}], LineBox[{1312, 223}], 
       LineBox[{1319, 230}], LineBox[{1325, 236}], LineBox[{1326, 237}], 
       LineBox[{1331, 242}], LineBox[{1334, 245}], LineBox[{1335, 246}], 
       LineBox[{1336, 247}], LineBox[{1337, 248}], LineBox[{1338, 249}], 
       LineBox[{1339, 250}], LineBox[{1340, 251}], LineBox[{1341, 252}], 
       LineBox[{1342, 253}], LineBox[{1345, 256}], LineBox[{1346, 257}], 
       LineBox[{1347, 258}], LineBox[{1348, 259}], LineBox[{1349, 260}], 
       LineBox[{1350, 261}], LineBox[{1351, 262}], LineBox[{1352, 263}], 
       LineBox[{1353, 264}], LineBox[{1356, 267}], LineBox[{1357, 268}], 
       LineBox[{1358, 269}], LineBox[{1359, 270}], LineBox[{1360, 271}], 
       LineBox[{1361, 272}], LineBox[{1362, 273}], LineBox[{1363, 274}], 
       LineBox[{1364, 275}], LineBox[{1365, 276}], LineBox[{1366, 277}], 
       LineBox[{1367, 278}], LineBox[{1368, 279}], LineBox[{1369, 280}], 
       LineBox[{1370, 281}], LineBox[{1371, 282}], LineBox[{1372, 283}], 
       LineBox[{1373, 284}], LineBox[{1375, 286}], LineBox[{1376, 287}], 
       LineBox[{1377, 288}], LineBox[{1378, 289}], LineBox[{1380, 291}], 
       LineBox[{1381, 292}], LineBox[{1382, 293}], LineBox[{1383, 294}], 
       LineBox[{1386, 297}], LineBox[{1387, 298}], LineBox[{1388, 299}], 
       LineBox[{1389, 300}], LineBox[{1391, 302}], LineBox[{1392, 303}], 
       LineBox[{1393, 304}], LineBox[{1394, 305}], LineBox[{1396, 307}], 
       LineBox[{1399, 310}], LineBox[{1400, 311}], LineBox[{1401, 312}], 
       LineBox[{1402, 313}], LineBox[{1403, 314}], LineBox[{1404, 315}], 
       LineBox[{1405, 316}], LineBox[{1406, 317}], LineBox[{1407, 318}], 
       LineBox[{1408, 319}], LineBox[{1409, 320}], LineBox[{1410, 321}], 
       LineBox[{1411, 322}], LineBox[{1412, 323}], LineBox[{1413, 324}], 
       LineBox[{1414, 325}], LineBox[{1415, 326}], LineBox[{1417, 328}], 
       LineBox[{1418, 329}], LineBox[{1419, 330}], LineBox[{1420, 331}], 
       LineBox[{1421, 332}], LineBox[{1422, 333}], LineBox[{1423, 334}], 
       LineBox[{1424, 335}], LineBox[{1425, 336}], LineBox[{1426, 337}], 
       LineBox[{1427, 338}], LineBox[{1428, 339}], LineBox[{1429, 340}], 
       LineBox[{1431, 342}], LineBox[{1432, 343}], LineBox[{1433, 344}], 
       LineBox[{1434, 345}], LineBox[{1435, 346}], LineBox[{1436, 347}], 
       LineBox[{1437, 348}], LineBox[{1438, 349}], LineBox[{1439, 350}], 
       LineBox[{1440, 351}], LineBox[{1441, 352}], LineBox[{1442, 353}], 
       LineBox[{1443, 354}], LineBox[{1444, 355}], LineBox[{1448, 359}], 
       LineBox[{1449, 360}], LineBox[{1450, 361}], LineBox[{1451, 362}], 
       LineBox[{1452, 363}], LineBox[{1463, 374}], LineBox[{1464, 375}], 
       LineBox[{1465, 376}], LineBox[{1466, 377}], LineBox[{1467, 378}], 
       LineBox[{1468, 379}], LineBox[{1469, 380}], LineBox[{1472, 383}], 
       LineBox[{1473, 384}], LineBox[{1474, 385}], LineBox[{1475, 386}], 
       LineBox[{1477, 388}], LineBox[{1478, 389}], LineBox[{1479, 390}], 
       LineBox[{1480, 391}], LineBox[{1481, 392}], LineBox[{1483, 394}], 
       LineBox[{1484, 395}], LineBox[{1485, 396}], LineBox[{1486, 397}], 
       LineBox[{1487, 398}], LineBox[{1488, 399}], LineBox[{1491, 402}], 
       LineBox[{1492, 403}], LineBox[{1493, 404}], LineBox[{1494, 405}], 
       LineBox[{1496, 407}], LineBox[{1500, 411}], LineBox[{1501, 412}], 
       LineBox[{1502, 413}], LineBox[{1503, 414}], LineBox[{1506, 417}], 
       LineBox[{1507, 418}], LineBox[{1508, 419}], LineBox[{1509, 420}], 
       LineBox[{1510, 421}], LineBox[{1511, 422}], LineBox[{1515, 426}], 
       LineBox[{1516, 427}], LineBox[{1517, 428}], LineBox[{1518, 429}], 
       LineBox[{1519, 430}], LineBox[{1520, 431}], LineBox[{1522, 433}], 
       LineBox[{1523, 434}], LineBox[{1526, 437}], LineBox[{1527, 438}], 
       LineBox[{1534, 445}], LineBox[{1536, 447}], LineBox[{1537, 448}], 
       LineBox[{1538, 449}], LineBox[{1540, 451}], LineBox[{1541, 452}], 
       LineBox[{1543, 454}], LineBox[{1544, 455}], LineBox[{1545, 456}], 
       LineBox[{1546, 457}], LineBox[{1547, 458}], LineBox[{1548, 459}], 
       LineBox[{1549, 460}], LineBox[{1550, 461}], LineBox[{1551, 462}], 
       LineBox[{1552, 463}], LineBox[{1553, 464}], LineBox[{1554, 465}], 
       LineBox[{1555, 466}], LineBox[{1556, 467}], LineBox[{1557, 468}], 
       LineBox[{1558, 469}], LineBox[{1561, 472}], LineBox[{1563, 474}], 
       LineBox[{1564, 475}], LineBox[{1565, 476}], LineBox[{1567, 478}], 
       LineBox[{1571, 482}], LineBox[{1572, 483}], LineBox[{1573, 484}], 
       LineBox[{1574, 485}], LineBox[{1575, 486}], LineBox[{1576, 487}], 
       LineBox[{1577, 488}], LineBox[{1578, 489}], LineBox[{1579, 490}], 
       LineBox[{1580, 491}], LineBox[{1581, 492}], LineBox[{1582, 493}], 
       LineBox[{1583, 494}], LineBox[{1584, 495}], LineBox[{1585, 496}], 
       LineBox[{1590, 501}], LineBox[{1591, 502}], LineBox[{1592, 503}], 
       LineBox[{1593, 504}], LineBox[{1594, 505}], LineBox[{1595, 506}], 
       LineBox[{1596, 507}], LineBox[{1599, 510}], LineBox[{1600, 511}], 
       LineBox[{1601, 512}], LineBox[{1602, 513}], LineBox[{1603, 514}], 
       LineBox[{1608, 519}], LineBox[{1609, 520}], LineBox[{1611, 522}], 
       LineBox[{1612, 523}], LineBox[{1614, 525}], LineBox[{1615, 526}], 
       LineBox[{1619, 530}], LineBox[{1620, 531}], LineBox[{1622, 533}], 
       LineBox[{1624, 535}], LineBox[{1625, 536}], LineBox[{1626, 537}], 
       LineBox[{1627, 538}], LineBox[{1631, 542}], LineBox[{1632, 543}], 
       LineBox[{1633, 544}], LineBox[{1635, 546}], LineBox[{1640, 551}], 
       LineBox[{1642, 553}], LineBox[{1647, 558}], LineBox[{1652, 563}], 
       LineBox[{1654, 565}], LineBox[{1655, 566}], LineBox[{1657, 568}], 
       LineBox[{1660, 571}], LineBox[{1661, 572}], LineBox[{1663, 574}], 
       LineBox[{1665, 576}], LineBox[{1666, 577}], LineBox[{1667, 578}], 
       LineBox[{1668, 579}], LineBox[{1669, 580}], LineBox[{1670, 581}], 
       LineBox[{1678, 589}], LineBox[{1679, 590}], LineBox[{1682, 593}], 
       LineBox[{1683, 594}], LineBox[{1684, 595}], LineBox[{1687, 598}], 
       LineBox[{1688, 599}], LineBox[{1689, 600}], LineBox[{1693, 604}], 
       LineBox[{1695, 606}], LineBox[{1697, 608}], LineBox[{1698, 609}], 
       LineBox[{1699, 610}], LineBox[{1700, 611}], LineBox[{1702, 613}], 
       LineBox[{1703, 614}], LineBox[{1704, 615}], LineBox[{1705, 616}], 
       LineBox[{1706, 617}], LineBox[{1707, 618}], LineBox[{1708, 619}], 
       LineBox[{1709, 620}], LineBox[{1710, 621}], LineBox[{1712, 623}], 
       LineBox[{1713, 624}], LineBox[{1715, 626}], LineBox[{1716, 627}], 
       LineBox[{1717, 628}], LineBox[{1718, 629}], LineBox[{1719, 630}], 
       LineBox[{1721, 632}], LineBox[{1722, 633}], LineBox[{1723, 634}], 
       LineBox[{1724, 635}], LineBox[{1725, 636}], LineBox[{1726, 637}], 
       LineBox[{1727, 638}], LineBox[{1728, 639}], LineBox[{1730, 641}], 
       LineBox[{1731, 642}], LineBox[{1732, 643}], LineBox[{1733, 644}], 
       LineBox[{1734, 645}], LineBox[{1735, 646}], LineBox[{1737, 648}], 
       LineBox[{1742, 653}], LineBox[{1743, 654}], LineBox[{1744, 655}], 
       LineBox[{1745, 656}], LineBox[{1746, 657}], LineBox[{1747, 658}], 
       LineBox[{1748, 659}], LineBox[{1749, 660}], LineBox[{1750, 661}], 
       LineBox[{1752, 663}], LineBox[{1753, 664}], LineBox[{1754, 665}], 
       LineBox[{1755, 666}], LineBox[{1756, 667}], LineBox[{1758, 669}], 
       LineBox[{1759, 670}], LineBox[{1760, 671}], LineBox[{1761, 672}], 
       LineBox[{1762, 673}], LineBox[{1763, 674}], LineBox[{1765, 676}], 
       LineBox[{1766, 677}], LineBox[{1767, 678}], LineBox[{1768, 679}], 
       LineBox[{1769, 680}], LineBox[{1771, 682}], LineBox[{1773, 684}], 
       LineBox[{1774, 685}], LineBox[{1775, 686}], LineBox[{1776, 687}], 
       LineBox[{1777, 688}], LineBox[{1781, 692}], LineBox[{1782, 693}], 
       LineBox[{1783, 694}], LineBox[{1784, 695}], LineBox[{1786, 697}], 
       LineBox[{1791, 702}], LineBox[{1797, 708}], LineBox[{1798, 709}], 
       LineBox[{1799, 710}], LineBox[{1800, 711}], LineBox[{1801, 712}], 
       LineBox[{1802, 713}], LineBox[{1804, 715}], LineBox[{1805, 716}], 
       LineBox[{1806, 717}], LineBox[{1807, 718}], LineBox[{1808, 719}], 
       LineBox[{1809, 720}], LineBox[{1811, 722}], LineBox[{1812, 723}], 
       LineBox[{1813, 724}], LineBox[{1822, 733}], LineBox[{1823, 734}], 
       LineBox[{1825, 736}], LineBox[{1829, 740}], LineBox[{1834, 745}], 
       LineBox[{1837, 748}], LineBox[{1838, 749}], LineBox[{1839, 750}], 
       LineBox[{1840, 751}], LineBox[{1841, 752}], LineBox[{1843, 754}], 
       LineBox[{1844, 755}], LineBox[{1845, 756}], LineBox[{1846, 757}], 
       LineBox[{1847, 758}], LineBox[{1848, 759}], LineBox[{1849, 760}], 
       LineBox[{1850, 761}], LineBox[{1851, 762}], LineBox[{1852, 763}], 
       LineBox[{1853, 764}], LineBox[{1858, 769}], LineBox[{1863, 774}], 
       LineBox[{1864, 775}], LineBox[{1865, 776}], LineBox[{1866, 777}], 
       LineBox[{1868, 779}], LineBox[{1869, 780}], LineBox[{1878, 789}], 
       LineBox[{1879, 790}], LineBox[{1880, 791}], LineBox[{1881, 792}], 
       LineBox[{1883, 794}], LineBox[{1884, 795}], LineBox[{1886, 797}], 
       LineBox[{1888, 799}], LineBox[{1889, 800}], LineBox[{1890, 801}], 
       LineBox[{1891, 802}], LineBox[{1892, 803}], LineBox[{1895, 806}], 
       LineBox[{1896, 807}], LineBox[{1897, 808}], LineBox[{1901, 812}], 
       LineBox[{1902, 813}], LineBox[{1906, 817}], LineBox[{1908, 819}], 
       LineBox[{1911, 822}], LineBox[{1913, 824}], LineBox[{1918, 829}], 
       LineBox[{1919, 830}], LineBox[{1920, 831}], LineBox[{1921, 832}], 
       LineBox[{1922, 833}], LineBox[{1923, 834}], LineBox[{1924, 835}], 
       LineBox[{1925, 836}], LineBox[{1926, 837}], LineBox[{1927, 838}], 
       LineBox[{1928, 839}], LineBox[{1932, 843}], LineBox[{1933, 844}], 
       LineBox[{1936, 847}], LineBox[{1937, 848}], LineBox[{1938, 849}], 
       LineBox[{1939, 850}], LineBox[{1941, 852}], LineBox[{1944, 855}], 
       LineBox[{1949, 860}], LineBox[{1950, 861}], LineBox[{1952, 863}], 
       LineBox[{1953, 864}], LineBox[{1954, 865}], LineBox[{1957, 868}], 
       LineBox[{1960, 871}], LineBox[{1961, 872}], LineBox[{1965, 876}], 
       LineBox[{1966, 877}], LineBox[{1970, 881}], LineBox[{1971, 882}], 
       LineBox[{1974, 885}], LineBox[{1975, 886}], LineBox[{1976, 887}], 
       LineBox[{1978, 889}], LineBox[{1987, 898}], LineBox[{1991, 902}], 
       LineBox[{1999, 910}], LineBox[{2000, 911}], LineBox[{2007, 918}], 
       LineBox[{2010, 921}], LineBox[{2011, 922}], LineBox[{2012, 923}], 
       LineBox[{2015, 926}], LineBox[{2019, 930}], LineBox[{2020, 931}], 
       LineBox[{2024, 935}], LineBox[{2025, 936}], LineBox[{2030, 941}], 
       LineBox[{2031, 942}], LineBox[{2032, 943}], LineBox[{2033, 944}], 
       LineBox[{2034, 945}], LineBox[{2035, 946}], LineBox[{2036, 947}], 
       LineBox[{2037, 948}], LineBox[{2039, 950}], LineBox[{2040, 951}], 
       LineBox[{2041, 952}], LineBox[{2042, 953}], LineBox[{2044, 955}], 
       LineBox[{2046, 957}], LineBox[{2047, 958}], LineBox[{2048, 959}], 
       LineBox[{2049, 960}], LineBox[{2052, 963}], LineBox[{2053, 964}], 
       LineBox[{2054, 965}], LineBox[{2058, 969}], LineBox[{2059, 970}], 
       LineBox[{2060, 971}], LineBox[{2061, 972}], LineBox[{2062, 973}], 
       LineBox[{2066, 977}], LineBox[{2067, 978}], LineBox[{2068, 979}], 
       LineBox[{2069, 980}], LineBox[{2072, 983}], LineBox[{2073, 984}], 
       LineBox[{2074, 985}], LineBox[{2075, 986}], LineBox[{2076, 987}], 
       LineBox[{2077, 988}], LineBox[{2078, 989}], LineBox[{2079, 990}], 
       LineBox[{2080, 991}], LineBox[{2082, 993}], LineBox[{2083, 994}], 
       LineBox[{2084, 995}], LineBox[{2085, 996}], LineBox[{2086, 997}], 
       LineBox[{2087, 998}], LineBox[{2088, 999}], LineBox[{2089, 1000}], 
       LineBox[{2090, 1001}], LineBox[{2091, 1002}], LineBox[{2092, 1003}], 
       LineBox[{2093, 1004}], LineBox[{2094, 1005}], LineBox[{2095, 1006}], 
       LineBox[{2096, 1007}], LineBox[{2097, 1008}], LineBox[{2098, 1009}], 
       LineBox[{2099, 1010}], LineBox[{2100, 1011}], LineBox[{2101, 1012}], 
       LineBox[{2102, 1013}], LineBox[{2103, 1014}], LineBox[{2104, 1015}], 
       LineBox[{2105, 1016}], LineBox[{2106, 1017}], LineBox[{2108, 1019}], 
       LineBox[{2109, 1020}], LineBox[{2110, 1021}], LineBox[{2112, 1023}], 
       LineBox[{2113, 1024}], LineBox[{2114, 1025}], LineBox[{2115, 1026}], 
       LineBox[{2116, 1027}], LineBox[{2117, 1028}], LineBox[{2118, 1029}], 
       LineBox[{2119, 1030}], LineBox[{2120, 1031}], LineBox[{2121, 1032}], 
       LineBox[{2123, 1034}], LineBox[{2124, 1035}], LineBox[{2125, 1036}], 
       LineBox[{2126, 1037}], LineBox[{2128, 1039}], LineBox[{2129, 1040}], 
       LineBox[{2130, 1041}], LineBox[{2132, 1043}], LineBox[{2133, 1044}], 
       LineBox[{2136, 1047}], LineBox[{2139, 1050}], LineBox[{2140, 1051}], 
       LineBox[{2141, 1052}], LineBox[{2142, 1053}], LineBox[{2143, 1054}], 
       LineBox[{2144, 1055}], LineBox[{2145, 1056}], LineBox[{2146, 1057}], 
       LineBox[{2147, 1058}], LineBox[{2156, 1067}], LineBox[{2157, 1068}], 
       LineBox[{2163, 1074}], LineBox[{2166, 1077}], LineBox[{2167, 1078}], 
       LineBox[{2171, 1082}], LineBox[{2172, 1083}], LineBox[{2173, 1084}], 
       LineBox[{2176, 1087}], LineBox[{2178, 1089}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{1093, 4}], LineBox[{1095, 6}], LineBox[{1096, 7}], 
       LineBox[{1097, 8}], LineBox[{1098, 9}], LineBox[{1099, 10}], 
       LineBox[{1103, 14}], LineBox[{1104, 15}], LineBox[{1105, 16}], 
       LineBox[{1106, 17}], LineBox[{1107, 18}], LineBox[{1110, 21}], 
       LineBox[{1111, 22}], LineBox[{1112, 23}], LineBox[{1113, 24}], 
       LineBox[{1114, 25}], LineBox[{1117, 28}], LineBox[{1119, 30}], 
       LineBox[{1120, 31}], LineBox[{1121, 32}], LineBox[{1122, 33}], 
       LineBox[{1123, 34}], LineBox[{1124, 35}], LineBox[{1125, 36}], 
       LineBox[{1126, 37}], LineBox[{1130, 41}], LineBox[{1131, 42}], 
       LineBox[{1132, 43}], LineBox[{1133, 44}], LineBox[{1135, 46}], 
       LineBox[{1136, 47}], LineBox[{1137, 48}], LineBox[{1138, 49}], 
       LineBox[{1140, 51}], LineBox[{1141, 52}], LineBox[{1142, 53}], 
       LineBox[{1143, 54}], LineBox[{1144, 55}], LineBox[{1145, 56}], 
       LineBox[{1146, 57}], LineBox[{1147, 58}], LineBox[{1148, 59}], 
       LineBox[{1153, 64}], LineBox[{1154, 65}], LineBox[{1155, 66}], 
       LineBox[{1156, 67}], LineBox[{1157, 68}], LineBox[{1158, 69}], 
       LineBox[{1159, 70}], LineBox[{1160, 71}], LineBox[{1161, 72}], 
       LineBox[{1163, 74}], LineBox[{1164, 75}], LineBox[{1166, 77}], 
       LineBox[{1167, 78}], LineBox[{1168, 79}], LineBox[{1169, 80}], 
       LineBox[{1170, 81}], LineBox[{1171, 82}], LineBox[{1173, 84}], 
       LineBox[{1174, 85}], LineBox[{1176, 87}], LineBox[{1178, 89}], 
       LineBox[{1179, 90}], LineBox[{1182, 93}], LineBox[{1183, 94}], 
       LineBox[{1184, 95}], LineBox[{1186, 97}], LineBox[{1187, 98}], 
       LineBox[{1188, 99}], LineBox[{1190, 101}], LineBox[{1191, 102}], 
       LineBox[{1193, 104}], LineBox[{1194, 105}], LineBox[{1195, 106}], 
       LineBox[{1196, 107}], LineBox[{1197, 108}], LineBox[{1198, 109}], 
       LineBox[{1199, 110}], LineBox[{1200, 111}], LineBox[{1202, 113}], 
       LineBox[{1203, 114}], LineBox[{1204, 115}], LineBox[{1205, 116}], 
       LineBox[{1207, 118}], LineBox[{1213, 124}], LineBox[{1214, 125}], 
       LineBox[{1215, 126}], LineBox[{1216, 127}], LineBox[{1217, 128}], 
       LineBox[{1218, 129}], LineBox[{1219, 130}], LineBox[{1220, 131}], 
       LineBox[{1221, 132}], LineBox[{1222, 133}], LineBox[{1223, 134}], 
       LineBox[{1224, 135}], LineBox[{1225, 136}], LineBox[{1226, 137}], 
       LineBox[{1227, 138}], LineBox[{1228, 139}], LineBox[{1229, 140}], 
       LineBox[{1231, 142}], LineBox[{1232, 143}], LineBox[{1233, 144}], 
       LineBox[{1234, 145}], LineBox[{1238, 149}], LineBox[{1242, 153}], 
       LineBox[{1243, 154}], LineBox[{1244, 155}], LineBox[{1245, 156}], 
       LineBox[{1247, 158}], LineBox[{1248, 159}], LineBox[{1249, 160}], 
       LineBox[{1250, 161}], LineBox[{1251, 162}], LineBox[{1252, 163}], 
       LineBox[{1253, 164}], LineBox[{1254, 165}], LineBox[{1255, 166}], 
       LineBox[{1256, 167}], LineBox[{1257, 168}], LineBox[{1258, 169}], 
       LineBox[{1259, 170}], LineBox[{1261, 172}], LineBox[{1263, 174}], 
       LineBox[{1264, 175}], LineBox[{1269, 180}], LineBox[{1270, 181}], 
       LineBox[{1271, 182}], LineBox[{1274, 185}], LineBox[{1275, 186}], 
       LineBox[{1276, 187}], LineBox[{1277, 188}], LineBox[{1278, 189}], 
       LineBox[{1279, 190}], LineBox[{1280, 191}], LineBox[{1281, 192}], 
       LineBox[{1282, 193}], LineBox[{1283, 194}], LineBox[{1285, 196}], 
       LineBox[{1286, 197}], LineBox[{1287, 198}], LineBox[{1288, 199}], 
       LineBox[{1289, 200}], LineBox[{1290, 201}], LineBox[{1291, 202}], 
       LineBox[{1292, 203}], LineBox[{1295, 206}], LineBox[{1296, 207}], 
       LineBox[{1297, 208}], LineBox[{1298, 209}], LineBox[{1299, 210}], 
       LineBox[{1300, 211}], LineBox[{1301, 212}], LineBox[{1302, 213}], 
       LineBox[{1303, 214}], LineBox[{1304, 215}], LineBox[{1305, 216}], 
       LineBox[{1308, 219}], LineBox[{1309, 220}], LineBox[{1310, 221}], 
       LineBox[{1311, 222}], LineBox[{1313, 224}], LineBox[{1314, 225}], 
       LineBox[{1315, 226}], LineBox[{1316, 227}], LineBox[{1317, 228}], 
       LineBox[{1318, 229}], LineBox[{1320, 231}], LineBox[{1321, 232}], 
       LineBox[{1322, 233}], LineBox[{1323, 234}], LineBox[{1324, 235}], 
       LineBox[{1327, 238}], LineBox[{1328, 239}], LineBox[{1329, 240}], 
       LineBox[{1330, 241}], LineBox[{1332, 243}], LineBox[{1333, 244}], 
       LineBox[{1343, 254}], LineBox[{1344, 255}], LineBox[{1354, 265}], 
       LineBox[{1355, 266}], LineBox[{1374, 285}], LineBox[{1379, 290}], 
       LineBox[{1384, 295}], LineBox[{1385, 296}], LineBox[{1390, 301}], 
       LineBox[{1395, 306}], LineBox[{1397, 308}], LineBox[{1398, 309}], 
       LineBox[{1416, 327}], LineBox[{1430, 341}], LineBox[{1445, 356}], 
       LineBox[{1446, 357}], LineBox[{1447, 358}], LineBox[{1453, 364}], 
       LineBox[{1454, 365}], LineBox[{1455, 366}], LineBox[{1456, 367}], 
       LineBox[{1457, 368}], LineBox[{1458, 369}], LineBox[{1459, 370}], 
       LineBox[{1460, 371}], LineBox[{1461, 372}], LineBox[{1462, 373}], 
       LineBox[{1470, 381}], LineBox[{1471, 382}], LineBox[{1476, 387}], 
       LineBox[{1482, 393}], LineBox[{1489, 400}], LineBox[{1490, 401}], 
       LineBox[{1495, 406}], LineBox[{1497, 408}], LineBox[{1498, 409}], 
       LineBox[{1499, 410}], LineBox[{1504, 415}], LineBox[{1505, 416}], 
       LineBox[{1512, 423}], LineBox[{1513, 424}], LineBox[{1514, 425}], 
       LineBox[{1521, 432}], LineBox[{1524, 435}], LineBox[{1525, 436}], 
       LineBox[{1528, 439}], LineBox[{1529, 440}], LineBox[{1530, 441}], 
       LineBox[{1531, 442}], LineBox[{1532, 443}], LineBox[{1533, 444}], 
       LineBox[{1535, 446}], LineBox[{1539, 450}], LineBox[{1542, 453}], 
       LineBox[{1559, 470}], LineBox[{1560, 471}], LineBox[{1562, 473}], 
       LineBox[{1566, 477}], LineBox[{1568, 479}], LineBox[{1569, 480}], 
       LineBox[{1570, 481}], LineBox[{1586, 497}], LineBox[{1587, 498}], 
       LineBox[{1588, 499}], LineBox[{1589, 500}], LineBox[{1597, 508}], 
       LineBox[{1598, 509}], LineBox[{1604, 515}], LineBox[{1605, 516}], 
       LineBox[{1606, 517}], LineBox[{1607, 518}], LineBox[{1610, 521}], 
       LineBox[{1613, 524}], LineBox[{1616, 527}], LineBox[{1617, 528}], 
       LineBox[{1618, 529}], LineBox[{1621, 532}], LineBox[{1623, 534}], 
       LineBox[{1628, 539}], LineBox[{1629, 540}], LineBox[{1630, 541}], 
       LineBox[{1634, 545}], LineBox[{1636, 547}], LineBox[{1637, 548}], 
       LineBox[{1638, 549}], LineBox[{1639, 550}], LineBox[{1641, 552}], 
       LineBox[{1643, 554}], LineBox[{1644, 555}], LineBox[{1645, 556}], 
       LineBox[{1646, 557}], LineBox[{1648, 559}], LineBox[{1649, 560}], 
       LineBox[{1650, 561}], LineBox[{1651, 562}], LineBox[{1653, 564}], 
       LineBox[{1656, 567}], LineBox[{1658, 569}], LineBox[{1659, 570}], 
       LineBox[{1662, 573}], LineBox[{1664, 575}], LineBox[{1671, 582}], 
       LineBox[{1672, 583}], LineBox[{1673, 584}], LineBox[{1674, 585}], 
       LineBox[{1675, 586}], LineBox[{1676, 587}], LineBox[{1677, 588}], 
       LineBox[{1680, 591}], LineBox[{1681, 592}], LineBox[{1685, 596}], 
       LineBox[{1686, 597}], LineBox[{1690, 601}], LineBox[{1691, 602}], 
       LineBox[{1692, 603}], LineBox[{1694, 605}], LineBox[{1696, 607}], 
       LineBox[{1701, 612}], LineBox[{1711, 622}], LineBox[{1714, 625}], 
       LineBox[{1720, 631}], LineBox[{1729, 640}], LineBox[{1736, 647}], 
       LineBox[{1738, 649}], LineBox[{1739, 650}], LineBox[{1740, 651}], 
       LineBox[{1741, 652}], LineBox[{1751, 662}], LineBox[{1757, 668}], 
       LineBox[{1764, 675}], LineBox[{1770, 681}], LineBox[{1772, 683}], 
       LineBox[{1778, 689}], LineBox[{1779, 690}], LineBox[{1780, 691}], 
       LineBox[{1785, 696}], LineBox[{1787, 698}], LineBox[{1788, 699}], 
       LineBox[{1789, 700}], LineBox[{1790, 701}], LineBox[{1792, 703}], 
       LineBox[{1793, 704}], LineBox[{1794, 705}], LineBox[{1795, 706}], 
       LineBox[{1796, 707}], LineBox[{1803, 714}], LineBox[{1810, 721}], 
       LineBox[{1814, 725}], LineBox[{1815, 726}], LineBox[{1816, 727}], 
       LineBox[{1817, 728}], LineBox[{1818, 729}], LineBox[{1819, 730}], 
       LineBox[{1820, 731}], LineBox[{1821, 732}], LineBox[{1824, 735}], 
       LineBox[{1826, 737}], LineBox[{1827, 738}], LineBox[{1828, 739}], 
       LineBox[{1830, 741}], LineBox[{1831, 742}], LineBox[{1832, 743}], 
       LineBox[{1833, 744}], LineBox[{1835, 746}], LineBox[{1836, 747}], 
       LineBox[{1842, 753}], LineBox[{1854, 765}], LineBox[{1855, 766}], 
       LineBox[{1856, 767}], LineBox[{1857, 768}], LineBox[{1859, 770}], 
       LineBox[{1860, 771}], LineBox[{1861, 772}], LineBox[{1862, 773}], 
       LineBox[{1867, 778}], LineBox[{1870, 781}], LineBox[{1871, 782}], 
       LineBox[{1872, 783}], LineBox[{1873, 784}], LineBox[{1874, 785}], 
       LineBox[{1875, 786}], LineBox[{1876, 787}], LineBox[{1877, 788}], 
       LineBox[{1882, 793}], LineBox[{1885, 796}], LineBox[{1887, 798}], 
       LineBox[{1893, 804}], LineBox[{1894, 805}], LineBox[{1898, 809}], 
       LineBox[{1899, 810}], LineBox[{1900, 811}], LineBox[{1903, 814}], 
       LineBox[{1904, 815}], LineBox[{1905, 816}], LineBox[{1907, 818}], 
       LineBox[{1909, 820}], LineBox[{1910, 821}], LineBox[{1912, 823}], 
       LineBox[{1914, 825}], LineBox[{1915, 826}], LineBox[{1916, 827}], 
       LineBox[{1917, 828}], LineBox[{1929, 840}], LineBox[{1930, 841}], 
       LineBox[{1931, 842}], LineBox[{1934, 845}], LineBox[{1935, 846}], 
       LineBox[{1940, 851}], LineBox[{1942, 853}], LineBox[{1943, 854}], 
       LineBox[{1945, 856}], LineBox[{1946, 857}], LineBox[{1947, 858}], 
       LineBox[{1948, 859}], LineBox[{1951, 862}], LineBox[{1955, 866}], 
       LineBox[{1956, 867}], LineBox[{1958, 869}], LineBox[{1959, 870}], 
       LineBox[{1962, 873}], LineBox[{1963, 874}], LineBox[{1964, 875}], 
       LineBox[{1967, 878}], LineBox[{1968, 879}], LineBox[{1969, 880}], 
       LineBox[{1972, 883}], LineBox[{1973, 884}], LineBox[{1977, 888}], 
       LineBox[{1979, 890}], LineBox[{1980, 891}], LineBox[{1981, 892}], 
       LineBox[{1982, 893}], LineBox[{1983, 894}], LineBox[{1984, 895}], 
       LineBox[{1985, 896}], LineBox[{1986, 897}], LineBox[{1988, 899}], 
       LineBox[{1989, 900}], LineBox[{1990, 901}], LineBox[{1992, 903}], 
       LineBox[{1993, 904}], LineBox[{1994, 905}], LineBox[{1995, 906}], 
       LineBox[{1996, 907}], LineBox[{1997, 908}], LineBox[{1998, 909}], 
       LineBox[{2001, 912}], LineBox[{2002, 913}], LineBox[{2003, 914}], 
       LineBox[{2004, 915}], LineBox[{2005, 916}], LineBox[{2006, 917}], 
       LineBox[{2008, 919}], LineBox[{2009, 920}], LineBox[{2013, 924}], 
       LineBox[{2014, 925}], LineBox[{2016, 927}], LineBox[{2017, 928}], 
       LineBox[{2018, 929}], LineBox[{2021, 932}], LineBox[{2022, 933}], 
       LineBox[{2023, 934}], LineBox[{2026, 937}], LineBox[{2027, 938}], 
       LineBox[{2028, 939}], LineBox[{2029, 940}], LineBox[{2038, 949}], 
       LineBox[{2043, 954}], LineBox[{2045, 956}], LineBox[{2050, 961}], 
       LineBox[{2051, 962}], LineBox[{2055, 966}], LineBox[{2056, 967}], 
       LineBox[{2057, 968}], LineBox[{2063, 974}], LineBox[{2064, 975}], 
       LineBox[{2065, 976}], LineBox[{2070, 981}], LineBox[{2071, 982}], 
       LineBox[{2081, 992}], LineBox[{2107, 1018}], LineBox[{2111, 1022}], 
       LineBox[{2122, 1033}], LineBox[{2127, 1038}], LineBox[{2131, 1042}], 
       LineBox[{2134, 1045}], LineBox[{2135, 1046}], LineBox[{2137, 1048}], 
       LineBox[{2138, 1049}], LineBox[{2148, 1059}], LineBox[{2149, 1060}], 
       LineBox[{2150, 1061}], LineBox[{2151, 1062}], LineBox[{2152, 1063}], 
       LineBox[{2153, 1064}], LineBox[{2154, 1065}], LineBox[{2155, 1066}], 
       LineBox[{2158, 1069}], LineBox[{2159, 1070}], LineBox[{2160, 1071}], 
       LineBox[{2161, 1072}], LineBox[{2162, 1073}], LineBox[{2164, 1075}], 
       LineBox[{2165, 1076}], LineBox[{2168, 1079}], LineBox[{2169, 1080}], 
       LineBox[{2170, 1081}], LineBox[{2174, 1085}], LineBox[{2175, 1086}], 
       LineBox[{2177, 1088}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.004583333333333334], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwN00OiGAoCALA3tW3btm3btm392rZt27Zt27Y7WeQISdiofaV2/wsICCgY
JCBgUIiAgMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7z
mM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exhL/vY
zwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu97jP
Ax7yiMc84SnPeM4LXvKK17zhLe94zwc+8onPfOEr3/jOD37yi9/84S//CAgZ
EPA/AhGYIAQlGMEJQUhCEZowhCUc4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJ
QEISkZgkJCUZyUlBSlKRmjSkJR3pyUBGMpGZLGQlG9nJQU5ykZs85CUf+SlA
QQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa1alBTWpRmzrUpR71aUBD
GtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50pRvd6UFPetGbPvSlH//RnwEM
ZBCDGcJQhjGcEYxkFKMZw1jGMZ4JTGQSk5nCVKYxnRnMZBazmcNc5jGfBSxk
EYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb2cJWtrGdHexkF7vZw172sZ8DHOQQ
hznCUY5xnBOc5BSnOcNZznGeC1zkEpe5wlWucZ0b3OQWt7nDXe5xnwc85BGP
ecJTnvGcF7zkFa95w1ve8Z4PfOQTn/nCV77xnR/85Be/+cNf/hEQyn8CEZgg
BCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4xCUe8UlAQhKRmCQk
JRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzkJR/5KUBBClGYIhSl
GMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSlHvVpQEMa0ZgmNKUZ
zWlBS1rRmja0pR3t6UBHOtGZLnSlG93pQU960Zs+9KUf/9GfAQxkEIMZwlCG
MZwRjGQUoxnDWMYxnglMZBKTmcJUpjGdGcxkFrOZw1zmMZ8FLGQRi1nCUpax
nBWsZBWrWcNa1rGeDWxkE5vZwla2sZ0d7GQXu9nDXvaxnwMc5BCHOcJRjnGc
E5zkFKc5w1nOcZ4LXOQSl7nCVa5xnRvc5Ba3ucNd7nGfBzzkEY95wlOe8ZwX
vOQVr3nDW97xng985BOf+cJXvvGdH/zkF7/5w1/+ERDafwIRmCAEJRjBCUFI
QhGaMIQlHOGJQEQiEZkoRCUa0YlBTGIRmzjEJR7xSUBCEpGYJCQlGclJQUpS
kZo0pCUd6clARjKRmSxkJRvZyUFOcpGbPOQlH/kpQEEKUZgiFKUYxSlBSUpR
mjKUpRzlqUBFKlGZKlSlGtWpQU1qUZs61KUe9WlAQxrRmCY0pRnNaUFLWtGa
NrSlHe3pQEc60ZkudKUb3elBT3rRmz70pR//0Z8BDGQQgxnCUIYxnBGMZBSj
GcNYxjGeCUxkEpOZwlSmMZ0ZzGQWs5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZ
w1rWsZ4NbGQTm9nCVraxnR3sZBe72cNe9rGfAxzkEIc5wlGOcZwTnOQUpznD
Wc5xngtc5BKXucJVrnGdG9zkFre5w13ucZ8HPOQRj3nCU57xnBe85BWvecNb
3vGeD3zkE5/5wle+8Z0f/OQXv/nDX/4REMZ/AhGYIAQlGMEJQUhCEZowhCUc
4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJQEISkZgkJCUZyUlBSlKRmjSkJR3p
yUBGMpGZLGQlG9nJQU5ykZs85CUf+SlAQQpRmCIUpRjFKUFJSlGaMpSlHOWp
QEUqUZkqVKUa1alBTWpRmzrUpR71aUBDGtGYJjSlGc1pQUta0Zo2tKUd7elA
RzrRmS50pRvd6UFPetGbPvSlH//RnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4J
TGQSk5nCVKYxnRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1s
ZBOb2cJWtrGdHexkF7vZw172sZ8DHOQQ/wfgGlSS
        "]]}, {}}}], {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"actual value - predicted value\"", TraditionalForm], None}, {
     FormBox["\"predicted value\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.005199204276818118, 
   0.004930788122441921}, {-4.494807010192735, 4.494807010192735}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7100622526876993`*^9, 3.7100689088942623`*^9, 
  3.7100698934030924`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<StandardDeviation\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.709930734296636*^9, 3.7099307352898397`*^9}}],

Cell[BoxData["0.9993784376665875`"], "Output",
 CellChangeTimes->{3.709937889497173*^9, 3.7099381057540903`*^9, 
  3.7099382487961483`*^9, 3.7100619462167606`*^9, 3.7100689138482523`*^9, 
  3.7100698934771066`*^9, 3.710069960347476*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"Standardize", "[", 
   RowBox[{"testset", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "9"}], "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7099381237497497`*^9, 3.7099381246489286`*^9}, {
  3.7099382551514387`*^9, 3.70993825550651*^9}, {3.7099384170603366`*^9, 
  3.70993843079912*^9}, {3.7100689575639935`*^9, 3.710068965793638*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.567], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.567], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-4., 0}, {-3.5, 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{42.7824459567654, 76.3014046531343}, {
          157.36906050615673`, 159.66476806739308`}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-3., 0}, {-2.5, 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{108.12036334950312`, 141.63932204587198`}, {
          157.36906050615673`, 159.66476806739308`}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-2.5, 0}, {-2., 6}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{140.78932204587196`, 174.3082807422408}, {
          150.14052269997492`, 159.66476806739308`}}],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-2., 0}, {-1.5, 31}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{173.45828074224082`, 206.97723943860967`}, {
          113.99783366906591`, 159.66476806739308`}}],
        StatusArea[#, 31]& ,
        TagBoxNote->"31"],
       StyleBox["31", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[31, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-1.5, 0}, {-1., 104}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{206.12723943860968`, 239.6461981349785}, {
          8.461181698811686, 159.66476806739308`}}],
        StatusArea[#, 104]& ,
        TagBoxNote->"104"],
       StyleBox["104", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[104, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-1., 0}, {-0.5, 230}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{238.7961981349785, 
          272.3151568313474}, {-173.6979710169697, 159.66476806739308`}}],
        StatusArea[#, 230]& ,
        TagBoxNote->"230"],
       StyleBox["230", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[230, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-0.5, 0}, {0., 226}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{271.4651568313474, 
          304.98411552771626`}, {-167.91514077202424`, 159.66476806739308`}}],
        StatusArea[#, 226]& ,
        TagBoxNote->"226"],
       StyleBox["226", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[226, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {0.5, 206}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{304.13411552771623`, 
          337.6530742240851}, {-139.00098954729702`, 159.66476806739308`}}],
        StatusArea[#, 206]& ,
        TagBoxNote->"206"],
       StyleBox["206", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[206, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.5, 0}, {1., 116}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{336.8030742240851, 
          370.322032920454}, {-8.887309036024647, 159.66476806739308`}}],
        StatusArea[#, 116]& ,
        TagBoxNote->"116"],
       StyleBox["116", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[116, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1., 0}, {1.5, 88}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{369.47203292045396`, 402.9909916168228}, {
          31.592502678593405`, 159.66476806739308`}}],
        StatusArea[#, 88]& ,
        TagBoxNote->"88"],
       StyleBox["88", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[88, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.5, 0}, {2., 39}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{402.14099161682276`, 435.6599503131917}, {
          102.43217317917505`, 159.66476806739308`}}],
        StatusArea[#, 39]& ,
        TagBoxNote->"39"],
       StyleBox["39", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[39, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2., 0}, {2.5, 21}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{434.8099503131917, 468.3289090095605}, {
          128.45490928142954`, 159.66476806739308`}}],
        StatusArea[#, 21]& ,
        TagBoxNote->"21"],
       StyleBox["21", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[21, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2.5, 0}, {3., 9}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{467.4789090095605, 500.99786770592937`}, {
          145.80340001626584`, 159.66476806739308`}}],
        StatusArea[#, 9]& ,
        TagBoxNote->"9"],
       StyleBox["9", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[9, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3., 0}, {3.5, 5}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{500.14786770592934`, 533.6668264022983}, {
          151.58623026121128`, 159.66476806739308`}}],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3.5, 0}, {4., 3}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{532.8168264022981, 566.3357850986671}, {
          154.477645383684, 159.66476806739308`}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4., 0}, {4.5, 3}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{565.4857850986671, 599.0047437950361}, {
          154.477645383684, 159.66476806739308`}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-4.17, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-4., 4.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7099384314132457`*^9, 3.7100619552729244`*^9, {3.7100689473029413`*^9, 
   3.7100689663737545`*^9}, 3.7100698935651245`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ResidualHistogram\>\"", "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.567], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.567], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-4., 0}, {-3.5, 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{69.79400000000004, 101.75647058823536`}, {
          137.51824734718394`, 139.78082610175454`}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-3., 0}, {-2.5, 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{132.0189411764706, 163.9814117647059}, {
          137.51824734718394`, 139.78082610175454`}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-2.5, 0}, {-2., 6}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{163.13141176470592`, 195.0938823529412}, {
          130.45535357433096`, 139.78082610175454`}}],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-2., 0}, {-1.5, 31}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{194.2438823529412, 226.20635294117648`}, {
          95.140884710066, 139.78082610175454`}}],
        StatusArea[#, 31]& ,
        TagBoxNote->"31"],
       StyleBox["31", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[31, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-1.5, 0}, {-1., 104}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{225.35635294117648`, 
          257.3188235294118}, {-7.977364373587591, 139.78082610175454`}}],
        StatusArea[#, 104]& ,
        TagBoxNote->"104"],
       StyleBox["104", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[104, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-1., 0}, {-0.5, 229}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{256.4688235294118, 
          288.4312941176471}, {-184.54970869491228`, 139.78082610175454`}}],
        StatusArea[#, 229]& ,
        TagBoxNote->"229"],
       StyleBox["229", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[229, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-0.5, 0}, {0., 227}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{287.5812941176471, 
          319.5437647058824}, {-181.72455118577108`, 139.78082610175454`}}],
        StatusArea[#, 227]& ,
        TagBoxNote->"227"],
       StyleBox["227", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[227, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {0.5, 207}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{318.69376470588236`, 
          350.65623529411766`}, {-153.47297609435913`, 139.78082610175454`}}],
        StatusArea[#, 207]& ,
        TagBoxNote->"207"],
       StyleBox["207", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[207, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.5, 0}, {1., 114}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{349.80623529411764`, 
          381.76870588235295`}, {-22.103151919293566`, 139.78082610175454`}}],
        StatusArea[#, 114]& ,
        TagBoxNote->"114"],
       StyleBox["114", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[114, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1., 0}, {1.5, 90}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{380.9187058823529, 412.8811764705883}, {
          11.798738190400769`, 139.78082610175454`}}],
        StatusArea[#, 90]& ,
        TagBoxNote->"90"],
       StyleBox["90", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[90, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.5, 0}, {2., 38}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{412.03117647058826`, 443.99364705882357`}, {
          85.25283342807184, 139.78082610175454`}}],
        StatusArea[#, 38]& ,
        TagBoxNote->"38"],
       StyleBox["38", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[38, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2., 0}, {2.5, 21}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{443.14364705882355`, 475.10611764705885`}, {
          109.26667225577198`, 139.78082610175454`}}],
        StatusArea[#, 21]& ,
        TagBoxNote->"21"],
       StyleBox["21", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[21, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2.5, 0}, {3., 9}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{474.25611764705883`, 506.21858823529413`}, {
          126.21761731061916`, 139.78082610175454`}}],
        StatusArea[#, 9]& ,
        TagBoxNote->"9"],
       StyleBox["9", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[9, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3., 0}, {3.5, 5}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{505.3685882352941, 537.3310588235295}, {
          131.86793232890156`, 139.78082610175454`}}],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3.5, 0}, {4., 3}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{536.4810588235293, 568.4435294117648}, {
          134.69308983804277`, 139.78082610175454`}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4., 0}, {4.5, 3}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{567.5935294117646, 599.556}, {134.69308983804277`, 
          139.78082610175454`}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{-4.17, 0},
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"count\"", TraditionalForm], None}, {
     FormBox["\"actual value - predicted value\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-4., 4.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7099378896581917`*^9, 3.7099381104010344`*^9, 3.7099382577689695`*^9, 
   3.710061962211751*^9, {3.7100689522139235`*^9, 3.7100689702625313`*^9}, 
   3.710069893656142*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ResidualPlot\>\"", "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
v3n4wY+2a2g/NNv65vawrmWUf3NaTJ7YOQD52a4wqW0COV1gPCvbJ5dKtL9c
SnQvqU4Y2h89+frsFd7cEWjPbKGH2oMJ5esSMxw/lrykyCf63rN7TKFrZRD3
JOXN1OCegfrVtGNznPlrEGfvVKn1F0f7pyvfJOXR7kb7wSWYFCk2726A/Sb3
FLJ6z0D5F1SuI8/NP2OI62Oxs+zqzpgZsFFoWVj9Sxysn67DJueTD6Dx25Dg
PrG5htazyf4Hs4klKJ86Lzj7UUsKfa9JO7mQgF+Zg/HbqeCtEDyJfn/hZt2r
kYUGtF5Fj9abq8lPYw9lXCkuPGODpW9wEY9mmccQfSyPXVboAspHS9eqiKlb
o/yc0MzIq2yFNii/o+1mac2LLhiPHz0xnHedSOSIvpMXd4CLBM1Xy0XbSAWF
IrAYz8qzmMVmeL8dVi/0YhoHUf72EH9W8DQptGdo36ZY6rMF7Jji8+yZPQWY
VTj6y/Qt5G9X2Xh2TlKDt94QsOKiQ/ni2Zn54x0kqD9BQ2Y0Abyj8H6kQwyL
SS+6YLyMHoo54WcGwFMRFxIaW1ugvOxUqVZueSV4MPy0g//lMbCSmddGiXsq
1B81uP6xSLIRzBu12xKniH6+vrF7uN0s6Ib+OZ/od2FrnIP5OGvrfayvEq0P
hmEKqcLwH1Ce/uljaowTyq+R/P///OO/18R8xV/lX/38f/yP/0oT87X/zr+6
f3/3+xLPz/ifatgP/l/EP1tvf9a/+v3+8X/WxHznrzJx/+c//v/++avn68/2
h5hP+cd/j//q9UPM///jv8Z/dn6J5zv8O/++/B/t38/a/0+bmK/53+p/xvMf
/0oT82X/Wwz7q/9D/rPz82efD+d7/F+amG/97+q/O9/5V6+X/3S+lnj+wX/K
vzo//atN/H30/yn+/fz+6uf/1f7Z84nnF/xP9R+dj/9q/fmr/avzb/9p/378
iedn/Lvx+aPx3/tn8/378r/v7x+dz9+3Rzwv4b+rfzaff3V7f9Z/9/N+1v4f
zZf9vj3i+RT/zj8b35/V/6v9q5//V5t4HgjRfzS/+T8tH/pH871/db7/r+7v
/7bvD//V89P/1fz79yPu3/x3/ll7P6v/q/1H+/ur5+fP+lfnR/+r+/fz/XfX
/7PP+0/nX3/m3+eHifuJ/135n73Pn82v/9n3+X3/f+Y/O3+/j//qfO+f9e/n
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
    "], {{{}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{1090, 1}], LineBox[{1091, 2}], LineBox[{1092, 3}], 
       LineBox[{1094, 5}], LineBox[{1100, 11}], LineBox[{1101, 12}], 
       LineBox[{1102, 13}], LineBox[{1108, 19}], LineBox[{1109, 20}], 
       LineBox[{1115, 26}], LineBox[{1116, 27}], LineBox[{1118, 29}], 
       LineBox[{1127, 38}], LineBox[{1128, 39}], LineBox[{1129, 40}], 
       LineBox[{1134, 45}], LineBox[{1139, 50}], LineBox[{1149, 60}], 
       LineBox[{1150, 61}], LineBox[{1151, 62}], LineBox[{1152, 63}], 
       LineBox[{1162, 73}], LineBox[{1165, 76}], LineBox[{1172, 83}], 
       LineBox[{1175, 86}], LineBox[{1177, 88}], LineBox[{1180, 91}], 
       LineBox[{1181, 92}], LineBox[{1185, 96}], LineBox[{1189, 100}], 
       LineBox[{1192, 103}], LineBox[{1201, 112}], LineBox[{1206, 117}], 
       LineBox[{1208, 119}], LineBox[{1209, 120}], LineBox[{1210, 121}], 
       LineBox[{1211, 122}], LineBox[{1212, 123}], LineBox[{1230, 141}], 
       LineBox[{1235, 146}], LineBox[{1236, 147}], LineBox[{1237, 148}], 
       LineBox[{1239, 150}], LineBox[{1240, 151}], LineBox[{1241, 152}], 
       LineBox[{1246, 157}], LineBox[{1260, 171}], LineBox[{1262, 173}], 
       LineBox[{1265, 176}], LineBox[{1266, 177}], LineBox[{1267, 178}], 
       LineBox[{1268, 179}], LineBox[{1272, 183}], LineBox[{1273, 184}], 
       LineBox[{1284, 195}], LineBox[{1293, 204}], LineBox[{1294, 205}], 
       LineBox[{1306, 217}], LineBox[{1307, 218}], LineBox[{1312, 223}], 
       LineBox[{1319, 230}], LineBox[{1325, 236}], LineBox[{1326, 237}], 
       LineBox[{1331, 242}], LineBox[{1334, 245}], LineBox[{1335, 246}], 
       LineBox[{1336, 247}], LineBox[{1337, 248}], LineBox[{1338, 249}], 
       LineBox[{1339, 250}], LineBox[{1340, 251}], LineBox[{1341, 252}], 
       LineBox[{1342, 253}], LineBox[{1345, 256}], LineBox[{1346, 257}], 
       LineBox[{1347, 258}], LineBox[{1348, 259}], LineBox[{1349, 260}], 
       LineBox[{1350, 261}], LineBox[{1351, 262}], LineBox[{1352, 263}], 
       LineBox[{1353, 264}], LineBox[{1356, 267}], LineBox[{1357, 268}], 
       LineBox[{1358, 269}], LineBox[{1359, 270}], LineBox[{1360, 271}], 
       LineBox[{1361, 272}], LineBox[{1362, 273}], LineBox[{1363, 274}], 
       LineBox[{1364, 275}], LineBox[{1365, 276}], LineBox[{1366, 277}], 
       LineBox[{1367, 278}], LineBox[{1368, 279}], LineBox[{1369, 280}], 
       LineBox[{1370, 281}], LineBox[{1371, 282}], LineBox[{1372, 283}], 
       LineBox[{1373, 284}], LineBox[{1375, 286}], LineBox[{1376, 287}], 
       LineBox[{1377, 288}], LineBox[{1378, 289}], LineBox[{1380, 291}], 
       LineBox[{1381, 292}], LineBox[{1382, 293}], LineBox[{1383, 294}], 
       LineBox[{1386, 297}], LineBox[{1387, 298}], LineBox[{1388, 299}], 
       LineBox[{1389, 300}], LineBox[{1391, 302}], LineBox[{1392, 303}], 
       LineBox[{1393, 304}], LineBox[{1394, 305}], LineBox[{1396, 307}], 
       LineBox[{1399, 310}], LineBox[{1400, 311}], LineBox[{1401, 312}], 
       LineBox[{1402, 313}], LineBox[{1403, 314}], LineBox[{1404, 315}], 
       LineBox[{1405, 316}], LineBox[{1406, 317}], LineBox[{1407, 318}], 
       LineBox[{1408, 319}], LineBox[{1409, 320}], LineBox[{1410, 321}], 
       LineBox[{1411, 322}], LineBox[{1412, 323}], LineBox[{1413, 324}], 
       LineBox[{1414, 325}], LineBox[{1415, 326}], LineBox[{1417, 328}], 
       LineBox[{1418, 329}], LineBox[{1419, 330}], LineBox[{1420, 331}], 
       LineBox[{1421, 332}], LineBox[{1422, 333}], LineBox[{1423, 334}], 
       LineBox[{1424, 335}], LineBox[{1425, 336}], LineBox[{1426, 337}], 
       LineBox[{1427, 338}], LineBox[{1428, 339}], LineBox[{1429, 340}], 
       LineBox[{1431, 342}], LineBox[{1432, 343}], LineBox[{1433, 344}], 
       LineBox[{1434, 345}], LineBox[{1435, 346}], LineBox[{1436, 347}], 
       LineBox[{1437, 348}], LineBox[{1438, 349}], LineBox[{1439, 350}], 
       LineBox[{1440, 351}], LineBox[{1441, 352}], LineBox[{1442, 353}], 
       LineBox[{1443, 354}], LineBox[{1444, 355}], LineBox[{1448, 359}], 
       LineBox[{1449, 360}], LineBox[{1450, 361}], LineBox[{1451, 362}], 
       LineBox[{1452, 363}], LineBox[{1463, 374}], LineBox[{1464, 375}], 
       LineBox[{1465, 376}], LineBox[{1466, 377}], LineBox[{1467, 378}], 
       LineBox[{1468, 379}], LineBox[{1469, 380}], LineBox[{1472, 383}], 
       LineBox[{1473, 384}], LineBox[{1474, 385}], LineBox[{1475, 386}], 
       LineBox[{1477, 388}], LineBox[{1478, 389}], LineBox[{1479, 390}], 
       LineBox[{1480, 391}], LineBox[{1481, 392}], LineBox[{1483, 394}], 
       LineBox[{1484, 395}], LineBox[{1485, 396}], LineBox[{1486, 397}], 
       LineBox[{1487, 398}], LineBox[{1488, 399}], LineBox[{1491, 402}], 
       LineBox[{1492, 403}], LineBox[{1493, 404}], LineBox[{1494, 405}], 
       LineBox[{1496, 407}], LineBox[{1500, 411}], LineBox[{1501, 412}], 
       LineBox[{1502, 413}], LineBox[{1503, 414}], LineBox[{1506, 417}], 
       LineBox[{1507, 418}], LineBox[{1508, 419}], LineBox[{1509, 420}], 
       LineBox[{1510, 421}], LineBox[{1511, 422}], LineBox[{1515, 426}], 
       LineBox[{1516, 427}], LineBox[{1517, 428}], LineBox[{1518, 429}], 
       LineBox[{1519, 430}], LineBox[{1520, 431}], LineBox[{1522, 433}], 
       LineBox[{1523, 434}], LineBox[{1526, 437}], LineBox[{1527, 438}], 
       LineBox[{1534, 445}], LineBox[{1536, 447}], LineBox[{1537, 448}], 
       LineBox[{1538, 449}], LineBox[{1540, 451}], LineBox[{1541, 452}], 
       LineBox[{1543, 454}], LineBox[{1544, 455}], LineBox[{1545, 456}], 
       LineBox[{1546, 457}], LineBox[{1547, 458}], LineBox[{1548, 459}], 
       LineBox[{1549, 460}], LineBox[{1550, 461}], LineBox[{1551, 462}], 
       LineBox[{1552, 463}], LineBox[{1553, 464}], LineBox[{1554, 465}], 
       LineBox[{1555, 466}], LineBox[{1556, 467}], LineBox[{1557, 468}], 
       LineBox[{1558, 469}], LineBox[{1561, 472}], LineBox[{1563, 474}], 
       LineBox[{1564, 475}], LineBox[{1565, 476}], LineBox[{1567, 478}], 
       LineBox[{1571, 482}], LineBox[{1572, 483}], LineBox[{1573, 484}], 
       LineBox[{1574, 485}], LineBox[{1575, 486}], LineBox[{1576, 487}], 
       LineBox[{1577, 488}], LineBox[{1578, 489}], LineBox[{1579, 490}], 
       LineBox[{1580, 491}], LineBox[{1581, 492}], LineBox[{1582, 493}], 
       LineBox[{1583, 494}], LineBox[{1584, 495}], LineBox[{1585, 496}], 
       LineBox[{1590, 501}], LineBox[{1591, 502}], LineBox[{1592, 503}], 
       LineBox[{1593, 504}], LineBox[{1594, 505}], LineBox[{1595, 506}], 
       LineBox[{1596, 507}], LineBox[{1599, 510}], LineBox[{1600, 511}], 
       LineBox[{1601, 512}], LineBox[{1602, 513}], LineBox[{1603, 514}], 
       LineBox[{1608, 519}], LineBox[{1609, 520}], LineBox[{1611, 522}], 
       LineBox[{1612, 523}], LineBox[{1614, 525}], LineBox[{1615, 526}], 
       LineBox[{1619, 530}], LineBox[{1620, 531}], LineBox[{1622, 533}], 
       LineBox[{1624, 535}], LineBox[{1625, 536}], LineBox[{1626, 537}], 
       LineBox[{1627, 538}], LineBox[{1631, 542}], LineBox[{1632, 543}], 
       LineBox[{1633, 544}], LineBox[{1635, 546}], LineBox[{1640, 551}], 
       LineBox[{1642, 553}], LineBox[{1647, 558}], LineBox[{1652, 563}], 
       LineBox[{1654, 565}], LineBox[{1655, 566}], LineBox[{1657, 568}], 
       LineBox[{1660, 571}], LineBox[{1661, 572}], LineBox[{1663, 574}], 
       LineBox[{1665, 576}], LineBox[{1666, 577}], LineBox[{1667, 578}], 
       LineBox[{1668, 579}], LineBox[{1669, 580}], LineBox[{1670, 581}], 
       LineBox[{1678, 589}], LineBox[{1679, 590}], LineBox[{1682, 593}], 
       LineBox[{1683, 594}], LineBox[{1684, 595}], LineBox[{1687, 598}], 
       LineBox[{1688, 599}], LineBox[{1689, 600}], LineBox[{1693, 604}], 
       LineBox[{1695, 606}], LineBox[{1697, 608}], LineBox[{1698, 609}], 
       LineBox[{1699, 610}], LineBox[{1700, 611}], LineBox[{1702, 613}], 
       LineBox[{1703, 614}], LineBox[{1704, 615}], LineBox[{1705, 616}], 
       LineBox[{1706, 617}], LineBox[{1707, 618}], LineBox[{1708, 619}], 
       LineBox[{1709, 620}], LineBox[{1710, 621}], LineBox[{1712, 623}], 
       LineBox[{1713, 624}], LineBox[{1715, 626}], LineBox[{1716, 627}], 
       LineBox[{1717, 628}], LineBox[{1718, 629}], LineBox[{1719, 630}], 
       LineBox[{1721, 632}], LineBox[{1722, 633}], LineBox[{1723, 634}], 
       LineBox[{1724, 635}], LineBox[{1725, 636}], LineBox[{1726, 637}], 
       LineBox[{1727, 638}], LineBox[{1728, 639}], LineBox[{1730, 641}], 
       LineBox[{1731, 642}], LineBox[{1732, 643}], LineBox[{1733, 644}], 
       LineBox[{1734, 645}], LineBox[{1735, 646}], LineBox[{1737, 648}], 
       LineBox[{1742, 653}], LineBox[{1743, 654}], LineBox[{1744, 655}], 
       LineBox[{1745, 656}], LineBox[{1746, 657}], LineBox[{1747, 658}], 
       LineBox[{1748, 659}], LineBox[{1749, 660}], LineBox[{1750, 661}], 
       LineBox[{1752, 663}], LineBox[{1753, 664}], LineBox[{1754, 665}], 
       LineBox[{1755, 666}], LineBox[{1756, 667}], LineBox[{1758, 669}], 
       LineBox[{1759, 670}], LineBox[{1760, 671}], LineBox[{1761, 672}], 
       LineBox[{1762, 673}], LineBox[{1763, 674}], LineBox[{1765, 676}], 
       LineBox[{1766, 677}], LineBox[{1767, 678}], LineBox[{1768, 679}], 
       LineBox[{1769, 680}], LineBox[{1771, 682}], LineBox[{1773, 684}], 
       LineBox[{1774, 685}], LineBox[{1775, 686}], LineBox[{1776, 687}], 
       LineBox[{1777, 688}], LineBox[{1781, 692}], LineBox[{1782, 693}], 
       LineBox[{1783, 694}], LineBox[{1784, 695}], LineBox[{1786, 697}], 
       LineBox[{1791, 702}], LineBox[{1797, 708}], LineBox[{1798, 709}], 
       LineBox[{1799, 710}], LineBox[{1800, 711}], LineBox[{1801, 712}], 
       LineBox[{1802, 713}], LineBox[{1804, 715}], LineBox[{1805, 716}], 
       LineBox[{1806, 717}], LineBox[{1807, 718}], LineBox[{1808, 719}], 
       LineBox[{1809, 720}], LineBox[{1811, 722}], LineBox[{1812, 723}], 
       LineBox[{1813, 724}], LineBox[{1822, 733}], LineBox[{1823, 734}], 
       LineBox[{1825, 736}], LineBox[{1829, 740}], LineBox[{1834, 745}], 
       LineBox[{1837, 748}], LineBox[{1838, 749}], LineBox[{1839, 750}], 
       LineBox[{1840, 751}], LineBox[{1841, 752}], LineBox[{1843, 754}], 
       LineBox[{1844, 755}], LineBox[{1845, 756}], LineBox[{1846, 757}], 
       LineBox[{1847, 758}], LineBox[{1848, 759}], LineBox[{1849, 760}], 
       LineBox[{1850, 761}], LineBox[{1851, 762}], LineBox[{1852, 763}], 
       LineBox[{1853, 764}], LineBox[{1858, 769}], LineBox[{1863, 774}], 
       LineBox[{1864, 775}], LineBox[{1865, 776}], LineBox[{1866, 777}], 
       LineBox[{1868, 779}], LineBox[{1869, 780}], LineBox[{1878, 789}], 
       LineBox[{1879, 790}], LineBox[{1880, 791}], LineBox[{1881, 792}], 
       LineBox[{1883, 794}], LineBox[{1884, 795}], LineBox[{1886, 797}], 
       LineBox[{1888, 799}], LineBox[{1889, 800}], LineBox[{1890, 801}], 
       LineBox[{1891, 802}], LineBox[{1892, 803}], LineBox[{1895, 806}], 
       LineBox[{1896, 807}], LineBox[{1897, 808}], LineBox[{1901, 812}], 
       LineBox[{1902, 813}], LineBox[{1906, 817}], LineBox[{1908, 819}], 
       LineBox[{1911, 822}], LineBox[{1913, 824}], LineBox[{1918, 829}], 
       LineBox[{1919, 830}], LineBox[{1920, 831}], LineBox[{1921, 832}], 
       LineBox[{1922, 833}], LineBox[{1923, 834}], LineBox[{1924, 835}], 
       LineBox[{1925, 836}], LineBox[{1926, 837}], LineBox[{1927, 838}], 
       LineBox[{1928, 839}], LineBox[{1932, 843}], LineBox[{1933, 844}], 
       LineBox[{1936, 847}], LineBox[{1937, 848}], LineBox[{1938, 849}], 
       LineBox[{1939, 850}], LineBox[{1941, 852}], LineBox[{1944, 855}], 
       LineBox[{1949, 860}], LineBox[{1950, 861}], LineBox[{1952, 863}], 
       LineBox[{1953, 864}], LineBox[{1954, 865}], LineBox[{1957, 868}], 
       LineBox[{1960, 871}], LineBox[{1961, 872}], LineBox[{1965, 876}], 
       LineBox[{1966, 877}], LineBox[{1970, 881}], LineBox[{1971, 882}], 
       LineBox[{1974, 885}], LineBox[{1975, 886}], LineBox[{1976, 887}], 
       LineBox[{1978, 889}], LineBox[{1987, 898}], LineBox[{1991, 902}], 
       LineBox[{1999, 910}], LineBox[{2000, 911}], LineBox[{2007, 918}], 
       LineBox[{2010, 921}], LineBox[{2011, 922}], LineBox[{2012, 923}], 
       LineBox[{2015, 926}], LineBox[{2019, 930}], LineBox[{2020, 931}], 
       LineBox[{2024, 935}], LineBox[{2025, 936}], LineBox[{2030, 941}], 
       LineBox[{2031, 942}], LineBox[{2032, 943}], LineBox[{2033, 944}], 
       LineBox[{2034, 945}], LineBox[{2035, 946}], LineBox[{2036, 947}], 
       LineBox[{2037, 948}], LineBox[{2039, 950}], LineBox[{2040, 951}], 
       LineBox[{2041, 952}], LineBox[{2042, 953}], LineBox[{2044, 955}], 
       LineBox[{2046, 957}], LineBox[{2047, 958}], LineBox[{2048, 959}], 
       LineBox[{2049, 960}], LineBox[{2052, 963}], LineBox[{2053, 964}], 
       LineBox[{2054, 965}], LineBox[{2058, 969}], LineBox[{2059, 970}], 
       LineBox[{2060, 971}], LineBox[{2061, 972}], LineBox[{2062, 973}], 
       LineBox[{2066, 977}], LineBox[{2067, 978}], LineBox[{2068, 979}], 
       LineBox[{2069, 980}], LineBox[{2072, 983}], LineBox[{2073, 984}], 
       LineBox[{2074, 985}], LineBox[{2075, 986}], LineBox[{2076, 987}], 
       LineBox[{2077, 988}], LineBox[{2078, 989}], LineBox[{2079, 990}], 
       LineBox[{2080, 991}], LineBox[{2082, 993}], LineBox[{2083, 994}], 
       LineBox[{2084, 995}], LineBox[{2085, 996}], LineBox[{2086, 997}], 
       LineBox[{2087, 998}], LineBox[{2088, 999}], LineBox[{2089, 1000}], 
       LineBox[{2090, 1001}], LineBox[{2091, 1002}], LineBox[{2092, 1003}], 
       LineBox[{2093, 1004}], LineBox[{2094, 1005}], LineBox[{2095, 1006}], 
       LineBox[{2096, 1007}], LineBox[{2097, 1008}], LineBox[{2098, 1009}], 
       LineBox[{2099, 1010}], LineBox[{2100, 1011}], LineBox[{2101, 1012}], 
       LineBox[{2102, 1013}], LineBox[{2103, 1014}], LineBox[{2104, 1015}], 
       LineBox[{2105, 1016}], LineBox[{2106, 1017}], LineBox[{2108, 1019}], 
       LineBox[{2109, 1020}], LineBox[{2110, 1021}], LineBox[{2112, 1023}], 
       LineBox[{2113, 1024}], LineBox[{2114, 1025}], LineBox[{2115, 1026}], 
       LineBox[{2116, 1027}], LineBox[{2117, 1028}], LineBox[{2118, 1029}], 
       LineBox[{2119, 1030}], LineBox[{2120, 1031}], LineBox[{2121, 1032}], 
       LineBox[{2123, 1034}], LineBox[{2124, 1035}], LineBox[{2125, 1036}], 
       LineBox[{2126, 1037}], LineBox[{2128, 1039}], LineBox[{2129, 1040}], 
       LineBox[{2130, 1041}], LineBox[{2132, 1043}], LineBox[{2133, 1044}], 
       LineBox[{2136, 1047}], LineBox[{2139, 1050}], LineBox[{2140, 1051}], 
       LineBox[{2141, 1052}], LineBox[{2142, 1053}], LineBox[{2143, 1054}], 
       LineBox[{2144, 1055}], LineBox[{2145, 1056}], LineBox[{2146, 1057}], 
       LineBox[{2147, 1058}], LineBox[{2156, 1067}], LineBox[{2157, 1068}], 
       LineBox[{2163, 1074}], LineBox[{2166, 1077}], LineBox[{2167, 1078}], 
       LineBox[{2171, 1082}], LineBox[{2172, 1083}], LineBox[{2173, 1084}], 
       LineBox[{2176, 1087}], LineBox[{2178, 1089}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{1093, 4}], LineBox[{1095, 6}], LineBox[{1096, 7}], 
       LineBox[{1097, 8}], LineBox[{1098, 9}], LineBox[{1099, 10}], 
       LineBox[{1103, 14}], LineBox[{1104, 15}], LineBox[{1105, 16}], 
       LineBox[{1106, 17}], LineBox[{1107, 18}], LineBox[{1110, 21}], 
       LineBox[{1111, 22}], LineBox[{1112, 23}], LineBox[{1113, 24}], 
       LineBox[{1114, 25}], LineBox[{1117, 28}], LineBox[{1119, 30}], 
       LineBox[{1120, 31}], LineBox[{1121, 32}], LineBox[{1122, 33}], 
       LineBox[{1123, 34}], LineBox[{1124, 35}], LineBox[{1125, 36}], 
       LineBox[{1126, 37}], LineBox[{1130, 41}], LineBox[{1131, 42}], 
       LineBox[{1132, 43}], LineBox[{1133, 44}], LineBox[{1135, 46}], 
       LineBox[{1136, 47}], LineBox[{1137, 48}], LineBox[{1138, 49}], 
       LineBox[{1140, 51}], LineBox[{1141, 52}], LineBox[{1142, 53}], 
       LineBox[{1143, 54}], LineBox[{1144, 55}], LineBox[{1145, 56}], 
       LineBox[{1146, 57}], LineBox[{1147, 58}], LineBox[{1148, 59}], 
       LineBox[{1153, 64}], LineBox[{1154, 65}], LineBox[{1155, 66}], 
       LineBox[{1156, 67}], LineBox[{1157, 68}], LineBox[{1158, 69}], 
       LineBox[{1159, 70}], LineBox[{1160, 71}], LineBox[{1161, 72}], 
       LineBox[{1163, 74}], LineBox[{1164, 75}], LineBox[{1166, 77}], 
       LineBox[{1167, 78}], LineBox[{1168, 79}], LineBox[{1169, 80}], 
       LineBox[{1170, 81}], LineBox[{1171, 82}], LineBox[{1173, 84}], 
       LineBox[{1174, 85}], LineBox[{1176, 87}], LineBox[{1178, 89}], 
       LineBox[{1179, 90}], LineBox[{1182, 93}], LineBox[{1183, 94}], 
       LineBox[{1184, 95}], LineBox[{1186, 97}], LineBox[{1187, 98}], 
       LineBox[{1188, 99}], LineBox[{1190, 101}], LineBox[{1191, 102}], 
       LineBox[{1193, 104}], LineBox[{1194, 105}], LineBox[{1195, 106}], 
       LineBox[{1196, 107}], LineBox[{1197, 108}], LineBox[{1198, 109}], 
       LineBox[{1199, 110}], LineBox[{1200, 111}], LineBox[{1202, 113}], 
       LineBox[{1203, 114}], LineBox[{1204, 115}], LineBox[{1205, 116}], 
       LineBox[{1207, 118}], LineBox[{1213, 124}], LineBox[{1214, 125}], 
       LineBox[{1215, 126}], LineBox[{1216, 127}], LineBox[{1217, 128}], 
       LineBox[{1218, 129}], LineBox[{1219, 130}], LineBox[{1220, 131}], 
       LineBox[{1221, 132}], LineBox[{1222, 133}], LineBox[{1223, 134}], 
       LineBox[{1224, 135}], LineBox[{1225, 136}], LineBox[{1226, 137}], 
       LineBox[{1227, 138}], LineBox[{1228, 139}], LineBox[{1229, 140}], 
       LineBox[{1231, 142}], LineBox[{1232, 143}], LineBox[{1233, 144}], 
       LineBox[{1234, 145}], LineBox[{1238, 149}], LineBox[{1242, 153}], 
       LineBox[{1243, 154}], LineBox[{1244, 155}], LineBox[{1245, 156}], 
       LineBox[{1247, 158}], LineBox[{1248, 159}], LineBox[{1249, 160}], 
       LineBox[{1250, 161}], LineBox[{1251, 162}], LineBox[{1252, 163}], 
       LineBox[{1253, 164}], LineBox[{1254, 165}], LineBox[{1255, 166}], 
       LineBox[{1256, 167}], LineBox[{1257, 168}], LineBox[{1258, 169}], 
       LineBox[{1259, 170}], LineBox[{1261, 172}], LineBox[{1263, 174}], 
       LineBox[{1264, 175}], LineBox[{1269, 180}], LineBox[{1270, 181}], 
       LineBox[{1271, 182}], LineBox[{1274, 185}], LineBox[{1275, 186}], 
       LineBox[{1276, 187}], LineBox[{1277, 188}], LineBox[{1278, 189}], 
       LineBox[{1279, 190}], LineBox[{1280, 191}], LineBox[{1281, 192}], 
       LineBox[{1282, 193}], LineBox[{1283, 194}], LineBox[{1285, 196}], 
       LineBox[{1286, 197}], LineBox[{1287, 198}], LineBox[{1288, 199}], 
       LineBox[{1289, 200}], LineBox[{1290, 201}], LineBox[{1291, 202}], 
       LineBox[{1292, 203}], LineBox[{1295, 206}], LineBox[{1296, 207}], 
       LineBox[{1297, 208}], LineBox[{1298, 209}], LineBox[{1299, 210}], 
       LineBox[{1300, 211}], LineBox[{1301, 212}], LineBox[{1302, 213}], 
       LineBox[{1303, 214}], LineBox[{1304, 215}], LineBox[{1305, 216}], 
       LineBox[{1308, 219}], LineBox[{1309, 220}], LineBox[{1310, 221}], 
       LineBox[{1311, 222}], LineBox[{1313, 224}], LineBox[{1314, 225}], 
       LineBox[{1315, 226}], LineBox[{1316, 227}], LineBox[{1317, 228}], 
       LineBox[{1318, 229}], LineBox[{1320, 231}], LineBox[{1321, 232}], 
       LineBox[{1322, 233}], LineBox[{1323, 234}], LineBox[{1324, 235}], 
       LineBox[{1327, 238}], LineBox[{1328, 239}], LineBox[{1329, 240}], 
       LineBox[{1330, 241}], LineBox[{1332, 243}], LineBox[{1333, 244}], 
       LineBox[{1343, 254}], LineBox[{1344, 255}], LineBox[{1354, 265}], 
       LineBox[{1355, 266}], LineBox[{1374, 285}], LineBox[{1379, 290}], 
       LineBox[{1384, 295}], LineBox[{1385, 296}], LineBox[{1390, 301}], 
       LineBox[{1395, 306}], LineBox[{1397, 308}], LineBox[{1398, 309}], 
       LineBox[{1416, 327}], LineBox[{1430, 341}], LineBox[{1445, 356}], 
       LineBox[{1446, 357}], LineBox[{1447, 358}], LineBox[{1453, 364}], 
       LineBox[{1454, 365}], LineBox[{1455, 366}], LineBox[{1456, 367}], 
       LineBox[{1457, 368}], LineBox[{1458, 369}], LineBox[{1459, 370}], 
       LineBox[{1460, 371}], LineBox[{1461, 372}], LineBox[{1462, 373}], 
       LineBox[{1470, 381}], LineBox[{1471, 382}], LineBox[{1476, 387}], 
       LineBox[{1482, 393}], LineBox[{1489, 400}], LineBox[{1490, 401}], 
       LineBox[{1495, 406}], LineBox[{1497, 408}], LineBox[{1498, 409}], 
       LineBox[{1499, 410}], LineBox[{1504, 415}], LineBox[{1505, 416}], 
       LineBox[{1512, 423}], LineBox[{1513, 424}], LineBox[{1514, 425}], 
       LineBox[{1521, 432}], LineBox[{1524, 435}], LineBox[{1525, 436}], 
       LineBox[{1528, 439}], LineBox[{1529, 440}], LineBox[{1530, 441}], 
       LineBox[{1531, 442}], LineBox[{1532, 443}], LineBox[{1533, 444}], 
       LineBox[{1535, 446}], LineBox[{1539, 450}], LineBox[{1542, 453}], 
       LineBox[{1559, 470}], LineBox[{1560, 471}], LineBox[{1562, 473}], 
       LineBox[{1566, 477}], LineBox[{1568, 479}], LineBox[{1569, 480}], 
       LineBox[{1570, 481}], LineBox[{1586, 497}], LineBox[{1587, 498}], 
       LineBox[{1588, 499}], LineBox[{1589, 500}], LineBox[{1597, 508}], 
       LineBox[{1598, 509}], LineBox[{1604, 515}], LineBox[{1605, 516}], 
       LineBox[{1606, 517}], LineBox[{1607, 518}], LineBox[{1610, 521}], 
       LineBox[{1613, 524}], LineBox[{1616, 527}], LineBox[{1617, 528}], 
       LineBox[{1618, 529}], LineBox[{1621, 532}], LineBox[{1623, 534}], 
       LineBox[{1628, 539}], LineBox[{1629, 540}], LineBox[{1630, 541}], 
       LineBox[{1634, 545}], LineBox[{1636, 547}], LineBox[{1637, 548}], 
       LineBox[{1638, 549}], LineBox[{1639, 550}], LineBox[{1641, 552}], 
       LineBox[{1643, 554}], LineBox[{1644, 555}], LineBox[{1645, 556}], 
       LineBox[{1646, 557}], LineBox[{1648, 559}], LineBox[{1649, 560}], 
       LineBox[{1650, 561}], LineBox[{1651, 562}], LineBox[{1653, 564}], 
       LineBox[{1656, 567}], LineBox[{1658, 569}], LineBox[{1659, 570}], 
       LineBox[{1662, 573}], LineBox[{1664, 575}], LineBox[{1671, 582}], 
       LineBox[{1672, 583}], LineBox[{1673, 584}], LineBox[{1674, 585}], 
       LineBox[{1675, 586}], LineBox[{1676, 587}], LineBox[{1677, 588}], 
       LineBox[{1680, 591}], LineBox[{1681, 592}], LineBox[{1685, 596}], 
       LineBox[{1686, 597}], LineBox[{1690, 601}], LineBox[{1691, 602}], 
       LineBox[{1692, 603}], LineBox[{1694, 605}], LineBox[{1696, 607}], 
       LineBox[{1701, 612}], LineBox[{1711, 622}], LineBox[{1714, 625}], 
       LineBox[{1720, 631}], LineBox[{1729, 640}], LineBox[{1736, 647}], 
       LineBox[{1738, 649}], LineBox[{1739, 650}], LineBox[{1740, 651}], 
       LineBox[{1741, 652}], LineBox[{1751, 662}], LineBox[{1757, 668}], 
       LineBox[{1764, 675}], LineBox[{1770, 681}], LineBox[{1772, 683}], 
       LineBox[{1778, 689}], LineBox[{1779, 690}], LineBox[{1780, 691}], 
       LineBox[{1785, 696}], LineBox[{1787, 698}], LineBox[{1788, 699}], 
       LineBox[{1789, 700}], LineBox[{1790, 701}], LineBox[{1792, 703}], 
       LineBox[{1793, 704}], LineBox[{1794, 705}], LineBox[{1795, 706}], 
       LineBox[{1796, 707}], LineBox[{1803, 714}], LineBox[{1810, 721}], 
       LineBox[{1814, 725}], LineBox[{1815, 726}], LineBox[{1816, 727}], 
       LineBox[{1817, 728}], LineBox[{1818, 729}], LineBox[{1819, 730}], 
       LineBox[{1820, 731}], LineBox[{1821, 732}], LineBox[{1824, 735}], 
       LineBox[{1826, 737}], LineBox[{1827, 738}], LineBox[{1828, 739}], 
       LineBox[{1830, 741}], LineBox[{1831, 742}], LineBox[{1832, 743}], 
       LineBox[{1833, 744}], LineBox[{1835, 746}], LineBox[{1836, 747}], 
       LineBox[{1842, 753}], LineBox[{1854, 765}], LineBox[{1855, 766}], 
       LineBox[{1856, 767}], LineBox[{1857, 768}], LineBox[{1859, 770}], 
       LineBox[{1860, 771}], LineBox[{1861, 772}], LineBox[{1862, 773}], 
       LineBox[{1867, 778}], LineBox[{1870, 781}], LineBox[{1871, 782}], 
       LineBox[{1872, 783}], LineBox[{1873, 784}], LineBox[{1874, 785}], 
       LineBox[{1875, 786}], LineBox[{1876, 787}], LineBox[{1877, 788}], 
       LineBox[{1882, 793}], LineBox[{1885, 796}], LineBox[{1887, 798}], 
       LineBox[{1893, 804}], LineBox[{1894, 805}], LineBox[{1898, 809}], 
       LineBox[{1899, 810}], LineBox[{1900, 811}], LineBox[{1903, 814}], 
       LineBox[{1904, 815}], LineBox[{1905, 816}], LineBox[{1907, 818}], 
       LineBox[{1909, 820}], LineBox[{1910, 821}], LineBox[{1912, 823}], 
       LineBox[{1914, 825}], LineBox[{1915, 826}], LineBox[{1916, 827}], 
       LineBox[{1917, 828}], LineBox[{1929, 840}], LineBox[{1930, 841}], 
       LineBox[{1931, 842}], LineBox[{1934, 845}], LineBox[{1935, 846}], 
       LineBox[{1940, 851}], LineBox[{1942, 853}], LineBox[{1943, 854}], 
       LineBox[{1945, 856}], LineBox[{1946, 857}], LineBox[{1947, 858}], 
       LineBox[{1948, 859}], LineBox[{1951, 862}], LineBox[{1955, 866}], 
       LineBox[{1956, 867}], LineBox[{1958, 869}], LineBox[{1959, 870}], 
       LineBox[{1962, 873}], LineBox[{1963, 874}], LineBox[{1964, 875}], 
       LineBox[{1967, 878}], LineBox[{1968, 879}], LineBox[{1969, 880}], 
       LineBox[{1972, 883}], LineBox[{1973, 884}], LineBox[{1977, 888}], 
       LineBox[{1979, 890}], LineBox[{1980, 891}], LineBox[{1981, 892}], 
       LineBox[{1982, 893}], LineBox[{1983, 894}], LineBox[{1984, 895}], 
       LineBox[{1985, 896}], LineBox[{1986, 897}], LineBox[{1988, 899}], 
       LineBox[{1989, 900}], LineBox[{1990, 901}], LineBox[{1992, 903}], 
       LineBox[{1993, 904}], LineBox[{1994, 905}], LineBox[{1995, 906}], 
       LineBox[{1996, 907}], LineBox[{1997, 908}], LineBox[{1998, 909}], 
       LineBox[{2001, 912}], LineBox[{2002, 913}], LineBox[{2003, 914}], 
       LineBox[{2004, 915}], LineBox[{2005, 916}], LineBox[{2006, 917}], 
       LineBox[{2008, 919}], LineBox[{2009, 920}], LineBox[{2013, 924}], 
       LineBox[{2014, 925}], LineBox[{2016, 927}], LineBox[{2017, 928}], 
       LineBox[{2018, 929}], LineBox[{2021, 932}], LineBox[{2022, 933}], 
       LineBox[{2023, 934}], LineBox[{2026, 937}], LineBox[{2027, 938}], 
       LineBox[{2028, 939}], LineBox[{2029, 940}], LineBox[{2038, 949}], 
       LineBox[{2043, 954}], LineBox[{2045, 956}], LineBox[{2050, 961}], 
       LineBox[{2051, 962}], LineBox[{2055, 966}], LineBox[{2056, 967}], 
       LineBox[{2057, 968}], LineBox[{2063, 974}], LineBox[{2064, 975}], 
       LineBox[{2065, 976}], LineBox[{2070, 981}], LineBox[{2071, 982}], 
       LineBox[{2081, 992}], LineBox[{2107, 1018}], LineBox[{2111, 1022}], 
       LineBox[{2122, 1033}], LineBox[{2127, 1038}], LineBox[{2131, 1042}], 
       LineBox[{2134, 1045}], LineBox[{2135, 1046}], LineBox[{2137, 1048}], 
       LineBox[{2138, 1049}], LineBox[{2148, 1059}], LineBox[{2149, 1060}], 
       LineBox[{2150, 1061}], LineBox[{2151, 1062}], LineBox[{2152, 1063}], 
       LineBox[{2153, 1064}], LineBox[{2154, 1065}], LineBox[{2155, 1066}], 
       LineBox[{2158, 1069}], LineBox[{2159, 1070}], LineBox[{2160, 1071}], 
       LineBox[{2161, 1072}], LineBox[{2162, 1073}], LineBox[{2164, 1075}], 
       LineBox[{2165, 1076}], LineBox[{2168, 1079}], LineBox[{2169, 1080}], 
       LineBox[{2170, 1081}], LineBox[{2174, 1085}], LineBox[{2175, 1086}], 
       LineBox[{2177, 1088}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.004583333333333334], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwN00OiGAoCALA3tW3btm3btm392rZt27Zt27Y7WeQISdiofaV2/wsICCgY
JCBgUIiAgMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7z
mM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exhL/vY
zwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu97jP
Ax7yiMc84SnPeM4LXvKK17zhLe94zwc+8onPfOEr3/jOD37yi9/84S//CAgZ
EPA/AhGYIAQlGMEJQUhCEZowhCUc4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJ
QEISkZgkJCUZyUlBSlKRmjSkJR3pyUBGMpGZLGQlG9nJQU5ykZs85CUf+SlA
QQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa1alBTWpRmzrUpR71aUBD
GtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50pRvd6UFPetGbPvSlH//RnwEM
ZBCDGcJQhjGcEYxkFKMZw1jGMZ4JTGQSk5nCVKYxnRnMZBazmcNc5jGfBSxk
EYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb2cJWtrGdHexkF7vZw172sZ8DHOQQ
hznCUY5xnBOc5BSnOcNZznGeC1zkEpe5wlWucZ0b3OQWt7nDXe5xnwc85BGP
ecJTnvGcF7zkFa95w1ve8Z4PfOQTn/nCV77xnR/85Be/+cNf/hEQyn8CEZgg
BCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4xCUe8UlAQhKRmCQk
JRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzkJR/5KUBBClGYIhSl
GMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSlHvVpQEMa0ZgmNKUZ
zWlBS1rRmja0pR3t6UBHOtGZLnSlG93pQU960Zs+9KUf/9GfAQxkEIMZwlCG
MZwRjGQUoxnDWMYxnglMZBKTmcJUpjGdGcxkFrOZw1zmMZ8FLGQRi1nCUpax
nBWsZBWrWcNa1rGeDWxkE5vZwla2sZ0d7GQXu9nDXvaxnwMc5BCHOcJRjnGc
E5zkFKc5w1nOcZ4LXOQSl7nCVa5xnRvc5Ba3ucNd7nGfBzzkEY95wlOe8ZwX
vOQVr3nDW97xng985BOf+cJXvvGdH/zkF7/5w1/+ERDafwIRmCAEJRjBCUFI
QhGaMIQlHOGJQEQiEZkoRCUa0YlBTGIRmzjEJR7xSUBCEpGYJCQlGclJQUpS
kZo0pCUd6clARjKRmSxkJRvZyUFOcpGbPOQlH/kpQEEKUZgiFKUYxSlBSUpR
mjKUpRzlqUBFKlGZKlSlGtWpQU1qUZs61KUe9WlAQxrRmCY0pRnNaUFLWtGa
NrSlHe3pQEc60ZkudKUb3elBT3rRmz70pR//0Z8BDGQQgxnCUIYxnBGMZBSj
GcNYxjGeCUxkEpOZwlSmMZ0ZzGQWs5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZ
w1rWsZ4NbGQTm9nCVraxnR3sZBe72cNe9rGfAxzkEIc5wlGOcZwTnOQUpznD
Wc5xngtc5BKXucJVrnGdG9zkFre5w13ucZ8HPOQRj3nCU57xnBe85BWvecNb
3vGeD3zkE5/5wle+8Z0f/OQXv/nDX/4REMZ/AhGYIAQlGMEJQUhCEZowhCUc
4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJQEISkZgkJCUZyUlBSlKRmjSkJR3p
yUBGMpGZLGQlG9nJQU5ykZs85CUf+SlAQQpRmCIUpRjFKUFJSlGaMpSlHOWp
QEUqUZkqVKUa1alBTWpRmzrUpR71aUBDGtGYJjSlGc1pQUta0Zo2tKUd7elA
RzrRmS50pRvd6UFPetGbPvSlH//RnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4J
TGQSk5nCVKYxnRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1s
ZBOb2cJWtrGdHexkF7vZw172sZ8DHOQQ/wfgGlSS
        "]]}, {}}}], {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"actual value - predicted value\"", TraditionalForm], None}, {
     FormBox["\"predicted value\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.005199204276818118, 
   0.004930788122441921}, {-4.494807010192735, 4.494807010192735}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7099378897542114`*^9, 3.709938267647977*^9, 
  3.710061971999036*^9, 3.7100689975569887`*^9, 3.7100698953414793`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<StandardDeviation\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.709930734296636*^9, 3.7099307352898397`*^9}}],

Cell[BoxData["0.9993784376665875`"], "Output",
 CellChangeTimes->{3.709937889497173*^9, 3.7099381057540903`*^9, 
  3.7099382487961483`*^9, 3.7100619462167606`*^9, 3.7100689138482523`*^9, 
  3.710069906134638*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"Standardize", "[", 
   RowBox[{"testset", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "9"}], "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7099381237497497`*^9, 3.7099381246489286`*^9}, {
  3.7099382551514387`*^9, 3.70993825550651*^9}, {3.7099384170603366`*^9, 
  3.70993843079912*^9}, {3.7100689575639935`*^9, 3.710068965793638*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.567], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.567], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-4., 0}, {-3.5, 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{42.7824459567654, 76.3014046531343}, {
          157.36906050615673`, 159.66476806739308`}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-3., 0}, {-2.5, 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{108.12036334950312`, 141.63932204587198`}, {
          157.36906050615673`, 159.66476806739308`}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-2.5, 0}, {-2., 6}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{140.78932204587196`, 174.3082807422408}, {
          150.14052269997492`, 159.66476806739308`}}],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-2., 0}, {-1.5, 31}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{173.45828074224082`, 206.97723943860967`}, {
          113.99783366906591`, 159.66476806739308`}}],
        StatusArea[#, 31]& ,
        TagBoxNote->"31"],
       StyleBox["31", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[31, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-1.5, 0}, {-1., 104}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{206.12723943860968`, 239.6461981349785}, {
          8.461181698811686, 159.66476806739308`}}],
        StatusArea[#, 104]& ,
        TagBoxNote->"104"],
       StyleBox["104", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[104, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-1., 0}, {-0.5, 230}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{238.7961981349785, 
          272.3151568313474}, {-173.6979710169697, 159.66476806739308`}}],
        StatusArea[#, 230]& ,
        TagBoxNote->"230"],
       StyleBox["230", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[230, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-0.5, 0}, {0., 226}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{271.4651568313474, 
          304.98411552771626`}, {-167.91514077202424`, 159.66476806739308`}}],
        StatusArea[#, 226]& ,
        TagBoxNote->"226"],
       StyleBox["226", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[226, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {0.5, 206}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{304.13411552771623`, 
          337.6530742240851}, {-139.00098954729702`, 159.66476806739308`}}],
        StatusArea[#, 206]& ,
        TagBoxNote->"206"],
       StyleBox["206", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[206, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.5, 0}, {1., 116}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{336.8030742240851, 
          370.322032920454}, {-8.887309036024647, 159.66476806739308`}}],
        StatusArea[#, 116]& ,
        TagBoxNote->"116"],
       StyleBox["116", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[116, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1., 0}, {1.5, 88}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{369.47203292045396`, 402.9909916168228}, {
          31.592502678593405`, 159.66476806739308`}}],
        StatusArea[#, 88]& ,
        TagBoxNote->"88"],
       StyleBox["88", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[88, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.5, 0}, {2., 39}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{402.14099161682276`, 435.6599503131917}, {
          102.43217317917505`, 159.66476806739308`}}],
        StatusArea[#, 39]& ,
        TagBoxNote->"39"],
       StyleBox["39", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[39, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2., 0}, {2.5, 21}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{434.8099503131917, 468.3289090095605}, {
          128.45490928142954`, 159.66476806739308`}}],
        StatusArea[#, 21]& ,
        TagBoxNote->"21"],
       StyleBox["21", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[21, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2.5, 0}, {3., 9}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{467.4789090095605, 500.99786770592937`}, {
          145.80340001626584`, 159.66476806739308`}}],
        StatusArea[#, 9]& ,
        TagBoxNote->"9"],
       StyleBox["9", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[9, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3., 0}, {3.5, 5}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{500.14786770592934`, 533.6668264022983}, {
          151.58623026121128`, 159.66476806739308`}}],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3.5, 0}, {4., 3}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{532.8168264022981, 566.3357850986671}, {
          154.477645383684, 159.66476806739308`}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4., 0}, {4.5, 3}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{565.4857850986671, 599.0047437950361}, {
          154.477645383684, 159.66476806739308`}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-4.17, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-4., 4.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7099384314132457`*^9, 3.7100619552729244`*^9, {3.7100689473029413`*^9, 
   3.7100689663737545`*^9}, 3.710069909569324*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{
    RowBox[{"trainingset", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "6", ",", "8"}], "}"}]}], "]"}], "]"}], 
    "\[Rule]", 
    RowBox[{"Standardize", "[", 
     RowBox[{"trainingset", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "9"}], "]"}], "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.709938311722932*^9, 3.709938323528329*^9}, {
   3.7099383939406323`*^9, 3.709938396706202*^9}, {3.7099384786168337`*^9, 
   3.7099384822875795`*^9}, {3.7099385224777436`*^9, 3.7099385275187683`*^9}, 
   3.709947964195163*^9, 3.7099482788205357`*^9, 3.709955593590539*^9, {
   3.7100620263577304`*^9, 3.7100620375626388`*^9}, {3.710068510680649*^9, 
   3.710068513612235*^9}, {3.710068633039112*^9, 3.710068645127529*^9}, {
   3.710068796222736*^9, 3.7100688039602833`*^9}, {3.710069013709218*^9, 
   3.71006902127173*^9}, 3.7100700572618523`*^9, 3.7100730570867577`*^9}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{}, {{}, {
                  PointSize[0.125], 
                  GrayLevel[0.55], 
                  
                  PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                    4, 4.}}]}, {
                  GrayLevel[0.7], 
                  AbsoluteThickness[1.5], 
                  
                  BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                   5, 4}}]}}, {}}, Axes -> {False, False}, 
               AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
               BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {All, All}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of features: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{}, {{}, {
                  PointSize[0.125], 
                  GrayLevel[0.55], 
                  
                  PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                    4, 4.}}]}, {
                  GrayLevel[0.7], 
                  AbsoluteThickness[1.5], 
                  
                  BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                   5, 4}}]}}, {}}, Axes -> {False, False}, 
               AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
               BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {All, All}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of features: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["8073", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7100686571949406`*^9, 3.710068816197729*^9, 
  3.7100690337602262`*^9, 3.710070071452689*^9, 3.710073072335806*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "=", 
  RowBox[{"PredictorMeasurements", "[", 
   RowBox[{"p", ",", 
    RowBox[{
     RowBox[{"testset", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "5", ",", "6", ",", "8"}], "}"}]}], "]"}], "]"}], 
     "\[Rule]", 
     RowBox[{"Standardize", "[", 
      RowBox[{"testset", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "9"}], "]"}], "]"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7099479414545097`*^9, 3.7099479532639265`*^9}, 
   3.709955600397936*^9, {3.7100685597374573`*^9, 3.7100685641293344`*^9}, {
   3.710068809810454*^9, 3.7100688147624426`*^9}, {3.7100690282711287`*^9, 
   3.7100690365807943`*^9}, {3.7100730663166027`*^9, 3.710073066515643*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorMeasurementsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  GrayLevel[0.6], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  Dashing[{Small, Small}], 
                  
                  LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                   11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                   GrayLevel[0.4], 
                   PointSize[0.09], 
                   AbsoluteThickness[1.6], 
                   
                   PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                    2.227816320451859, 2.584653237430766}, {3.043099335090081,
                     4.798822972025658}, {3.5728355469237116`, 
                    5.9507424155697155`}, {4.158566334344331, 
                    5.2097676165465385`}, {4.824808988689111, 
                    7.23346088027902}, {6.88649660338492, 
                    5.297021421229134}, {7.819072150835878, 
                    6.533166043611269}, {8.437306856915493, 
                    8.81724006216815}, {8.604907881861761, 
                    11.302704526196452`}}]}, {}}, {}}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1089", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  GrayLevel[0.6], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  Dashing[{Small, Small}], 
                  
                  LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                   11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                   GrayLevel[0.4], 
                   PointSize[0.09], 
                   AbsoluteThickness[1.6], 
                   
                   PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                    2.227816320451859, 2.584653237430766}, {3.043099335090081,
                     4.798822972025658}, {3.5728355469237116`, 
                    5.9507424155697155`}, {4.158566334344331, 
                    5.2097676165465385`}, {4.824808988689111, 
                    7.23346088027902}, {6.88649660338492, 
                    5.297021421229134}, {7.819072150835878, 
                    6.533166043611269}, {8.437306856915493, 
                    8.81724006216815}, {8.604907881861761, 
                    11.302704526196452`}}]}, {}}, {}}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1089", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"StandardDeviation: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["0.9997735729403521`", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorMeasurementsObject[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7099482935415487`*^9, 3.7100618963770347`*^9, {3.710068568130134*^9, 
   3.7100685839252925`*^9}, 3.7100686577770586`*^9, 3.710068816824855*^9, 
   3.7100690376960144`*^9, 3.710070072033806*^9, 3.7100730728759146`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ComparisonPlot\>\"", "]"}]], "Input"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.004583333333333334], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1: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
CS4BuzBeKOuSCLt3S/7/A3pjE9A=
          "]]}, {}}}, {}, {}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           GrayLevel[0.5], 
           Dashing[{Small, Small}], 
           Thickness[0.002]], 
          LineBox[CompressedData["
1:eJxFxXswE3AcAPANsxmbR5JTdulWEs3RnUMOvTzOtTMmcVOzmi7uOPpnp0hm
t7z6ozy3CzujNJpXmeYx5hxJs5Iyzh8s1yZbt26Xck71x76/Pz738eMUpHDt
MBjM5X/+P3xTkBfT56qynV9t+aqRoan919nsTvSj/Yi0B2I0R2SKVgvQxIV0
j/hMNOvsqWG6PXrfXeN4LY0MH5zkiCNWXeAabkvigXvO8NoVEuvTMSKMSZq+
xewmwPxQ/1otHQ8vHfkgc17EwQ5pvTQa2wF+UhY2R8fZw5aXjtlBtVi4f6HU
jUDDwOIyZkKTbG/cdiE3hiNS/YGdQorlTfgd+JxdotnN0woHF5T+yqBZ4HEB
PifaaoLZ4ZGTI94GWKBwEZxp24AXheTMKO4KbPGJauwq18ANisEAXv0ArMh9
36cuV8bYLp7x9NKsaeE84WHKi45V2HTI0EMP1MPtLdRNTasB9vYJj8iqNMOu
weMlUpkFZuQ+DmxhW+GfrdpN3+Qd+KNJlS8h7cJ7kkQac3QPVvu3lkynYmJt
n6gufKuXY+Hhrd++cQH28NZVXXpXpQN8nic8Td3AwbN1Rqf1DDxsHu14Jxki
wJf0Xg3SUCKsGmHujnU6wzqJMW4FS4KpFWHNkcVkmHRHpxUvu6KrjqcSm93g
oGVF7LdUd1hM4/nF23nALAFWycChKatVTBYBLal8Kiwko5/pJ7fFPugBEenN
j1D0nGN7iugGuiYr6Ls0B00ffCWQ30Zrs2cUUwXozyPbFPNd9EZR+NaFOrR0
dqKC3ojOOZpEyRChDfNZjPw2tPkkf6ipG91734XRLkcXLdUbe/rRVv5zX7UC
/VoXMjSvRPNClMlfxtCRDy8a1yfQu2vz/O0p9F/DyD+p
           "]]}, 
         Annotation[#, "Charting`Private`Tag$797656#1"]& ]}}, {}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, 
     PlotRange -> {{-3.961546921917627, 
      4.692312473896715}, {-3.961546921917627, 4.692312473896715}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"actual value\"", TraditionalForm], None}, {
        FormBox["\"predicted value\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-3.961546921917627, 
      4.692312473896715}, {-3.961546921917627, 4.692312473896715}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"predictions\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"perfect prediction line\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}], 
                    Thickness[0.018000000000000002`]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}], 
                    Thickness[0.018000000000000002`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7099482937986*^9, 3.710061896507449*^9, 
  3.710068587333976*^9, 3.71006865789108*^9, 3.7100688170719047`*^9, 
  3.7100690396684074`*^9, 3.710070072167832*^9, 3.7100730730089397`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<StandardDeviation\>\"", "]"}]], "Input"],

Cell[BoxData["0.9997735729403521`"], "Output",
 CellChangeTimes->{3.709948293897621*^9, 3.7100618965635123`*^9, 
  3.710068594275361*^9, 3.7100686589072833`*^9, 3.7100688184131727`*^9, 
  3.710069044389352*^9, 3.7100700722288437`*^9, 3.710073080516442*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ResidualHistogram\>\"", "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.567], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.567], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-4., 0}, {-3.5, 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{69.79399999999995, 101.75647058823527`}, {
          142.0902852065692, 144.29376024755945`}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-3., 0}, {-2.5, 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{132.01894117647055`, 163.98141176470583`}, {
          142.0902852065692, 144.29376024755945`}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-2.5, 0}, {-2., 7}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{163.13141176470583`, 195.0938823529411}, {
          133.96943496062778`, 144.29376024755945`}}],
        StatusArea[#, 7]& ,
        TagBoxNote->"7"],
       StyleBox["7", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[7, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-2., 0}, {-1.5, 39}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{194.2438823529411, 226.20635294117642`}, {
          90.65823364894014, 144.29376024755945`}}],
        StatusArea[#, 39]& ,
        TagBoxNote->"39"],
       StyleBox["39", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[39, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-1.5, 0}, {-1., 130}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{225.35635294117643`, 
          257.31882352941176`}, {-32.50799508117149, 144.29376024755948`}}],
        StatusArea[#, 130]& ,
        TagBoxNote->"130"],
       StyleBox["130", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[130, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-1., 0}, {-0.5, 239}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{256.46882352941174`, 
          288.43129411764704`}, {-180.0367745491075, 144.29376024755945`}}],
        StatusArea[#, 239]& ,
        TagBoxNote->"239"],
       StyleBox["239", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[239, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-0.5, 0}, {0., 224}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{287.581294117647, 
          319.5437647058823}, {-159.7346489342539, 144.29376024755945`}}],
        StatusArea[#, 224]& ,
        TagBoxNote->"224"],
       StyleBox["224", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[224, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {0.5, 191}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{318.6937647058823, 
          350.6562352941176}, {-115.06997258157605`, 144.29376024755942`}}],
        StatusArea[#, 191]& ,
        TagBoxNote->"191"],
       StyleBox["191", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[191, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.5, 0}, {1., 111}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{349.8062352941176, 
          381.7687058823529}, {-6.791969302356961, 144.29376024755945`}}],
        StatusArea[#, 111]& ,
        TagBoxNote->"111"],
       StyleBox["111", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[111, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1., 0}, {1.5, 75}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{380.91870588235287`, 412.8811764705882}, {
          41.93313217329158, 144.29376024755945`}}],
        StatusArea[#, 75]& ,
        TagBoxNote->"75"],
       StyleBox["75", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[75, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.5, 0}, {2., 34}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{412.03117647058815`, 443.9936470588235}, {
          97.42560885389135, 144.29376024755945`}}],
        StatusArea[#, 34]& ,
        TagBoxNote->"34"],
       StyleBox["34", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[34, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2., 0}, {2.5, 17}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{443.1436470588235, 475.1061176470588}, {
          120.43468455072538`, 144.29376024755945`}}],
        StatusArea[#, 17]& ,
        TagBoxNote->"17"],
       StyleBox["17", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[17, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2.5, 0}, {3., 9}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{474.2561176470588, 506.2185882352941}, {
          131.2624848786473, 144.29376024755945`}}],
        StatusArea[#, 9]& ,
        TagBoxNote->"9"],
       StyleBox["9", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[9, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3., 0}, {3.5, 6}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{505.36858823529406`, 537.3310588235295}, {
          135.32291000161803`, 144.29376024755945`}}],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3.5, 0}, {4., 3}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{536.4810588235293, 568.4435294117648}, {
          139.38333512458874`, 144.29376024755945`}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4., 0}, {4.5, 2}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{567.5935294117646, 599.556}, {140.736810165579, 
          144.29376024755945`}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{-4.17, 0},
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"count\"", TraditionalForm], None}, {
     FormBox["\"actual value - predicted value\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-4., 4.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7099495571940966`*^9, 3.7100618966372466`*^9, 
  3.71006859967144*^9, 3.710068663232148*^9, 3.7100688200444984`*^9, 
  3.7100690507616262`*^9, 3.710070072330865*^9, 3.7100730963456063`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ResidualPlot\>\"", "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
8fnuexXDuJ/HQqWzNj/ifso6+bWegxP3X8FOG+ani7ifc2rIK3bVo38d78RW
sJRj+2/xMYKhLKg/2cpHVizTYD2Eq3bPon69QT26LPezYtYj1Oc8YnQyuF7k
AvtnNPLzDpXD+qS6U+ufOOJ5UFjG1OqNPRivxGuv5nf6FAIXc5kOilQ3wvxa
zW44P87B/ZzAJWQUsUAI48U/GV2p9yIHrkgIFg20IwHWO5FisKGPvP0ud+vB
OTxP+qkzHDKxgv6oHiJxibqB8ynvT+jKF8L6F+wmxbW8HagXOpvPKggTTwBH
BmqRWzWkQ3vufQkbqVMRYC+IcI/mu9IHdiXFDn29wgawv40z4sr6inrn7UqS
gfeF+D05Sk99onwUf/9xkJ9kkq8T9eGefFoKIV38vn4dPPyxPeYXtI9wWVBv
VcLnEfx///3hfy2DvvVP4r/6+X/4D//hfx6D3vuH/y38J55/+H8S/9bX/vA/
x5//bP+CfvWH/yX8z94/f/V6/vB/N0N+238p//HnH/7Df/hfxX+1Hvg/nf9v
j9fv+gf/Lv6r4/VXM9Q7+B/C/2t8/+rn/7P5r/bvH/7P4r9a//p38/+6/t/1
M/5Z9n/U/h/1/0fz/T8d7w//z+a/Wm/9w//a+P3v6ql/tR72r9aH/9l68h89
+w//J/H/qd76V+s1/7vz/3fry/9p8fzDf/gP/+fwX62v/bP13H+3Pvzv1pv/
2+L7h//v4r86X/WfnZ/+V/Nf7a8//J+Vb/3fns/7j9b/7/b/n/zrP/yH/3v4
X50f/lfrN//q+fwjf/6j9v/u+P7V8fjDf/h/kv76377+P/yH//B/jp75V6/n
P90//2x//v9tL/8m+gzXM6wvPZcqX5IXj/f/kZoNH7qxWAPMlhg2b/Ye66Mk
BzecV0mbBLuobdRT/aJNsEeTvY94JLtd5DcbrzmSboveAczLKlUvFbMNuMvh
B/OVvXhfY8Fk/F36IqwHXPjs7VNqOryPMOEs05HqEqzHTKaelCjlj/VRCmhO
r0bzYz10qWn2QN63OVgfWGeQ0lytAVhPZecunSysh2Mhu061dq8Hxz8lGxaS
jJx5PXDGXygP+E6c/y41U6yHPSpyrTtlgRTqzfYEkLn6nyQBNj6dFrts3QL1
TV/UOPzSGcd6zQHlAamDwdPA/iOBFoJOWH/cTLuqqjwT61Pnfph3kCAvBJZL
+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
    "], {{{}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{1090, 1}], LineBox[{1091, 2}], LineBox[{1092, 3}], 
       LineBox[{1094, 5}], LineBox[{1100, 11}], LineBox[{1101, 12}], 
       LineBox[{1102, 13}], LineBox[{1108, 19}], LineBox[{1109, 20}], 
       LineBox[{1110, 21}], LineBox[{1115, 26}], LineBox[{1116, 27}], 
       LineBox[{1118, 29}], LineBox[{1119, 30}], LineBox[{1126, 37}], 
       LineBox[{1127, 38}], LineBox[{1128, 39}], LineBox[{1129, 40}], 
       LineBox[{1130, 41}], LineBox[{1131, 42}], LineBox[{1132, 43}], 
       LineBox[{1134, 45}], LineBox[{1135, 46}], LineBox[{1139, 50}], 
       LineBox[{1148, 59}], LineBox[{1149, 60}], LineBox[{1150, 61}], 
       LineBox[{1151, 62}], LineBox[{1152, 63}], LineBox[{1154, 65}], 
       LineBox[{1160, 71}], LineBox[{1161, 72}], LineBox[{1162, 73}], 
       LineBox[{1163, 74}], LineBox[{1165, 76}], LineBox[{1166, 77}], 
       LineBox[{1168, 79}], LineBox[{1172, 83}], LineBox[{1175, 86}], 
       LineBox[{1177, 88}], LineBox[{1180, 91}], LineBox[{1181, 92}], 
       LineBox[{1185, 96}], LineBox[{1189, 100}], LineBox[{1192, 103}], 
       LineBox[{1201, 112}], LineBox[{1202, 113}], LineBox[{1206, 117}], 
       LineBox[{1208, 119}], LineBox[{1209, 120}], LineBox[{1210, 121}], 
       LineBox[{1211, 122}], LineBox[{1212, 123}], LineBox[{1230, 141}], 
       LineBox[{1235, 146}], LineBox[{1236, 147}], LineBox[{1237, 148}], 
       LineBox[{1239, 150}], LineBox[{1240, 151}], LineBox[{1241, 152}], 
       LineBox[{1246, 157}], LineBox[{1262, 173}], LineBox[{1265, 176}], 
       LineBox[{1266, 177}], LineBox[{1267, 178}], LineBox[{1268, 179}], 
       LineBox[{1272, 183}], LineBox[{1273, 184}], LineBox[{1284, 195}], 
       LineBox[{1293, 204}], LineBox[{1294, 205}], LineBox[{1306, 217}], 
       LineBox[{1307, 218}], LineBox[{1311, 222}], LineBox[{1312, 223}], 
       LineBox[{1319, 230}], LineBox[{1325, 236}], LineBox[{1326, 237}], 
       LineBox[{1331, 242}], LineBox[{1334, 245}], LineBox[{1335, 246}], 
       LineBox[{1336, 247}], LineBox[{1337, 248}], LineBox[{1338, 249}], 
       LineBox[{1339, 250}], LineBox[{1340, 251}], LineBox[{1341, 252}], 
       LineBox[{1342, 253}], LineBox[{1345, 256}], LineBox[{1346, 257}], 
       LineBox[{1347, 258}], LineBox[{1348, 259}], LineBox[{1349, 260}], 
       LineBox[{1350, 261}], LineBox[{1351, 262}], LineBox[{1352, 263}], 
       LineBox[{1353, 264}], LineBox[{1356, 267}], LineBox[{1357, 268}], 
       LineBox[{1358, 269}], LineBox[{1359, 270}], LineBox[{1360, 271}], 
       LineBox[{1361, 272}], LineBox[{1362, 273}], LineBox[{1363, 274}], 
       LineBox[{1364, 275}], LineBox[{1365, 276}], LineBox[{1366, 277}], 
       LineBox[{1367, 278}], LineBox[{1368, 279}], LineBox[{1369, 280}], 
       LineBox[{1370, 281}], LineBox[{1371, 282}], LineBox[{1372, 283}], 
       LineBox[{1373, 284}], LineBox[{1375, 286}], LineBox[{1376, 287}], 
       LineBox[{1377, 288}], LineBox[{1378, 289}], LineBox[{1380, 291}], 
       LineBox[{1381, 292}], LineBox[{1382, 293}], LineBox[{1383, 294}], 
       LineBox[{1386, 297}], LineBox[{1387, 298}], LineBox[{1388, 299}], 
       LineBox[{1389, 300}], LineBox[{1391, 302}], LineBox[{1392, 303}], 
       LineBox[{1393, 304}], LineBox[{1394, 305}], LineBox[{1396, 307}], 
       LineBox[{1399, 310}], LineBox[{1400, 311}], LineBox[{1401, 312}], 
       LineBox[{1402, 313}], LineBox[{1403, 314}], LineBox[{1404, 315}], 
       LineBox[{1405, 316}], LineBox[{1406, 317}], LineBox[{1407, 318}], 
       LineBox[{1408, 319}], LineBox[{1409, 320}], LineBox[{1410, 321}], 
       LineBox[{1411, 322}], LineBox[{1412, 323}], LineBox[{1413, 324}], 
       LineBox[{1414, 325}], LineBox[{1415, 326}], LineBox[{1417, 328}], 
       LineBox[{1418, 329}], LineBox[{1419, 330}], LineBox[{1420, 331}], 
       LineBox[{1421, 332}], LineBox[{1422, 333}], LineBox[{1423, 334}], 
       LineBox[{1424, 335}], LineBox[{1425, 336}], LineBox[{1426, 337}], 
       LineBox[{1427, 338}], LineBox[{1428, 339}], LineBox[{1429, 340}], 
       LineBox[{1430, 341}], LineBox[{1431, 342}], LineBox[{1432, 343}], 
       LineBox[{1433, 344}], LineBox[{1434, 345}], LineBox[{1435, 346}], 
       LineBox[{1436, 347}], LineBox[{1437, 348}], LineBox[{1438, 349}], 
       LineBox[{1439, 350}], LineBox[{1440, 351}], LineBox[{1441, 352}], 
       LineBox[{1442, 353}], LineBox[{1443, 354}], LineBox[{1444, 355}], 
       LineBox[{1448, 359}], LineBox[{1449, 360}], LineBox[{1450, 361}], 
       LineBox[{1451, 362}], LineBox[{1452, 363}], LineBox[{1459, 370}], 
       LineBox[{1463, 374}], LineBox[{1464, 375}], LineBox[{1465, 376}], 
       LineBox[{1466, 377}], LineBox[{1467, 378}], LineBox[{1468, 379}], 
       LineBox[{1469, 380}], LineBox[{1471, 382}], LineBox[{1472, 383}], 
       LineBox[{1473, 384}], LineBox[{1474, 385}], LineBox[{1475, 386}], 
       LineBox[{1477, 388}], LineBox[{1478, 389}], LineBox[{1479, 390}], 
       LineBox[{1480, 391}], LineBox[{1481, 392}], LineBox[{1482, 393}], 
       LineBox[{1483, 394}], LineBox[{1484, 395}], LineBox[{1485, 396}], 
       LineBox[{1486, 397}], LineBox[{1487, 398}], LineBox[{1488, 399}], 
       LineBox[{1491, 402}], LineBox[{1492, 403}], LineBox[{1493, 404}], 
       LineBox[{1494, 405}], LineBox[{1495, 406}], LineBox[{1498, 409}], 
       LineBox[{1499, 410}], LineBox[{1500, 411}], LineBox[{1501, 412}], 
       LineBox[{1502, 413}], LineBox[{1503, 414}], LineBox[{1506, 417}], 
       LineBox[{1507, 418}], LineBox[{1508, 419}], LineBox[{1510, 421}], 
       LineBox[{1511, 422}], LineBox[{1512, 423}], LineBox[{1515, 426}], 
       LineBox[{1516, 427}], LineBox[{1517, 428}], LineBox[{1518, 429}], 
       LineBox[{1519, 430}], LineBox[{1520, 431}], LineBox[{1521, 432}], 
       LineBox[{1522, 433}], LineBox[{1523, 434}], LineBox[{1524, 435}], 
       LineBox[{1525, 436}], LineBox[{1526, 437}], LineBox[{1527, 438}], 
       LineBox[{1528, 439}], LineBox[{1529, 440}], LineBox[{1532, 443}], 
       LineBox[{1533, 444}], LineBox[{1534, 445}], LineBox[{1536, 447}], 
       LineBox[{1537, 448}], LineBox[{1538, 449}], LineBox[{1539, 450}], 
       LineBox[{1540, 451}], LineBox[{1541, 452}], LineBox[{1542, 453}], 
       LineBox[{1543, 454}], LineBox[{1544, 455}], LineBox[{1545, 456}], 
       LineBox[{1546, 457}], LineBox[{1547, 458}], LineBox[{1548, 459}], 
       LineBox[{1549, 460}], LineBox[{1550, 461}], LineBox[{1551, 462}], 
       LineBox[{1552, 463}], LineBox[{1553, 464}], LineBox[{1554, 465}], 
       LineBox[{1555, 466}], LineBox[{1556, 467}], LineBox[{1557, 468}], 
       LineBox[{1558, 469}], LineBox[{1559, 470}], LineBox[{1561, 472}], 
       LineBox[{1563, 474}], LineBox[{1564, 475}], LineBox[{1565, 476}], 
       LineBox[{1567, 478}], LineBox[{1571, 482}], LineBox[{1572, 483}], 
       LineBox[{1573, 484}], LineBox[{1574, 485}], LineBox[{1575, 486}], 
       LineBox[{1576, 487}], LineBox[{1577, 488}], LineBox[{1578, 489}], 
       LineBox[{1579, 490}], LineBox[{1580, 491}], LineBox[{1581, 492}], 
       LineBox[{1582, 493}], LineBox[{1583, 494}], LineBox[{1584, 495}], 
       LineBox[{1585, 496}], LineBox[{1590, 501}], LineBox[{1591, 502}], 
       LineBox[{1592, 503}], LineBox[{1593, 504}], LineBox[{1594, 505}], 
       LineBox[{1595, 506}], LineBox[{1596, 507}], LineBox[{1599, 510}], 
       LineBox[{1600, 511}], LineBox[{1601, 512}], LineBox[{1602, 513}], 
       LineBox[{1603, 514}], LineBox[{1608, 519}], LineBox[{1609, 520}], 
       LineBox[{1611, 522}], LineBox[{1612, 523}], LineBox[{1614, 525}], 
       LineBox[{1615, 526}], LineBox[{1619, 530}], LineBox[{1620, 531}], 
       LineBox[{1622, 533}], LineBox[{1624, 535}], LineBox[{1625, 536}], 
       LineBox[{1626, 537}], LineBox[{1627, 538}], LineBox[{1631, 542}], 
       LineBox[{1632, 543}], LineBox[{1633, 544}], LineBox[{1635, 546}], 
       LineBox[{1638, 549}], LineBox[{1640, 551}], LineBox[{1642, 553}], 
       LineBox[{1647, 558}], LineBox[{1648, 559}], LineBox[{1652, 563}], 
       LineBox[{1654, 565}], LineBox[{1655, 566}], LineBox[{1657, 568}], 
       LineBox[{1660, 571}], LineBox[{1661, 572}], LineBox[{1663, 574}], 
       LineBox[{1665, 576}], LineBox[{1666, 577}], LineBox[{1667, 578}], 
       LineBox[{1668, 579}], LineBox[{1669, 580}], LineBox[{1670, 581}], 
       LineBox[{1678, 589}], LineBox[{1679, 590}], LineBox[{1680, 591}], 
       LineBox[{1682, 593}], LineBox[{1683, 594}], LineBox[{1684, 595}], 
       LineBox[{1687, 598}], LineBox[{1688, 599}], LineBox[{1689, 600}], 
       LineBox[{1693, 604}], LineBox[{1695, 606}], LineBox[{1696, 607}], 
       LineBox[{1697, 608}], LineBox[{1698, 609}], LineBox[{1699, 610}], 
       LineBox[{1700, 611}], LineBox[{1702, 613}], LineBox[{1703, 614}], 
       LineBox[{1704, 615}], LineBox[{1705, 616}], LineBox[{1706, 617}], 
       LineBox[{1707, 618}], LineBox[{1708, 619}], LineBox[{1709, 620}], 
       LineBox[{1710, 621}], LineBox[{1712, 623}], LineBox[{1713, 624}], 
       LineBox[{1715, 626}], LineBox[{1716, 627}], LineBox[{1717, 628}], 
       LineBox[{1718, 629}], LineBox[{1719, 630}], LineBox[{1721, 632}], 
       LineBox[{1722, 633}], LineBox[{1723, 634}], LineBox[{1724, 635}], 
       LineBox[{1725, 636}], LineBox[{1726, 637}], LineBox[{1727, 638}], 
       LineBox[{1728, 639}], LineBox[{1730, 641}], LineBox[{1731, 642}], 
       LineBox[{1732, 643}], LineBox[{1733, 644}], LineBox[{1734, 645}], 
       LineBox[{1735, 646}], LineBox[{1737, 648}], LineBox[{1742, 653}], 
       LineBox[{1743, 654}], LineBox[{1744, 655}], LineBox[{1745, 656}], 
       LineBox[{1746, 657}], LineBox[{1747, 658}], LineBox[{1748, 659}], 
       LineBox[{1749, 660}], LineBox[{1750, 661}], LineBox[{1752, 663}], 
       LineBox[{1753, 664}], LineBox[{1754, 665}], LineBox[{1755, 666}], 
       LineBox[{1756, 667}], LineBox[{1758, 669}], LineBox[{1759, 670}], 
       LineBox[{1760, 671}], LineBox[{1761, 672}], LineBox[{1762, 673}], 
       LineBox[{1763, 674}], LineBox[{1765, 676}], LineBox[{1766, 677}], 
       LineBox[{1767, 678}], LineBox[{1768, 679}], LineBox[{1769, 680}], 
       LineBox[{1771, 682}], LineBox[{1773, 684}], LineBox[{1774, 685}], 
       LineBox[{1775, 686}], LineBox[{1776, 687}], LineBox[{1777, 688}], 
       LineBox[{1781, 692}], LineBox[{1782, 693}], LineBox[{1783, 694}], 
       LineBox[{1784, 695}], LineBox[{1786, 697}], LineBox[{1787, 698}], 
       LineBox[{1789, 700}], LineBox[{1790, 701}], LineBox[{1791, 702}], 
       LineBox[{1797, 708}], LineBox[{1798, 709}], LineBox[{1799, 710}], 
       LineBox[{1800, 711}], LineBox[{1801, 712}], LineBox[{1802, 713}], 
       LineBox[{1804, 715}], LineBox[{1805, 716}], LineBox[{1806, 717}], 
       LineBox[{1807, 718}], LineBox[{1808, 719}], LineBox[{1809, 720}], 
       LineBox[{1811, 722}], LineBox[{1812, 723}], LineBox[{1813, 724}], 
       LineBox[{1817, 728}], LineBox[{1820, 731}], LineBox[{1822, 733}], 
       LineBox[{1823, 734}], LineBox[{1825, 736}], LineBox[{1829, 740}], 
       LineBox[{1831, 742}], LineBox[{1834, 745}], LineBox[{1837, 748}], 
       LineBox[{1838, 749}], LineBox[{1839, 750}], LineBox[{1840, 751}], 
       LineBox[{1841, 752}], LineBox[{1843, 754}], LineBox[{1844, 755}], 
       LineBox[{1845, 756}], LineBox[{1846, 757}], LineBox[{1847, 758}], 
       LineBox[{1848, 759}], LineBox[{1849, 760}], LineBox[{1850, 761}], 
       LineBox[{1851, 762}], LineBox[{1852, 763}], LineBox[{1853, 764}], 
       LineBox[{1858, 769}], LineBox[{1863, 774}], LineBox[{1864, 775}], 
       LineBox[{1865, 776}], LineBox[{1866, 777}], LineBox[{1868, 779}], 
       LineBox[{1869, 780}], LineBox[{1878, 789}], LineBox[{1879, 790}], 
       LineBox[{1880, 791}], LineBox[{1881, 792}], LineBox[{1883, 794}], 
       LineBox[{1884, 795}], LineBox[{1886, 797}], LineBox[{1888, 799}], 
       LineBox[{1889, 800}], LineBox[{1890, 801}], LineBox[{1891, 802}], 
       LineBox[{1892, 803}], LineBox[{1894, 805}], LineBox[{1895, 806}], 
       LineBox[{1896, 807}], LineBox[{1897, 808}], LineBox[{1901, 812}], 
       LineBox[{1902, 813}], LineBox[{1906, 817}], LineBox[{1908, 819}], 
       LineBox[{1911, 822}], LineBox[{1913, 824}], LineBox[{1918, 829}], 
       LineBox[{1919, 830}], LineBox[{1920, 831}], LineBox[{1921, 832}], 
       LineBox[{1922, 833}], LineBox[{1923, 834}], LineBox[{1924, 835}], 
       LineBox[{1925, 836}], LineBox[{1926, 837}], LineBox[{1927, 838}], 
       LineBox[{1928, 839}], LineBox[{1932, 843}], LineBox[{1933, 844}], 
       LineBox[{1936, 847}], LineBox[{1937, 848}], LineBox[{1938, 849}], 
       LineBox[{1939, 850}], LineBox[{1941, 852}], LineBox[{1944, 855}], 
       LineBox[{1949, 860}], LineBox[{1950, 861}], LineBox[{1952, 863}], 
       LineBox[{1953, 864}], LineBox[{1954, 865}], LineBox[{1957, 868}], 
       LineBox[{1960, 871}], LineBox[{1961, 872}], LineBox[{1965, 876}], 
       LineBox[{1966, 877}], LineBox[{1970, 881}], LineBox[{1971, 882}], 
       LineBox[{1974, 885}], LineBox[{1975, 886}], LineBox[{1976, 887}], 
       LineBox[{1978, 889}], LineBox[{1987, 898}], LineBox[{1991, 902}], 
       LineBox[{1999, 910}], LineBox[{2000, 911}], LineBox[{2007, 918}], 
       LineBox[{2011, 922}], LineBox[{2012, 923}], LineBox[{2015, 926}], 
       LineBox[{2019, 930}], LineBox[{2020, 931}], LineBox[{2024, 935}], 
       LineBox[{2025, 936}], LineBox[{2030, 941}], LineBox[{2031, 942}], 
       LineBox[{2032, 943}], LineBox[{2033, 944}], LineBox[{2034, 945}], 
       LineBox[{2035, 946}], LineBox[{2036, 947}], LineBox[{2037, 948}], 
       LineBox[{2039, 950}], LineBox[{2040, 951}], LineBox[{2041, 952}], 
       LineBox[{2042, 953}], LineBox[{2044, 955}], LineBox[{2046, 957}], 
       LineBox[{2047, 958}], LineBox[{2048, 959}], LineBox[{2049, 960}], 
       LineBox[{2052, 963}], LineBox[{2053, 964}], LineBox[{2054, 965}], 
       LineBox[{2058, 969}], LineBox[{2059, 970}], LineBox[{2060, 971}], 
       LineBox[{2061, 972}], LineBox[{2062, 973}], LineBox[{2066, 977}], 
       LineBox[{2067, 978}], LineBox[{2068, 979}], LineBox[{2069, 980}], 
       LineBox[{2072, 983}], LineBox[{2073, 984}], LineBox[{2074, 985}], 
       LineBox[{2075, 986}], LineBox[{2076, 987}], LineBox[{2077, 988}], 
       LineBox[{2078, 989}], LineBox[{2079, 990}], LineBox[{2080, 991}], 
       LineBox[{2082, 993}], LineBox[{2083, 994}], LineBox[{2084, 995}], 
       LineBox[{2085, 996}], LineBox[{2086, 997}], LineBox[{2087, 998}], 
       LineBox[{2088, 999}], LineBox[{2089, 1000}], LineBox[{2090, 1001}], 
       LineBox[{2091, 1002}], LineBox[{2092, 1003}], LineBox[{2093, 1004}], 
       LineBox[{2094, 1005}], LineBox[{2095, 1006}], LineBox[{2096, 1007}], 
       LineBox[{2097, 1008}], LineBox[{2098, 1009}], LineBox[{2099, 1010}], 
       LineBox[{2100, 1011}], LineBox[{2101, 1012}], LineBox[{2102, 1013}], 
       LineBox[{2103, 1014}], LineBox[{2104, 1015}], LineBox[{2105, 1016}], 
       LineBox[{2106, 1017}], LineBox[{2108, 1019}], LineBox[{2109, 1020}], 
       LineBox[{2110, 1021}], LineBox[{2112, 1023}], LineBox[{2113, 1024}], 
       LineBox[{2114, 1025}], LineBox[{2115, 1026}], LineBox[{2116, 1027}], 
       LineBox[{2117, 1028}], LineBox[{2118, 1029}], LineBox[{2119, 1030}], 
       LineBox[{2120, 1031}], LineBox[{2121, 1032}], LineBox[{2123, 1034}], 
       LineBox[{2124, 1035}], LineBox[{2125, 1036}], LineBox[{2126, 1037}], 
       LineBox[{2128, 1039}], LineBox[{2129, 1040}], LineBox[{2130, 1041}], 
       LineBox[{2132, 1043}], LineBox[{2133, 1044}], LineBox[{2136, 1047}], 
       LineBox[{2139, 1050}], LineBox[{2140, 1051}], LineBox[{2141, 1052}], 
       LineBox[{2142, 1053}], LineBox[{2143, 1054}], LineBox[{2144, 1055}], 
       LineBox[{2145, 1056}], LineBox[{2146, 1057}], LineBox[{2147, 1058}], 
       LineBox[{2156, 1067}], LineBox[{2157, 1068}], LineBox[{2163, 1074}], 
       LineBox[{2166, 1077}], LineBox[{2167, 1078}], LineBox[{2169, 1080}], 
       LineBox[{2171, 1082}], LineBox[{2172, 1083}], LineBox[{2173, 1084}], 
       LineBox[{2176, 1087}], LineBox[{2178, 1089}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{1093, 4}], LineBox[{1095, 6}], LineBox[{1096, 7}], 
       LineBox[{1097, 8}], LineBox[{1098, 9}], LineBox[{1099, 10}], 
       LineBox[{1103, 14}], LineBox[{1104, 15}], LineBox[{1105, 16}], 
       LineBox[{1106, 17}], LineBox[{1107, 18}], LineBox[{1111, 22}], 
       LineBox[{1112, 23}], LineBox[{1113, 24}], LineBox[{1114, 25}], 
       LineBox[{1117, 28}], LineBox[{1120, 31}], LineBox[{1121, 32}], 
       LineBox[{1122, 33}], LineBox[{1123, 34}], LineBox[{1124, 35}], 
       LineBox[{1125, 36}], LineBox[{1133, 44}], LineBox[{1136, 47}], 
       LineBox[{1137, 48}], LineBox[{1138, 49}], LineBox[{1140, 51}], 
       LineBox[{1141, 52}], LineBox[{1142, 53}], LineBox[{1143, 54}], 
       LineBox[{1144, 55}], LineBox[{1145, 56}], LineBox[{1146, 57}], 
       LineBox[{1147, 58}], LineBox[{1153, 64}], LineBox[{1155, 66}], 
       LineBox[{1156, 67}], LineBox[{1157, 68}], LineBox[{1158, 69}], 
       LineBox[{1159, 70}], LineBox[{1164, 75}], LineBox[{1167, 78}], 
       LineBox[{1169, 80}], LineBox[{1170, 81}], LineBox[{1171, 82}], 
       LineBox[{1173, 84}], LineBox[{1174, 85}], LineBox[{1176, 87}], 
       LineBox[{1178, 89}], LineBox[{1179, 90}], LineBox[{1182, 93}], 
       LineBox[{1183, 94}], LineBox[{1184, 95}], LineBox[{1186, 97}], 
       LineBox[{1187, 98}], LineBox[{1188, 99}], LineBox[{1190, 101}], 
       LineBox[{1191, 102}], LineBox[{1193, 104}], LineBox[{1194, 105}], 
       LineBox[{1195, 106}], LineBox[{1196, 107}], LineBox[{1197, 108}], 
       LineBox[{1198, 109}], LineBox[{1199, 110}], LineBox[{1200, 111}], 
       LineBox[{1203, 114}], LineBox[{1204, 115}], LineBox[{1205, 116}], 
       LineBox[{1207, 118}], LineBox[{1213, 124}], LineBox[{1214, 125}], 
       LineBox[{1215, 126}], LineBox[{1216, 127}], LineBox[{1217, 128}], 
       LineBox[{1218, 129}], LineBox[{1219, 130}], LineBox[{1220, 131}], 
       LineBox[{1221, 132}], LineBox[{1222, 133}], LineBox[{1223, 134}], 
       LineBox[{1224, 135}], LineBox[{1225, 136}], LineBox[{1226, 137}], 
       LineBox[{1227, 138}], LineBox[{1228, 139}], LineBox[{1229, 140}], 
       LineBox[{1231, 142}], LineBox[{1232, 143}], LineBox[{1233, 144}], 
       LineBox[{1234, 145}], LineBox[{1238, 149}], LineBox[{1242, 153}], 
       LineBox[{1243, 154}], LineBox[{1244, 155}], LineBox[{1245, 156}], 
       LineBox[{1247, 158}], LineBox[{1248, 159}], LineBox[{1249, 160}], 
       LineBox[{1250, 161}], LineBox[{1251, 162}], LineBox[{1252, 163}], 
       LineBox[{1253, 164}], LineBox[{1254, 165}], LineBox[{1255, 166}], 
       LineBox[{1256, 167}], LineBox[{1257, 168}], LineBox[{1258, 169}], 
       LineBox[{1259, 170}], LineBox[{1260, 171}], LineBox[{1261, 172}], 
       LineBox[{1263, 174}], LineBox[{1264, 175}], LineBox[{1269, 180}], 
       LineBox[{1270, 181}], LineBox[{1271, 182}], LineBox[{1274, 185}], 
       LineBox[{1275, 186}], LineBox[{1276, 187}], LineBox[{1277, 188}], 
       LineBox[{1278, 189}], LineBox[{1279, 190}], LineBox[{1280, 191}], 
       LineBox[{1281, 192}], LineBox[{1282, 193}], LineBox[{1283, 194}], 
       LineBox[{1285, 196}], LineBox[{1286, 197}], LineBox[{1287, 198}], 
       LineBox[{1288, 199}], LineBox[{1289, 200}], LineBox[{1290, 201}], 
       LineBox[{1291, 202}], LineBox[{1292, 203}], LineBox[{1295, 206}], 
       LineBox[{1296, 207}], LineBox[{1297, 208}], LineBox[{1298, 209}], 
       LineBox[{1299, 210}], LineBox[{1300, 211}], LineBox[{1301, 212}], 
       LineBox[{1302, 213}], LineBox[{1303, 214}], LineBox[{1304, 215}], 
       LineBox[{1305, 216}], LineBox[{1308, 219}], LineBox[{1309, 220}], 
       LineBox[{1310, 221}], LineBox[{1313, 224}], LineBox[{1314, 225}], 
       LineBox[{1315, 226}], LineBox[{1316, 227}], LineBox[{1317, 228}], 
       LineBox[{1318, 229}], LineBox[{1320, 231}], LineBox[{1321, 232}], 
       LineBox[{1322, 233}], LineBox[{1323, 234}], LineBox[{1324, 235}], 
       LineBox[{1327, 238}], LineBox[{1328, 239}], LineBox[{1329, 240}], 
       LineBox[{1330, 241}], LineBox[{1332, 243}], LineBox[{1333, 244}], 
       LineBox[{1343, 254}], LineBox[{1344, 255}], LineBox[{1354, 265}], 
       LineBox[{1355, 266}], LineBox[{1374, 285}], LineBox[{1379, 290}], 
       LineBox[{1384, 295}], LineBox[{1385, 296}], LineBox[{1390, 301}], 
       LineBox[{1395, 306}], LineBox[{1397, 308}], LineBox[{1398, 309}], 
       LineBox[{1416, 327}], LineBox[{1445, 356}], LineBox[{1446, 357}], 
       LineBox[{1447, 358}], LineBox[{1453, 364}], LineBox[{1454, 365}], 
       LineBox[{1455, 366}], LineBox[{1456, 367}], LineBox[{1457, 368}], 
       LineBox[{1458, 369}], LineBox[{1460, 371}], LineBox[{1461, 372}], 
       LineBox[{1462, 373}], LineBox[{1470, 381}], LineBox[{1476, 387}], 
       LineBox[{1489, 400}], LineBox[{1490, 401}], LineBox[{1496, 407}], 
       LineBox[{1497, 408}], LineBox[{1504, 415}], LineBox[{1505, 416}], 
       LineBox[{1509, 420}], LineBox[{1513, 424}], LineBox[{1514, 425}], 
       LineBox[{1530, 441}], LineBox[{1531, 442}], LineBox[{1535, 446}], 
       LineBox[{1560, 471}], LineBox[{1562, 473}], LineBox[{1566, 477}], 
       LineBox[{1568, 479}], LineBox[{1569, 480}], LineBox[{1570, 481}], 
       LineBox[{1586, 497}], LineBox[{1587, 498}], LineBox[{1588, 499}], 
       LineBox[{1589, 500}], LineBox[{1597, 508}], LineBox[{1598, 509}], 
       LineBox[{1604, 515}], LineBox[{1605, 516}], LineBox[{1606, 517}], 
       LineBox[{1607, 518}], LineBox[{1610, 521}], LineBox[{1613, 524}], 
       LineBox[{1616, 527}], LineBox[{1617, 528}], LineBox[{1618, 529}], 
       LineBox[{1621, 532}], LineBox[{1623, 534}], LineBox[{1628, 539}], 
       LineBox[{1629, 540}], LineBox[{1630, 541}], LineBox[{1634, 545}], 
       LineBox[{1636, 547}], LineBox[{1637, 548}], LineBox[{1639, 550}], 
       LineBox[{1641, 552}], LineBox[{1643, 554}], LineBox[{1644, 555}], 
       LineBox[{1645, 556}], LineBox[{1646, 557}], LineBox[{1649, 560}], 
       LineBox[{1650, 561}], LineBox[{1651, 562}], LineBox[{1653, 564}], 
       LineBox[{1656, 567}], LineBox[{1658, 569}], LineBox[{1659, 570}], 
       LineBox[{1662, 573}], LineBox[{1664, 575}], LineBox[{1671, 582}], 
       LineBox[{1672, 583}], LineBox[{1673, 584}], LineBox[{1674, 585}], 
       LineBox[{1675, 586}], LineBox[{1676, 587}], LineBox[{1677, 588}], 
       LineBox[{1681, 592}], LineBox[{1685, 596}], LineBox[{1686, 597}], 
       LineBox[{1690, 601}], LineBox[{1691, 602}], LineBox[{1692, 603}], 
       LineBox[{1694, 605}], LineBox[{1701, 612}], LineBox[{1711, 622}], 
       LineBox[{1714, 625}], LineBox[{1720, 631}], LineBox[{1729, 640}], 
       LineBox[{1736, 647}], LineBox[{1738, 649}], LineBox[{1739, 650}], 
       LineBox[{1740, 651}], LineBox[{1741, 652}], LineBox[{1751, 662}], 
       LineBox[{1757, 668}], LineBox[{1764, 675}], LineBox[{1770, 681}], 
       LineBox[{1772, 683}], LineBox[{1778, 689}], LineBox[{1779, 690}], 
       LineBox[{1780, 691}], LineBox[{1785, 696}], LineBox[{1788, 699}], 
       LineBox[{1792, 703}], LineBox[{1793, 704}], LineBox[{1794, 705}], 
       LineBox[{1795, 706}], LineBox[{1796, 707}], LineBox[{1803, 714}], 
       LineBox[{1810, 721}], LineBox[{1814, 725}], LineBox[{1815, 726}], 
       LineBox[{1816, 727}], LineBox[{1818, 729}], LineBox[{1819, 730}], 
       LineBox[{1821, 732}], LineBox[{1824, 735}], LineBox[{1826, 737}], 
       LineBox[{1827, 738}], LineBox[{1828, 739}], LineBox[{1830, 741}], 
       LineBox[{1832, 743}], LineBox[{1833, 744}], LineBox[{1835, 746}], 
       LineBox[{1836, 747}], LineBox[{1842, 753}], LineBox[{1854, 765}], 
       LineBox[{1855, 766}], LineBox[{1856, 767}], LineBox[{1857, 768}], 
       LineBox[{1859, 770}], LineBox[{1860, 771}], LineBox[{1861, 772}], 
       LineBox[{1862, 773}], LineBox[{1867, 778}], LineBox[{1870, 781}], 
       LineBox[{1871, 782}], LineBox[{1872, 783}], LineBox[{1873, 784}], 
       LineBox[{1874, 785}], LineBox[{1875, 786}], LineBox[{1876, 787}], 
       LineBox[{1877, 788}], LineBox[{1882, 793}], LineBox[{1885, 796}], 
       LineBox[{1887, 798}], LineBox[{1893, 804}], LineBox[{1898, 809}], 
       LineBox[{1899, 810}], LineBox[{1900, 811}], LineBox[{1903, 814}], 
       LineBox[{1904, 815}], LineBox[{1905, 816}], LineBox[{1907, 818}], 
       LineBox[{1909, 820}], LineBox[{1910, 821}], LineBox[{1912, 823}], 
       LineBox[{1914, 825}], LineBox[{1915, 826}], LineBox[{1916, 827}], 
       LineBox[{1917, 828}], LineBox[{1929, 840}], LineBox[{1930, 841}], 
       LineBox[{1931, 842}], LineBox[{1934, 845}], LineBox[{1935, 846}], 
       LineBox[{1940, 851}], LineBox[{1942, 853}], LineBox[{1943, 854}], 
       LineBox[{1945, 856}], LineBox[{1946, 857}], LineBox[{1947, 858}], 
       LineBox[{1948, 859}], LineBox[{1951, 862}], LineBox[{1955, 866}], 
       LineBox[{1956, 867}], LineBox[{1958, 869}], LineBox[{1959, 870}], 
       LineBox[{1962, 873}], LineBox[{1963, 874}], LineBox[{1964, 875}], 
       LineBox[{1967, 878}], LineBox[{1968, 879}], LineBox[{1969, 880}], 
       LineBox[{1972, 883}], LineBox[{1973, 884}], LineBox[{1977, 888}], 
       LineBox[{1979, 890}], LineBox[{1980, 891}], LineBox[{1981, 892}], 
       LineBox[{1982, 893}], LineBox[{1983, 894}], LineBox[{1984, 895}], 
       LineBox[{1985, 896}], LineBox[{1986, 897}], LineBox[{1988, 899}], 
       LineBox[{1989, 900}], LineBox[{1990, 901}], LineBox[{1992, 903}], 
       LineBox[{1993, 904}], LineBox[{1994, 905}], LineBox[{1995, 906}], 
       LineBox[{1996, 907}], LineBox[{1997, 908}], LineBox[{1998, 909}], 
       LineBox[{2001, 912}], LineBox[{2002, 913}], LineBox[{2003, 914}], 
       LineBox[{2004, 915}], LineBox[{2005, 916}], LineBox[{2006, 917}], 
       LineBox[{2008, 919}], LineBox[{2009, 920}], LineBox[{2010, 921}], 
       LineBox[{2013, 924}], LineBox[{2014, 925}], LineBox[{2016, 927}], 
       LineBox[{2017, 928}], LineBox[{2018, 929}], LineBox[{2021, 932}], 
       LineBox[{2022, 933}], LineBox[{2023, 934}], LineBox[{2026, 937}], 
       LineBox[{2027, 938}], LineBox[{2028, 939}], LineBox[{2029, 940}], 
       LineBox[{2038, 949}], LineBox[{2043, 954}], LineBox[{2045, 956}], 
       LineBox[{2050, 961}], LineBox[{2051, 962}], LineBox[{2055, 966}], 
       LineBox[{2056, 967}], LineBox[{2057, 968}], LineBox[{2063, 974}], 
       LineBox[{2064, 975}], LineBox[{2065, 976}], LineBox[{2070, 981}], 
       LineBox[{2071, 982}], LineBox[{2081, 992}], LineBox[{2107, 1018}], 
       LineBox[{2111, 1022}], LineBox[{2122, 1033}], LineBox[{2127, 1038}], 
       LineBox[{2131, 1042}], LineBox[{2134, 1045}], LineBox[{2135, 1046}], 
       LineBox[{2137, 1048}], LineBox[{2138, 1049}], LineBox[{2148, 1059}], 
       LineBox[{2149, 1060}], LineBox[{2150, 1061}], LineBox[{2151, 1062}], 
       LineBox[{2152, 1063}], LineBox[{2153, 1064}], LineBox[{2154, 1065}], 
       LineBox[{2155, 1066}], LineBox[{2158, 1069}], LineBox[{2159, 1070}], 
       LineBox[{2160, 1071}], LineBox[{2161, 1072}], LineBox[{2162, 1073}], 
       LineBox[{2164, 1075}], LineBox[{2165, 1076}], LineBox[{2168, 1079}], 
       LineBox[{2170, 1081}], LineBox[{2174, 1085}], LineBox[{2175, 1086}], 
       LineBox[{2177, 1088}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.004583333333333334], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwN00OiGAoCALA3tW3btm3btm392rZt27Zt27Y7WeQISdiofaV2/wsICCgY
JCBgUIiAgMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7z
mM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exhL/vY
zwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu97jP
Ax7yiMc84SnPeM4LXvKK17zhLe94zwc+8onPfOEr3/jOD37yi9/84S//CAgZ
EPA/AhGYIAQlGMEJQUhCEZowhCUc4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJ
QEISkZgkJCUZyUlBSlKRmjSkJR3pyUBGMpGZLGQlG9nJQU5ykZs85CUf+SlA
QQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa1alBTWpRmzrUpR71aUBD
GtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50pRvd6UFPetGbPvSlH//RnwEM
ZBCDGcJQhjGcEYxkFKMZw1jGMZ4JTGQSk5nCVKYxnRnMZBazmcNc5jGfBSxk
EYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb2cJWtrGdHexkF7vZw172sZ8DHOQQ
hznCUY5xnBOc5BSnOcNZznGeC1zkEpe5wlWucZ0b3OQWt7nDXe5xnwc85BGP
ecJTnvGcF7zkFa95w1ve8Z4PfOQTn/nCV77xnR/85Be/+cNf/hEQyn8CEZgg
BCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4xCUe8UlAQhKRmCQk
JRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzkJR/5KUBBClGYIhSl
GMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSlHvVpQEMa0ZgmNKUZ
zWlBS1rRmja0pR3t6UBHOtGZLnSlG93pQU960Zs+9KUf/9GfAQxkEIMZwlCG
MZwRjGQUoxnDWMYxnglMZBKTmcJUpjGdGcxkFrOZw1zmMZ8FLGQRi1nCUpax
nBWsZBWrWcNa1rGeDWxkE5vZwla2sZ0d7GQXu9nDXvaxnwMc5BCHOcJRjnGc
E5zkFKc5w1nOcZ4LXOQSl7nCVa5xnRvc5Ba3ucNd7nGfBzzkEY95wlOe8ZwX
vOQVr3nDW97xng985BOf+cJXvvGdH/zkF7/5w1/+ERDafwIRmCAEJRjBCUFI
QhGaMIQlHOGJQEQiEZkoRCUa0YlBTGIRmzjEJR7xSUBCEpGYJCQlGclJQUpS
kZo0pCUd6clARjKRmSxkJRvZyUFOcpGbPOQlH/kpQEEKUZgiFKUYxSlBSUpR
mjKUpRzlqUBFKlGZKlSlGtWpQU1qUZs61KUe9WlAQxrRmCY0pRnNaUFLWtGa
NrSlHe3pQEc60ZkudKUb3elBT3rRmz70pR//0Z8BDGQQgxnCUIYxnBGMZBSj
GcNYxjGeCUxkEpOZwlSmMZ0ZzGQWs5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZ
w1rWsZ4NbGQTm9nCVraxnR3sZBe72cNe9rGfAxzkEIc5wlGOcZwTnOQUpznD
Wc5xngtc5BKXucJVrnGdG9zkFre5w13ucZ8HPOQRj3nCU57xnBe85BWvecNb
3vGeD3zkE5/5wle+8Z0f/OQXv/nDX/4REMZ/AhGYIAQlGMEJQUhCEZowhCUc
4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJQEISkZgkJCUZyUlBSlKRmjSkJR3p
yUBGMpGZLGQlG9nJQU5ykZs85CUf+SlAQQpRmCIUpRjFKUFJSlGaMpSlHOWp
QEUqUZkqVKUa1alBTWpRmzrUpR71aUBDGtGYJjSlGc1pQUta0Zo2tKUd7elA
RzrRmS50pRvd6UFPetGbPvSlH//RnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4J
TGQSk5nCVKYxnRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1s
ZBOb2cJWtrGdHexkF7vZw172sZ8DHOQQ/wfgGlSS
        "]]}, {}}}], {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"actual value - predicted value\"", TraditionalForm], None}, {
     FormBox["\"predicted value\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.21780046102631445`, 
   0.42356718838458973`}, {-4.254839093128274, 4.254839093128274}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.710061902772957*^9, 3.7100686075530167`*^9, 
  3.7100686650865183`*^9, 3.7100688251435184`*^9, 3.710069055441561*^9, 
  3.7100700724988985`*^9, 3.7100730978109007`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{
    RowBox[{"trainingset", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "6", ",", "8"}], "}"}]}], "]"}], "]"}], "\[Rule]", 
    RowBox[{"Standardize", "[", 
     RowBox[{"trainingset", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "9"}], "]"}], "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.709938311722932*^9, 3.709938323528329*^9}, {
   3.7099383939406323`*^9, 3.709938396706202*^9}, {3.7099384786168337`*^9, 
   3.7099384822875795`*^9}, {3.7099385224777436`*^9, 3.7099385275187683`*^9}, 
   3.709947964195163*^9, 3.7099482788205357`*^9, 3.709955593590539*^9, 
   3.7099827434228754`*^9, {3.7100687063587704`*^9, 3.710068708791257*^9}, {
   3.7100690776840076`*^9, 3.710069083720215*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{}, {{}, {
                  PointSize[0.125], 
                  GrayLevel[0.55], 
                  
                  PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                    4, 4.}}]}, {
                  GrayLevel[0.7], 
                  AbsoluteThickness[1.5], 
                  
                  BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                   5, 4}}]}}, {}}, Axes -> {False, False}, 
               AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
               BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {All, All}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of features: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{}, {{}, {
                  PointSize[0.125], 
                  GrayLevel[0.55], 
                  
                  PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                    4, 4.}}]}, {
                  GrayLevel[0.7], 
                  AbsoluteThickness[1.5], 
                  
                  BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                   5, 4}}]}}, {}}, Axes -> {False, False}, 
               AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
               BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {All, All}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of features: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["8073", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.709938338273324*^9, 3.7099384107090387`*^9, 3.7099384945470705`*^9, 
   3.7099479350071907`*^9, 3.709948259435571*^9, 3.7099482929864345`*^9, 
   3.7099827580537987`*^9, 3.71006181961294*^9, 3.710068723099117*^9, 
   3.710069097734017*^9, 3.710069456635771*^9, 3.710070102935983*^9, 
   3.710070428319036*^9, {3.7100705604524527`*^9, 3.7100706133970385`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "=", 
  RowBox[{"PredictorMeasurements", "[", 
   RowBox[{"p", ",", 
    RowBox[{
     RowBox[{"testset", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "6", ",", "8"}], "}"}]}], "]"}], "]"}], "\[Rule]", 
     RowBox[{"Standardize", "[", 
      RowBox[{"testset", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "9"}], "]"}], "]"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7099479414545097`*^9, 3.7099479532639265`*^9}, 
   3.709955600397936*^9, 3.709982751837556*^9, {3.710068715254549*^9, 
   3.7100687178810744`*^9}, {3.7100690888902545`*^9, 3.7100690960606823`*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorMeasurementsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  GrayLevel[0.6], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  Dashing[{Small, Small}], 
                  
                  LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                   11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                   GrayLevel[0.4], 
                   PointSize[0.09], 
                   AbsoluteThickness[1.6], 
                   
                   PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                    2.227816320451859, 2.584653237430766}, {3.043099335090081,
                     4.798822972025658}, {3.5728355469237116`, 
                    5.9507424155697155`}, {4.158566334344331, 
                    5.2097676165465385`}, {4.824808988689111, 
                    7.23346088027902}, {6.88649660338492, 
                    5.297021421229134}, {7.819072150835878, 
                    6.533166043611269}, {8.437306856915493, 
                    8.81724006216815}, {8.604907881861761, 
                    11.302704526196452`}}]}, {}}, {}}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1089", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  GrayLevel[0.6], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  Dashing[{Small, Small}], 
                  
                  LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                   11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                   GrayLevel[0.4], 
                   PointSize[0.09], 
                   AbsoluteThickness[1.6], 
                   
                   PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                    2.227816320451859, 2.584653237430766}, {3.043099335090081,
                     4.798822972025658}, {3.5728355469237116`, 
                    5.9507424155697155`}, {4.158566334344331, 
                    5.2097676165465385`}, {4.824808988689111, 
                    7.23346088027902}, {6.88649660338492, 
                    5.297021421229134}, {7.819072150835878, 
                    6.533166043611269}, {8.437306856915493, 
                    8.81724006216815}, {8.604907881861761, 
                    11.302704526196452`}}]}, {}}, {}}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1089", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"StandardDeviation: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["0.985191413970078`", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorMeasurementsObject[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7099482935415487`*^9, 3.709982758532893*^9, 3.7100618201475816`*^9, 
   3.7100687235942163`*^9, 3.7100690994343567`*^9, 3.7100694572368903`*^9, 
   3.710070103440084*^9, 3.710070428900152*^9, {3.710070560953553*^9, 
   3.710070613977154*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<Properties\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7100704209915724`*^9, 3.710070428100993*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ComparisonPlot\"\>", ",", "\<\"InversePerplexity\"\>", 
   ",", "\<\"Likelihood\"\>", ",", "\<\"LogLikelihood\"\>", 
   ",", "\<\"LogLikelihoodRate\"\>", ",", "\<\"MeanDeviation\"\>", 
   ",", "\<\"MeanSquare\"\>", ",", "\<\"Perplexity\"\>", 
   ",", "\<\"Properties\"\>", ",", "\<\"RejectionRate\"\>", 
   ",", "\<\"ResidualHistogram\"\>", ",", "\<\"ResidualPlot\"\>", 
   ",", "\<\"Residuals\"\>", ",", "\<\"StandardDeviation\"\>", 
   ",", "\<\"TotalSquare\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.710070428960165*^9, {3.7100705610105653`*^9, 3.7100706140291643`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<RejectionRate\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7100704335340805`*^9, 3.7100704421037927`*^9}}],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{
  3.7100704426909094`*^9, {3.710070561066576*^9, 3.710070614085176*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ComparisonPlot\>\"", "]"}]], "Input"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.004583333333333334], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1: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
++HGcjfRLWgP2otkXRDj8m3J/x8nnTd/
          "]]}, {}}}, {}, {}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           GrayLevel[0.5], 
           Dashing[{Small, Small}], 
           Thickness[0.002]], 
          LineBox[CompressedData["
1:eJxFxXswE3AcAPANsxmbR5JTdulWEs3RnUMOvTzOtTMmcVOzmi7uOPpnp0hm
t7z6ozy3CzujNJpXmeYx5hxJs5Iyzh8s1yZbt26Xck71x76/Pz738eMUpHDt
MBjM5X/+P3xTkBfT56qynV9t+aqRoan919nsTvSj/Yi0B2I0R2SKVgvQxIV0
j/hMNOvsqWG6PXrfXeN4LY0MH5zkiCNWXeAabkvigXvO8NoVEuvTMSKMSZq+
xewmwPxQ/1otHQ8vHfkgc17EwQ5pvTQa2wF+UhY2R8fZw5aXjtlBtVi4f6HU
jUDDwOIyZkKTbG/cdiE3hiNS/YGdQorlTfgd+JxdotnN0woHF5T+yqBZ4HEB
PifaaoLZ4ZGTI94GWKBwEZxp24AXheTMKO4KbPGJauwq18ANisEAXv0ArMh9
36cuV8bYLp7x9NKsaeE84WHKi45V2HTI0EMP1MPtLdRNTasB9vYJj8iqNMOu
weMlUpkFZuQ+DmxhW+GfrdpN3+Qd+KNJlS8h7cJ7kkQac3QPVvu3lkynYmJt
n6gufKuXY+Hhrd++cQH28NZVXXpXpQN8nic8Td3AwbN1Rqf1DDxsHu14Jxki
wJf0Xg3SUCKsGmHujnU6wzqJMW4FS4KpFWHNkcVkmHRHpxUvu6KrjqcSm93g
oGVF7LdUd1hM4/nF23nALAFWycChKatVTBYBLal8Kiwko5/pJ7fFPugBEenN
j1D0nGN7iugGuiYr6Ls0B00ffCWQ30Zrs2cUUwXozyPbFPNd9EZR+NaFOrR0
dqKC3ojOOZpEyRChDfNZjPw2tPkkf6ipG91734XRLkcXLdUbe/rRVv5zX7UC
/VoXMjSvRPNClMlfxtCRDy8a1yfQu2vz/O0p9F/DyD+p
           "]]}, 
         Annotation[#, "Charting`Private`Tag$703931#1"]& ]}}, {}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, 
     PlotRange -> {{-3.961546921917627, 
      4.692312473896715}, {-3.961546921917627, 4.692312473896715}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"actual value\"", TraditionalForm], None}, {
        FormBox["\"predicted value\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-3.961546921917627, 
      4.692312473896715}, {-3.961546921917627, 4.692312473896715}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"predictions\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"perfect prediction line\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}], 
                    Thickness[0.018000000000000002`]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}], 
                    Thickness[0.018000000000000002`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7099482937986*^9, 3.709982758638915*^9, 3.710061763935313*^9, 
   3.7100618202659273`*^9, 3.710061861765993*^9, 3.7100687237202406`*^9, 
   3.7100694573779187`*^9, 3.710070103560108*^9, 3.710070461272625*^9, {
   3.7100705612046037`*^9, 3.7100706142242036`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<StandardDeviation\>\"", "]"}]], "Input"],

Cell[BoxData["0.985191413970078`"], "Output",
 CellChangeTimes->{
  3.709948293897621*^9, 3.7099827586749215`*^9, 3.710061768714899*^9, 
   3.7100618310333576`*^9, 3.7100687272949567`*^9, 3.7100694574419317`*^9, 
   3.7100701036061172`*^9, 3.7100704564816675`*^9, {3.7100705612676163`*^9, 
   3.710070614282216*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ResidualHistogram\>\"", "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.574], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.574], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-3.5, 0}, {-3., 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{69.79400000000004, 103.70100000000009`}, {
          139.54270849535, 141.7239041117972}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-2.5, 0}, {-2., 7}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{135.90800000000004`, 169.81500000000005`}, {
          131.55553479666688`, 141.7239041117972}}],
        StatusArea[#, 7]& ,
        TagBoxNote->"7"],
       StyleBox["7", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[7, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-2., 0}, {-1.5, 32}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{168.96500000000006`, 202.87200000000007`}, {
          98.27564438548715, 141.7239041117972}}],
        StatusArea[#, 32]& ,
        TagBoxNote->"32"],
       StyleBox["32", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[32, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-1.5, 0}, {-1., 133}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{202.02200000000008`, 
          235.92900000000006`}, {-36.17511287567885, 141.7239041117972}}],
        StatusArea[#, 133]& ,
        TagBoxNote->"133"],
       StyleBox["133", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[133, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-1., 0}, {-0.5, 233}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{235.07900000000006`, 
          268.9860000000001}, {-169.29467452039768`, 141.7239041117972}}],
        StatusArea[#, 233]& ,
        TagBoxNote->"233"],
       StyleBox["233", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[233, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-0.5, 0}, {0., 243}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{268.1360000000001, 
          302.0430000000001}, {-182.60663068486957`, 141.7239041117972}}],
        StatusArea[#, 243]& ,
        TagBoxNote->"243"],
       StyleBox["243", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[243, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {0.5, 189}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{301.1930000000001, 
          335.10000000000014`}, {-110.7220673967214, 141.7239041117972}}],
        StatusArea[#, 189]& ,
        TagBoxNote->"189"],
       StyleBox["189", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[189, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.5, 0}, {1., 115}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{334.2500000000001, 
          368.15700000000015`}, {-12.213591779629468`, 141.7239041117972}}],
        StatusArea[#, 115]& ,
        TagBoxNote->"115"],
       StyleBox["115", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[115, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1., 0}, {1.5, 68}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{367.30700000000013`, 401.2140000000001}, {
          50.35260219338838, 141.7239041117972}}],
        StatusArea[#, 68]& ,
        TagBoxNote->"68"],
       StyleBox["68", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[68, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.5, 0}, {2., 29}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{400.3640000000001, 434.27100000000013`}, {
          102.26923123482872`, 141.7239041117972}}],
        StatusArea[#, 29]& ,
        TagBoxNote->"29"],
       StyleBox["29", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[29, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2., 0}, {2.5, 19}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{433.4210000000001, 467.32800000000015`}, {
          115.58118739930062`, 141.7239041117972}}],
        StatusArea[#, 19]& ,
        TagBoxNote->"19"],
       StyleBox["19", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[19, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2.5, 0}, {3., 8}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{466.4780000000001, 500.38500000000016`}, {
          130.2243391802197, 141.7239041117972}}],
        StatusArea[#, 8]& ,
        TagBoxNote->"8"],
       StyleBox["8", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[8, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3., 0}, {3.5, 6}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{499.53500000000014`, 533.4420000000002}, {
          132.88673041311407`, 141.7239041117972}}],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3.5, 0}, {4., 3}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{532.5920000000001, 566.4990000000003}, {
          136.88031726245563`, 141.7239041117972}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4., 0}, {4.5, 3}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{565.6490000000001, 599.5560000000003}, {
          136.88031726245563`, 141.7239041117972}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{-3.66, 0},
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"count\"", TraditionalForm], None}, {
     FormBox["\"actual value - predicted value\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-3.5, 4.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7099495571940966`*^9, 3.7099827596071095`*^9, 3.7100618419464912`*^9, 
   3.710069457524948*^9, 3.710070134357265*^9, 3.710070474829335*^9, {
   3.7100705613536334`*^9, 3.710070614364231*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ResidualPlot\>\"", "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
ie979zBRhKMF+pPVdLmRQBHGex/PaKXK1PmLHi7gdmobI9p3RqFImYsU/fX1
kvlOunbUbxaSGoIDZ+ZQL+ZvFubRRD06y56kb0QA9Tkps8qhescK4FjxF8J2
4w2wv+CHAebmBngflHJdgrPPdBLafzIYK8e1YX9jxw8CKh51sL6aT2TWwy5o
/4VW6mXfciKY7+fBfJ8PNuTAtJaONe46pMDJXfcWe6WRNai2bAi/4H1SgLHE
dL4N2sN7mDF09gOup/XFOqmOzxTs71ipvRIFJ+p9UZVPq+mVJ4C3CHYLDBh8
gf50l7N1SvxDgVM1R0QsCFAf9VznNditifqsESGvzMFRjDf3vnq6XksTzzdW
UVfmWj7+/iMuNIlgwwv150t2I4rx9/B7xsJ53kwnAX+PQStUuM/tEcZ7E/z/
//vD/1qGeM1/Ev/dz//Df/gP//MY9Jk//G/hP+f5h/8n8W997Q//c+z5z7bv
bz3lD/9r+J/tP3/3fv7wfzaDXvkfyn/s+Yf/8B/+V/HfrQf+T+c/5/WH/5P1
6b97f3/O6w//0a//ffrxP7v9v6pX/7P17r/bvn/4/y09+e9e7x/+r53ff1VP
/bv1sH+1PvzP1pP/6Nl/+L8T/9/qrX+3XvNfXf+/W1/+73aef/gP/+H/Pvx3
62v/bD33360P/7v15v+08/3D/2/x3633/d3683+aPf/wv1ev/k/XQ/+r+vW/
2v5/9Os//If/c/hfHR/+d+s3/+r1/O/s+b/r/+8+37/7PP7wH/6fpL/+p+//
D//hP/zfR8/8u/fz390+/2x7/p/2tx3WTN4qxvzSrBax7x0ksP6fUbHvxlty
rFe43XLFPdp8EvKPVM3eei+yiflkcr9/k92K/QXtAyLHSI4XUsj95iQuVttv
9NTA9uoDRxgZsb1KaOdbh0bMt90mZ9g0TYHr0+S+nO0mjvUIy+6XRb2mxnzB
t7N7XfqvYf5siQuWhdL0mA/9dPL1G7K55cBiRRGcld8xP3R3hkTLauQPzO99
8iTFK51umF+MfJpnbB6ZQ9gxqP95FvBJk9nn/vzDMP6AXa+89xkyud96xcli
L6lmKhLgKIf7R6fNWyG/6ZRIpMRlN8x368XQ5rpIj/mBbcQfteccx/1FU7Ll
uShhfuqDfZyZCkcw/7iPQnSJwuN8mP/lArd4V+skcFfL1U3XqTFghVx/ul5J
rC9X10ntnX92Ctj4BpGxUQjmm7YLmnPimSvAeoyb/p6h/rj+ich61pZjWE/u
aYGFheMpzKec8KHJSLagGOvnVeyNIJaMBNZVlZZNZK/B+n8xnEnDnp3wfP7E
EJUmw1asP+h66IbT+lfgWz0nugV91jC/dV5/e83JFeALJRvKnyy/Ad+gizhs
nd8E40d9Ypiqg9ahnXPu2jajWcznzDbzy2XX0Ay2v6ggZuakhfNV7vsRzshK
ByxsaSj1bBsp8IPJhRLRbGSrppIdju+TYL6n7bwlI4aZsJ7+920X2KbQnrdp
b3A4vsH83n5UDKk7FbF+o3pL46poMuZTltOZ6ZfXvw3zp/8Kv84ulQrtBQNa
EfqE7dDu8diVfUUP8yuTzRwqGiPFfOBE6udSij1LgIMVFLrElZOBB37xnkoY
q8Pz80/U8yTD89QyEJ/mvNcLvCFXpRqfWAKcYjeb+Gp/Icw3ZkhbaSmJ+2s4
H6riEv0E99ekMn1H2gf4y8HWR1dUXuH+mN6en9Rtgvls5I9ss5isAb7X8stw
sioFmNApaZqjG/NvyzXXkGgTYP7tlM3+/gMsdcB62vNvXtG3Q//v7kcGU8Ix
fzHTXkmNHnLMj337RNftB89ysX7ZRvNT5RnMvznip6nVt/Ed8mtKLcXq+8Rg
/T2huLUs2znMF00vE1c5mlMI43vGoww5w74C5/WusK3bd2J9NgfWE89CMT+r
SqC6Z4jgBNY365YQ5BtpBabkPf6rlArXY6MV3+7zCPPPFodLhDsRYP7c+73b
J3gOY37RvueXOe+dx/y8+Wq6k9QXcL9P9qa9tesfArZmM7eZdMf8owTTlUKb
wZh/9Ca9GpXtJM5nunBdIMlqDfitgZDD/ZkEzBf8dE7zwGGsp2my+3xSVGI6
5hu/VN45YIvfQ0aaM4aG3FhPkUjt+uNn5nj+B+6JbhD4dsH46Gpv7kxGXJ/t
nGir21HMP+5cXGGt85f6ky2zGQXsRkOYT1f6oTcFO9YvbF8tvfVTtQDzD7d+
myR3xPzmuwzfMGr9xHzMoz+Dl9Pvo/3FlT+fGn2L9QSPVVDNDhvWA1/yTRv3
oMD6iLMUNfRPP3cDd2mek+M4iv5htSRGmO1XjPnQzd1tno/g8x5VywVqFbYD
c766ZpnSj/m619Ir5D5Wb2I+2nshQV51ON6PMXfv5Xoiud9M0cEyqP4A93vo
aKtd403Ml5x7a/qh0n3Md36383IHfQjmT+5/6EwfkIL5i0v6B7RjjFOh/2oa
qUfBMNon8bA2MatSPbTX3Zt89uop1uvj03d9ldyB+ZPfBbEeVPXG+p/narn9
u4Mxvy5DUJvShYOY/9lq12KIhPYEMLfzk8uPrddh/MHYl7T6m/g+aFN3EMwa
YH7sXFeGcOaNVzBe3snSnmS6C/LtenyzjpJ6UQ75gFMnV7N38C4Ac59cYCq8
MgN8MHSRSy1oHvMx96n2T5ztB9ZRPJdCGV0AnCtERVvJhvmbz3bIxTjVrwC7
Wl6lGUgikPvNhB7PZzLD57CeZN9JMYG9+PwOgXXq7u9Yr6/iIAtFAV8J8F5b
Hzs+ujewP3mN919mBVugfUZauL/kFeaDFiZ3d34liedB/PC90Koo+qMD4/BX
er0ysB9niDRPrT3mi2+2k9by/4L5wqNmvVInt/fB/OdOdQ1NaTbC81uLmLT5
j/UCE/qnqPLXY/5q3SRCj3qOIsw3LNZKO1KC9QH1yiiPnH6K+aUHmXv2Uq1j
fl0vk/2DW2ODwNTfnfjTKrB+Xr/RAacqRsyXvNATc62WB/NXy0mxaXoezAKO
v+Z5rCoI82N3XPKzr7qE9RdLRhOii/0wny/tYWqVgy5Y787Ec/FgTfYUtH8M
lG+TW8L8yNoEjFX5VY3ANeOkMRp2WE8vTvPCoaE+zD88kZTN2myD+bkjpc/c
VnPAfNpXZESv1rdj/msPkdt7Z0i7YD1Z7F3tXQnNcD6B0sEcHwewfqOE/pmj
7kL1wIH8Xu/D7THfeEVmXpIUJ55ngHTKOyZrtHe5klxQNSHWs2yJfajX9gXr
9TFP2B+VVcL6ji8MwsuZ6DC/+IpG93eVKZxPmeLn00XNYOCoBc2OOytzsJ/r
tVLf5K5gvuNEr3jLO2lh0F/vbr7Fq2qsZxdS87hClwLtfcy8jZqKJQ/GU1Dq
TQcNY/7lYmvuyxdSO6F/kGGRMqvQIs73rWekbwPrDUo3UG3byJoEHhvmafjq
GgK8esejt7C4BHh/0krXPZ9xeN75LtaxGzfRPk67v8qcJMV81PMHKp0Pc1PI
/eaX1HqK7CbUwP79PbOEqoTA92Jv7j+jhfUL07wnnN2PYr3KA6z6xNyOIzB/
VY4x2+J4Jb4PolpxxfOJeF4827dvksUCX9S49LDFEvNn1wx+PTddj/tPTFFx
F7yJ76dJ54M+NVHMx528XyCsQRTP7wZFSv34HObPTr2e7jFVtwDcTWOavEsZ
81HPJgh0fQ7C/L2lD6Kdcw5hPljlzUyFFAnMD6q+vXOEkxnzydpZxHUGavdC
vtCjSr4Z3UvFwDfXisjs/DB/stvjN7tUVjF/qHHSgUiG7/j81+LPkg1Xw2F8
Ux6R3cyzDWjfey6A3sgP899SVnIL1LFgftUOw1CPJC6sp0dGHFbsKo75XU8l
5gtOq2M9MItDn3L1ArEeLWfJ0LG7zljv9fww9XTfMtZTfGjk2sWbhNwtKbdr
4zvm0/9y+MqXPgLMD13DeTfChQfr4Z1Rte8258R8w2M+xqyNpZivuv3k4PSq
Qj2wh7a84Hws7mdZznfw+3nMd9yiZp5WmIf5sk8xWlUIR2B+55vElssiA8hU
JPHGyzu2gKc7/CZojhEU/+a1ESMprWGsb5Yj/WV5/S/5wINVJOrc7mB+2Fb1
ozb+BZgveChjNPaRCK7HIGKmQYMV8w2n2J6QsRLG83R9NLC37V4TzLdzJu9n
DxvmK8991pQkK435qOmerrC5fML6oHWGLQce0qI9BWiNuxMlMR/tj9B4otmA
EZg//dDnm2MN6C+E4SQbmVp4XhPPv43vE8T6g/KOsh57sxNh/O7dbnoWWuXA
2ipkBzp2Yz5omiNHZofdMf/2PRGe4uEPmO95hYFsdx4h+r/dx7AVai3M9xyh
3J/UQIr5waOv2c2f9MR2ylEydjdGrC8nUlZnv+8d+k9rWPES/330DyIr3p56
NsynvWfsicUcE57HqBiJxXQmvn/LRHTs37qwHuogxXX+O1VfgS9GxpA8TMF8
3QqOHUMynbgfo3iimsOj+L2o7GLyEQ3F+Vc0WT0EeDB/dCrP8sGZTCrwv40v
FK+7PhECu3IYRFGuof0uyfJrPPQYBt7Xkl4jdwy/L7zlCto2m+tgnyxKo/Tq
/lfQ/ohq8oZMF+7/qX6vhfhX9CfhUpUs901c396JEE8hJcwPb/Fpyq67EOvf
dqQdEHzkmgOclUGoxs2F5/E6h5VpbKoF9DFqzoABvRmsd7eThKe2dAXrzZ1/
8uiFBi/Wg+NtcFMs18N8zfzP72nGHH4Fepw0U4CwOflf6j1yndxlFYb16h5s
F93p3Yj14fZGPPDjkZzB5zUk518TxHzTijIr8SwLP7Ee5LecZNaFNmCZAYYH
n8uQt7F4j+qu4Xpf56eeDM8lKgZ916Vo9/4TWI/ujNxTDTLFceCeHjdmi+2Y
L/rhp9MOA804n99trvtbF77Bfovo9f3SmLGe2+jT7x0GsxNw3lZUFhwekjfA
/ltXja4q5eH3l0YsUdJ6G/57sI3FPWnbC/x+SVDr79dbxvpxkbtkI437uuB5
PlFlXYKXsZ6he6jq8QUBQtCTr83ak3cJrUP7WS9mjvIsrA+XEUW/EmA+AVyZ
WKaf6JYOz5M12T1bO4/tb8m1qmIdMqH95aC4f5HdB2A1NhZr6Wg87xLf1oy0
GrR3ykicKjf/FHBhYnDe9MtBYDr+J1YcAai37zD1JWdmHAPO2KHz2GQN59/x
62ne4jDmA294rPTwuA/6Y64KqVW59wbqwe9swtaO4nmuHXlpdfoj6usWO0TU
/C3Q3j1PMjJrozJgvjAyLvNAO7wfeBY1/JzNCvX4PDp2O/JkfJ8aRKJtLnTi
fpXMBx/JcAxhuwDBQdKQDNBP3vqcyZvlwXp2eo8EdVMysD5YJL89ixsr1rdL
775c7RaMLK07+zIhGOuVyWlpV9716gEOaWKhPf8C9ZwFRlL1G8xY78+vzHY1
Ox311OaKveaUxFgvrXGfbQL9t5/AywQTMtcmUY89JvFutznjZ9ifO5ElWbYI
1sdTThHTCvnH3wOgH7UMH2iw/AAc0Xv8SO7wF6yPdiCfn54J1+92c9w4rR71
XKtfYkbH0lGfnKnYFeUtjv5itySr3pr5Fs5P0u54lvxD9JdtGUfWitzxfJZ3
RHpJOOP5HTwtc+f4Y/S352/U2frWUH+9bhJsaXYc68WpbzUkBAgtoT5LU//r
em4F6vNlhaEUDlhvce/+q8IJ9MhBx5QrfISwnmLvD7Kpw1dxf4mRJZoMRlg/
Ua0p9mKkIZ5//Brh6fAX+PzPX3jf6YWOAEsK/1z/LpcDHLb97HoQ+wyuN6Ng
XuMm3k/siI/ftnwd6x8K08jmcicHA9MVmlCaKXcCt8jwND+/jeOr2xWTYnmr
8X5D0UqjTK0S2KH6kyOXWAXsX1ZZkn6WDet7RpzuUdN3RPvJjH/4euAa+seR
x12lyTyoZxI0la7uK8L7GxMZ6uRjQuh/NA5TApbmuN+8QFUTChl8X14w2BXt
YMgHzpGTCswiwv0UC5zUSLmL/n4nsNGLR6gB9BLFkI6Ve0k/gFXCJh6cEcN6
bttuDyetR2N9RDI/LRFPpmVgMY6Lp4cfYT3G4NxR23ihv8zX6WqZcnEVuCbo
vUagPNZz03NP8Kg3xnqHr4ccFJglcfyGMtH1xVv4PIqawtKQB7ienqtdh5T+
os+Wzwe/2W+KersUbRUDQx76lwtVgPkcBe5v6moHN4sJ+oeOaIPYoRnUo2xj
hVjZB/D7knjeL0jo4gDqf8Nclb7SzTBfKKV8nzQP+q+qWcPrU/dwvExc5JPy
LNQvL5Vk7tZlw3p86TlaLlf40V+Iw+wmCJLx+9e+U3JUxWoTePZhqZ2zGNqf
TO9mJ58M1k/UzE4wYzyLetk8F7nRSUm0v4Qtw0MtErRXoVxXj687rkfPWvKG
9mmsn9f3xHiQagj1tomT4Xy7U9GeZDdWGoe2lQMLPxCIcR9BPZX59AJRsA7W
NxwXNqI4KLQOHOem5sVjgOOnDdwPSJ5AfV1Q5Or5b2Wof+8h0lCT1UL9dbzF
2GalCu2rpJMUE7KG56V924fFuawD9eB2Hm1vM/Svwx91gw1ZUC8uq+a74B2E
9r1fTrlvXwn66wNeqmnbQdy/5iBVuGQs1j+k9ROUZwrF9fC+Ddy5owvr9ckn
E5cbWuP5cIqMnbU3xHqlrwUTst7umf2LHj2+a/rWCq6Hk+/coMMo6Gncu5U0
m12DQB/zmmibbwydQD2X78Nk38VO1L9V7D/Xr39Cf7/+I+7AAtaHSzDSlp7c
g+fffvfZV503WE/TJrib+FMnvo933jUSjC11AX+mMS5Jr8H6gtVyvjU/+HG+
Dg4lwu5L6E/6fh/0A4ZxPXQGOd8fX3EHVtwQXOA6h/cD3XV7qhg08L5G7dPL
bYW6eL8gqK7EKaCYBv3Zvkw7f6DG55Pla701Fq3D+zOhi3IeHegf2scPz/F+
wPclnzCGJCgbx/u8UHyj2IH3DfsOmW18CML6oZYl7Zxl1ngfcqUysH5hLh04
bfZc6LJ0P5wfPVdn1fj+AmC2qE7zNG6sXyitaDHrpDMOektoVd73eOZh6F+s
OUnVFIl6jALplR3KZuuo58Xv7w2L+ATzbWrzvYzSRL1W1am00sGzE9rvzerv
3rGJemp/r3rdVibqNXFdI4xzfVgvMFHJL48mEfVpA/W+pg90XcABbGVuOdZv
YbzNgiPtqjvqRR2bXWJTokWwnyGtBH3NPrxvEBfYnp5wG/XI2dOEV08Rl0L7
qsLRhXW6Fhhvv3Tj/MJ21JcvyQxK8rCPQHuL/FHfgseo51U+r3qc7/qX+pEq
mavWnKj/m9uO6V+kRn2U1CwgzXaxCua/NevgGym+BPMXpbHK+8bh+zm1uB7c
ev8GMNWn70anzmI9TN0Ivr2Pw1DPpTn+c+7tDayHSNe75XlADesdasb1XCOY
QL3ytbjYcZ/DS8CjnLPyV2+j3tqmZNY9qbWK9f1MlYJoby/A8z4zOx/N+dUL
/E3HgOtTPNoj0Ung2oIA3l9E7AzbuFWC9xtG4vYdj1mfw/xSA5qO0yxleB/Q
c1e5zHoY9xP4VvmlZjNwBKOcDOmdTOCFAmuDsl+o3743Wx9nI8TzUujfTnzH
DbmROXmrl3cR2EPbssv2CN5nsDCZiezOxf06yCWEqT/E+5JSYZIW04UKYGVG
WYLXVPj+Fbgzq4odLYbxVnZFEp2H3kA725k7U2XseN9gla+zYRXyFdrtJNWW
zB3xfBsDbhTbzuB5NisOaf+KQX3ksKe1PWt4JuprusxZ566WQP+6Sye6t4ug
vj5EO2bwiB/r0b1Vf9/9q2kU/r533efIn30Q9ZqINW73Iy5Yz+2kZ96nc8ul
qD8+32PGRpmF+k3UlBF1H/79vyO75BPXNdQ33XYEfSC7gPrjuqniUCkL6mG8
yg5Pvg9gPdXQCdfsHOZKWJ+JFK/SA+5i6L9r/ImdUDD6t14U1/XZArxPGTpE
7iLlg/4eyJGo1p6+Dtz0Xcv0TD3al+Zx24VRAfx+PbqgeZN5Yg3tz0WZoMFZ
i/dtKp/DRHrRP7UlHDc9A1C/LheZtJp+Xg1MUq1frnwV62VWO/AWRC6jPtIt
TZ1izoP6rt/wElm4dT7u9/QIYWE+1lv85S2zFFjehvcB/F4kt1kWoT3xTrH2
Hn88D59PM8LFPKjPvoy/EOFinArcr/omdvQZ6mu6Vo1hP6tRn8sSKnw5dxHr
wT06bzdOw7mK/rjQ7eOt1g7r0Wen/mkXTQf9OeJlXPMPIrsJ5tCmWWA9N/Pe
nFQVVdST7g0KsX/TQvuQCUz90riO62OIlk9iUkY92cxKuK7dG/V16vVIWuUb
qBdPpwRwzRujPtkn5ShSoIH6v5PeWj2NhQusfzPmw8+a+a/AAY8aGOIZcX36
oxksHu/GgDuP+6tOGaHenftC3qngF+rFE1TlczWXsH5hkcMmuVxXHcyvaS/X
JD2M71suI+fr76aPoJ3mnRFdbQee/7OftorahVjvkZT3bl5UDq7vnIL8hr8t
9mcOeZ2ZydEI8zW37koecEH7pnRZunRroz1Z3/REXbbD869T5NtZKYz2C88J
KuaJx++BzKVojTF73I/0cN9h4qECaGdrIskTc6iA9olR1Ug6SrRXvGGwxowY
6sO5n70iFaz+Ug/Rc/J1jCPWA70aQPW5uQjX79x1moTCBetBcubv9RKQJQb/
Cqz6ZX2KeBPazxrfEo86i/7SYH/CIWoOz59KqjTptQrq3/bdlY23/FFPkSMT
ppc4QAD65OndAcednP+iFzufv/N6IBzY0Z6MgPYE1mPM9bqv1+pfjnrwodFT
S1FhqNdOGARdrJ8FHlMSq+s37IbxX6xUufgSMB5WtJcvaOMN6qeR/L0zRHG4
vitMK/YGL2vQ36wWW81tUD9seOuiLvF5BVh6L0G171vUz0sW+E3Y+rH/fJi9
ZZIb3k9QJ0nfEBxNAr7rYdIcMYT3gcKJ/G9sCp/DeNrLd5y2C/cBt3fIcJbb
4PkOOpVRRpN9hPHfJ84o28njeSnWJO+cccX35ZpByc5dlXh/M8ZYq++bh//+
JB18viVLgOcpJy9nI3cA/z3yraLgEqLDeOVbEZN2RCKorzGQfhIse4L2j68Z
Sm6jxPhcijj38/d7sD7kcMSkg++5SuAu+6BZt84M6D+ZvvNW5VOM/1UVeurU
7IT6rRbReNqrCdTrRrpjNp6caYT+bMwxgmcqsP5k3dIxPqqOZWh/90zEqsQf
/YExJarbn2EJeKWHQkYwEf1ZmbzXrat1ANqtFhr22T17gPHWJ2is+bpxf37U
s7SssfnAu4jYKe8FdsB8BTO9i09yUZ/37zTVcCHG+qMWStv3d632QP/Yptn0
2CL0t3jysMgYH9x/xwizQKxLP7D11v4eWlZ830J2s6sf3Y7x3zeXvz5VEsH7
l9yk2KLHu3F8IvHtcOdV9GeVE64nlLgw/tpcTcqlKwDHF2wQbno+QX8NntZq
WzHB+x+zbx/JPSzxfuDUsC99wIVp3J+O7nDQMo5PeXNo8e0W6q1PlX4w+BXH
gn4j8cJiP0Ef6odc1qfOhu7EeG0WdQUl782fwKORBi8nilFPEuUIIpfgW4L2
mRBbSfvUWYyfHjx1L/wSIcQr04jtK3ngifHATJfE35lm4+8BzGhX+245NQFL
NHdIBl9tAI5hI39Np4z3DVcv6l068hjvk0IfzecvhuP+DzYsfv7khee3SHuL
fdoQ/W8XqYX3bBEpfL+2+edlbK2SAIv7c3BoqaB/qUx6flw/j/tTLrpz67oG
2jN6fhuRvTbq0w6eNI1hbnhfkDUjMPF+HfXR8oRa7V05eF+QQ7VPd24e9eyX
aUnVn01Qv9++njr73hHjyZ3J3537aor69uLd5idcWRj/b9qwGi5U2AP949NS
Tjn0oD5+7+Ame7UQxqe65ZSTCZDjfcok8QP+InrUyw228eiQ3F3B+4TF0neq
v/C+pUw87LptxDDGK2up1TQmlcL81Y0iPqkyqI+PeH6hn1jtBq68Ga/3UhH1
ZycGl9Vn+hj/zDCiMnq/pxLmS+3zlBAuR/86x8Wl/qsQ2Yi+3oB4EO0nbSUf
kziKvzcINe3ryE7rgPk+OpPq7kjF+PXrTq9dbhxB/eRso12kCj3qPcmvGj7F
9hPA8xY/J+zRlUK9biZ6IUhZigDiU8N3nnpPy4fxrX6HvBMZRlFv6x4t/pn6
HuNZTeyICoy9Ud9KHL4uqub3GJjl7GAUIel3mI9c75bYqean0L41YPTE9yzG
e8vpRHB00KEeaktI1JPpuwF80GxiOn0O9cXwIHrnrPeoZ4k2vboa043t17Q7
mkW/ov/6fuw9fvY16r/NfnftvfPw+6O9tP8DLyneHwxYfJGeqUF/mnnuns4U
Rlz8my8K9ykW8aL96jalEhYkV2C/Qm7P9I+9GsH7r/hLjaFx6I/7S2rrtOo2
gBfub9ami2J8faZOxxyZE55HpFfkcWE/1F/1S08QWUqhPsp7iIP/hRnuz50r
VW7OCvX/jpcTtDujMb66xnzTz+Mo6tlPtl0QjObOgnaO+G7e5VzUMx2OFT+J
C8Lz+PoxzPVMbQe0Zz17Ez1Agfpe+hf5a6UV5dCuQXkqJ+zmMvqrgs+LQXHc
j3+u0DUNS4Ji8B87UyIV19fQf+vpTKP4ZdSPD51oeuY61wpcMEyzvvwC9fO2
G+bHoqVQ/zaZb3tBzvcSWLnbZkhrtBb6M45cKxvh+AbtwarGZSdW0V5jaxNG
/qZor4iM4spwxmrgpa9yhx3mGqG/4SvrIzdteoF1M65ETUdg/POdaN2Y3Wmo
j7+TaI/TMMD9GT7eshGYRnu17ssmbzyD5yNLLfUw2RF/LzAaHOROGo16ca/p
lpntM9Rnvbsnp9tJMP5dubIoduMuxqsfyqS4fv4s7qfxEaVsCxfquQKvVx9u
L/wG7JIZsMpUmQPjr5EfVrvLje+vdl9BU81CCbSzXOn67MSL8e6ihjTNFrsw
vp1EoVwjagZ/H0Gx32nxshKeH+Moa/B2L/x9Rgy5m9Wl90XABHRRUcGtKsCn
S19GOS+jfxn1Cgo+OfQQ9fHoa3f9Q/C+oZBaqHtsDPXzhFNpgjvvYPy7Usz9
CpaCN9BO7RV7ve8A6veu2+5Qy+9B+56g5fDzUcH4cifyF5TNkxivS/fgZtLP
VIyvfj2zv+BdxSCw/MZxpaOfMR6cvJYtIYoY9VC6bRkRvSwY/5wlnmg/torx
xxEXQ0j06jF+N2xyQHVN7wdw8ZXC+5s3Mb46sjk2MiXmL/pu3F7e4I+o78Uq
GJrUVmI8c3EbVfANUidYj3aBSdrRshTUf4ylLaNoUM/yydr6ZSeK+lL20N4p
3+R6mC+cfGl+agn19qy7Xy8VXZ8B+6tHbxei3jMK9rHxktWXUd6C/sIE8zpc
xb5gfwGeTf1T83h+JntD0wZF//J7FarXtgl66F9X9zNdizFD/3OSi4vMKcLf
vzyjakwKVcb7n7nn27s9NTth/yJL4nmGIaj3F7Zs/0hb+x74/IWv3IcuJcH+
v3OOUPK/Qr04fTdfksU66nlMUefya4NQ395Dr+30VKEHOJc0xdPdF+OhA382
PvnCjv0fGhmJ5jag/qtJvPxCWAf7ty8Rp2vyo/63n+/OvEA9xr936iSIj+mt
QLuKWsTMu4UpjEc9qZ3t6YRcsaNGoU8Xn2fgTvb2Q9wnmE+F9vj0MN8YtKcr
5PJ/ZH4EPK5p+7KHfgi4zPbbSXUfjEeWzQ99voetBdhMpO4k+yjGN6/0dH3v
HsL7j5NEDgWSnzE+f61+n6laZD3qnfWsF+VDcD3E+pJUN0vQ/hUk6+JXOVBf
N705HJx2G39PMPDlYj77t0LgzR9mllGSaF/Jxfj6819Q71RdOddCwoH2bHpm
JHFbagb4FBfPrf2PMN7ay+2+xrEDd2H+5EzusErmNeDUFvJIv0voX8KLDsF3
mXE+HrYK48xPeB5yegH335/B8+LjGWcPy0b9KfTKwiuu8FXQDwpKvz30vzIN
LFmft4vRBvXZ/vKMOUYb1CNnDVQuzU5OoB5pOtd/QQX1hSvlwnwBl1GPk2/7
9ZRfHfWrgXNpFSJ/iQfuuL2SuOtFB6z3srFTqoHXFvDtWsJ2Ja0M/F44Kp04
RjYN7X0acZXKZ9AeeyS3p98MIiz+zduWXzJqJaN+c2RNYfbaVdyf8KF93PXk
JcBLpoza96JQP+l5F8N2Tgf3f7XGRF70NfJZ0oDls0y43/LqAMdaddQT2w5u
E8znQX6o8IZ6gQ316n5irWcSz/F576o+TmSN4XkpUvTvaKlHvYjguVHfLnPc
T/Tt3RknLZHnuYdWDpVh/G/Kt6PL3nUYP7uwv5fm8XvUxxcKLpp7cCM7sHoF
b2ih3rSU3UDZ8RbPL9Gy8It9M+rNC3N9kQWKLeA/nrIbEWEeGC+eu4tUsosb
72OYfrk6JxZgPLZJiJL3REUfjOdOkuU28EX7FFTzObuq4vp9rBcOfCDqxfkC
qYzbGHJg/OrS/OlXD1Avbms0zwmzwHjjU8RCMarPMJ450LBfd2dtLrBjVu2P
+BTUfykC07xX0lHfPm5YHnjzwRo8r+Fx/SVDO1zPnhOvaimW0X5id7OM3Fgw
vrw04fQP7h9VwCK6nadHmaZgvqF7n3eQWmI8ODv5c9uWEmKIZy60vajNzYz6
+luzabHDjagHJ2fsuyGzE+Od27hym+o60J4zks4G5AoYD256hdKnh3ULuO1A
3L3rufj7iOxI08TEgC+od98iohYx+QmsvmegT7cSf8+hPb/0w6kA7Zd3J0z6
+Et837uHiSIcLdCfrKbLjQSKMN77eEYrVabOX/RwAbdT2xjRvjMKRcpcpOiv
r5fMd9K1o36zkNQQHDgzh3oxf7Mwjybq0Vn2JH0jAqjPSZlVDtU7VgDHir8Q
thtvgP0FPwwwNzfA+6CU6xKcfaaT0P6TwVg5rg37Gzt+EFDxqIP11Xwisx52
QfsvtFIv+5YTwXw/D+b7fLAhB6a1dKxx1yEFTu66t9grjaxBtWVD+AXvkwKM
JabzbdAe3sOMobMfcD2tL9ZJdXymYH/HSu2VKDhR74uqfFpNrzwBvEWwW2DA
4Av0p7ucrVPiHwqcqjkiYkGA+qjnOq/Bbk3UZ40IeWUOjmK8uffV0/Vamni+
sYq6Mtfy8fcfcaFJBBteqD9fshtRjL+H3zMWzvNmOgn4ewxaocJ9bo++Fv0v
k5G7aw==
    "], {{{}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{1090, 1}], LineBox[{1091, 2}], LineBox[{1092, 3}], 
       LineBox[{1094, 5}], LineBox[{1100, 11}], LineBox[{1101, 12}], 
       LineBox[{1102, 13}], LineBox[{1108, 19}], LineBox[{1109, 20}], 
       LineBox[{1110, 21}], LineBox[{1115, 26}], LineBox[{1116, 27}], 
       LineBox[{1118, 29}], LineBox[{1119, 30}], LineBox[{1126, 37}], 
       LineBox[{1127, 38}], LineBox[{1128, 39}], LineBox[{1129, 40}], 
       LineBox[{1130, 41}], LineBox[{1131, 42}], LineBox[{1132, 43}], 
       LineBox[{1134, 45}], LineBox[{1135, 46}], LineBox[{1139, 50}], 
       LineBox[{1148, 59}], LineBox[{1149, 60}], LineBox[{1150, 61}], 
       LineBox[{1151, 62}], LineBox[{1152, 63}], LineBox[{1154, 65}], 
       LineBox[{1160, 71}], LineBox[{1161, 72}], LineBox[{1162, 73}], 
       LineBox[{1163, 74}], LineBox[{1165, 76}], LineBox[{1166, 77}], 
       LineBox[{1167, 78}], LineBox[{1168, 79}], LineBox[{1172, 83}], 
       LineBox[{1175, 86}], LineBox[{1177, 88}], LineBox[{1180, 91}], 
       LineBox[{1181, 92}], LineBox[{1182, 93}], LineBox[{1185, 96}], 
       LineBox[{1189, 100}], LineBox[{1192, 103}], LineBox[{1201, 112}], 
       LineBox[{1202, 113}], LineBox[{1206, 117}], LineBox[{1208, 119}], 
       LineBox[{1209, 120}], LineBox[{1210, 121}], LineBox[{1211, 122}], 
       LineBox[{1212, 123}], LineBox[{1230, 141}], LineBox[{1233, 144}], 
       LineBox[{1235, 146}], LineBox[{1236, 147}], LineBox[{1237, 148}], 
       LineBox[{1239, 150}], LineBox[{1240, 151}], LineBox[{1241, 152}], 
       LineBox[{1245, 156}], LineBox[{1246, 157}], LineBox[{1260, 171}], 
       LineBox[{1262, 173}], LineBox[{1265, 176}], LineBox[{1266, 177}], 
       LineBox[{1267, 178}], LineBox[{1268, 179}], LineBox[{1272, 183}], 
       LineBox[{1273, 184}], LineBox[{1284, 195}], LineBox[{1293, 204}], 
       LineBox[{1294, 205}], LineBox[{1306, 217}], LineBox[{1307, 218}], 
       LineBox[{1311, 222}], LineBox[{1312, 223}], LineBox[{1319, 230}], 
       LineBox[{1325, 236}], LineBox[{1326, 237}], LineBox[{1331, 242}], 
       LineBox[{1334, 245}], LineBox[{1335, 246}], LineBox[{1336, 247}], 
       LineBox[{1337, 248}], LineBox[{1338, 249}], LineBox[{1339, 250}], 
       LineBox[{1340, 251}], LineBox[{1341, 252}], LineBox[{1342, 253}], 
       LineBox[{1345, 256}], LineBox[{1346, 257}], LineBox[{1347, 258}], 
       LineBox[{1349, 260}], LineBox[{1350, 261}], LineBox[{1351, 262}], 
       LineBox[{1352, 263}], LineBox[{1353, 264}], LineBox[{1356, 267}], 
       LineBox[{1357, 268}], LineBox[{1358, 269}], LineBox[{1359, 270}], 
       LineBox[{1360, 271}], LineBox[{1361, 272}], LineBox[{1362, 273}], 
       LineBox[{1363, 274}], LineBox[{1364, 275}], LineBox[{1365, 276}], 
       LineBox[{1366, 277}], LineBox[{1367, 278}], LineBox[{1368, 279}], 
       LineBox[{1369, 280}], LineBox[{1370, 281}], LineBox[{1371, 282}], 
       LineBox[{1372, 283}], LineBox[{1373, 284}], LineBox[{1375, 286}], 
       LineBox[{1376, 287}], LineBox[{1377, 288}], LineBox[{1378, 289}], 
       LineBox[{1380, 291}], LineBox[{1381, 292}], LineBox[{1382, 293}], 
       LineBox[{1383, 294}], LineBox[{1386, 297}], LineBox[{1387, 298}], 
       LineBox[{1388, 299}], LineBox[{1391, 302}], LineBox[{1392, 303}], 
       LineBox[{1393, 304}], LineBox[{1394, 305}], LineBox[{1396, 307}], 
       LineBox[{1399, 310}], LineBox[{1400, 311}], LineBox[{1401, 312}], 
       LineBox[{1402, 313}], LineBox[{1403, 314}], LineBox[{1404, 315}], 
       LineBox[{1405, 316}], LineBox[{1406, 317}], LineBox[{1407, 318}], 
       LineBox[{1408, 319}], LineBox[{1409, 320}], LineBox[{1410, 321}], 
       LineBox[{1411, 322}], LineBox[{1412, 323}], LineBox[{1413, 324}], 
       LineBox[{1414, 325}], LineBox[{1415, 326}], LineBox[{1417, 328}], 
       LineBox[{1418, 329}], LineBox[{1419, 330}], LineBox[{1420, 331}], 
       LineBox[{1421, 332}], LineBox[{1422, 333}], LineBox[{1423, 334}], 
       LineBox[{1424, 335}], LineBox[{1425, 336}], LineBox[{1426, 337}], 
       LineBox[{1427, 338}], LineBox[{1428, 339}], LineBox[{1429, 340}], 
       LineBox[{1431, 342}], LineBox[{1432, 343}], LineBox[{1433, 344}], 
       LineBox[{1434, 345}], LineBox[{1435, 346}], LineBox[{1436, 347}], 
       LineBox[{1437, 348}], LineBox[{1438, 349}], LineBox[{1439, 350}], 
       LineBox[{1440, 351}], LineBox[{1441, 352}], LineBox[{1442, 353}], 
       LineBox[{1443, 354}], LineBox[{1444, 355}], LineBox[{1448, 359}], 
       LineBox[{1449, 360}], LineBox[{1450, 361}], LineBox[{1451, 362}], 
       LineBox[{1452, 363}], LineBox[{1459, 370}], LineBox[{1461, 372}], 
       LineBox[{1462, 373}], LineBox[{1463, 374}], LineBox[{1464, 375}], 
       LineBox[{1465, 376}], LineBox[{1466, 377}], LineBox[{1467, 378}], 
       LineBox[{1468, 379}], LineBox[{1469, 380}], LineBox[{1472, 383}], 
       LineBox[{1473, 384}], LineBox[{1474, 385}], LineBox[{1475, 386}], 
       LineBox[{1477, 388}], LineBox[{1478, 389}], LineBox[{1479, 390}], 
       LineBox[{1480, 391}], LineBox[{1481, 392}], LineBox[{1482, 393}], 
       LineBox[{1483, 394}], LineBox[{1484, 395}], LineBox[{1485, 396}], 
       LineBox[{1486, 397}], LineBox[{1487, 398}], LineBox[{1488, 399}], 
       LineBox[{1491, 402}], LineBox[{1492, 403}], LineBox[{1493, 404}], 
       LineBox[{1494, 405}], LineBox[{1495, 406}], LineBox[{1496, 407}], 
       LineBox[{1500, 411}], LineBox[{1501, 412}], LineBox[{1502, 413}], 
       LineBox[{1503, 414}], LineBox[{1506, 417}], LineBox[{1507, 418}], 
       LineBox[{1508, 419}], LineBox[{1509, 420}], LineBox[{1510, 421}], 
       LineBox[{1511, 422}], LineBox[{1512, 423}], LineBox[{1515, 426}], 
       LineBox[{1516, 427}], LineBox[{1517, 428}], LineBox[{1518, 429}], 
       LineBox[{1519, 430}], LineBox[{1520, 431}], LineBox[{1521, 432}], 
       LineBox[{1522, 433}], LineBox[{1523, 434}], LineBox[{1524, 435}], 
       LineBox[{1525, 436}], LineBox[{1526, 437}], LineBox[{1527, 438}], 
       LineBox[{1528, 439}], LineBox[{1529, 440}], LineBox[{1532, 443}], 
       LineBox[{1534, 445}], LineBox[{1536, 447}], LineBox[{1537, 448}], 
       LineBox[{1538, 449}], LineBox[{1539, 450}], LineBox[{1540, 451}], 
       LineBox[{1541, 452}], LineBox[{1542, 453}], LineBox[{1543, 454}], 
       LineBox[{1544, 455}], LineBox[{1545, 456}], LineBox[{1546, 457}], 
       LineBox[{1547, 458}], LineBox[{1548, 459}], LineBox[{1549, 460}], 
       LineBox[{1550, 461}], LineBox[{1551, 462}], LineBox[{1552, 463}], 
       LineBox[{1553, 464}], LineBox[{1554, 465}], LineBox[{1555, 466}], 
       LineBox[{1556, 467}], LineBox[{1557, 468}], LineBox[{1558, 469}], 
       LineBox[{1559, 470}], LineBox[{1561, 472}], LineBox[{1563, 474}], 
       LineBox[{1564, 475}], LineBox[{1565, 476}], LineBox[{1567, 478}], 
       LineBox[{1571, 482}], LineBox[{1572, 483}], LineBox[{1573, 484}], 
       LineBox[{1574, 485}], LineBox[{1575, 486}], LineBox[{1576, 487}], 
       LineBox[{1577, 488}], LineBox[{1578, 489}], LineBox[{1579, 490}], 
       LineBox[{1580, 491}], LineBox[{1581, 492}], LineBox[{1582, 493}], 
       LineBox[{1583, 494}], LineBox[{1584, 495}], LineBox[{1585, 496}], 
       LineBox[{1590, 501}], LineBox[{1591, 502}], LineBox[{1592, 503}], 
       LineBox[{1593, 504}], LineBox[{1594, 505}], LineBox[{1595, 506}], 
       LineBox[{1596, 507}], LineBox[{1599, 510}], LineBox[{1600, 511}], 
       LineBox[{1601, 512}], LineBox[{1602, 513}], LineBox[{1603, 514}], 
       LineBox[{1608, 519}], LineBox[{1609, 520}], LineBox[{1611, 522}], 
       LineBox[{1612, 523}], LineBox[{1614, 525}], LineBox[{1615, 526}], 
       LineBox[{1619, 530}], LineBox[{1620, 531}], LineBox[{1622, 533}], 
       LineBox[{1624, 535}], LineBox[{1625, 536}], LineBox[{1626, 537}], 
       LineBox[{1627, 538}], LineBox[{1628, 539}], LineBox[{1631, 542}], 
       LineBox[{1632, 543}], LineBox[{1633, 544}], LineBox[{1635, 546}], 
       LineBox[{1638, 549}], LineBox[{1640, 551}], LineBox[{1642, 553}], 
       LineBox[{1646, 557}], LineBox[{1647, 558}], LineBox[{1648, 559}], 
       LineBox[{1652, 563}], LineBox[{1654, 565}], LineBox[{1655, 566}], 
       LineBox[{1657, 568}], LineBox[{1660, 571}], LineBox[{1661, 572}], 
       LineBox[{1662, 573}], LineBox[{1663, 574}], LineBox[{1665, 576}], 
       LineBox[{1666, 577}], LineBox[{1667, 578}], LineBox[{1668, 579}], 
       LineBox[{1669, 580}], LineBox[{1670, 581}], LineBox[{1676, 587}], 
       LineBox[{1678, 589}], LineBox[{1679, 590}], LineBox[{1680, 591}], 
       LineBox[{1682, 593}], LineBox[{1683, 594}], LineBox[{1684, 595}], 
       LineBox[{1687, 598}], LineBox[{1688, 599}], LineBox[{1689, 600}], 
       LineBox[{1691, 602}], LineBox[{1693, 604}], LineBox[{1695, 606}], 
       LineBox[{1696, 607}], LineBox[{1697, 608}], LineBox[{1698, 609}], 
       LineBox[{1699, 610}], LineBox[{1700, 611}], LineBox[{1702, 613}], 
       LineBox[{1703, 614}], LineBox[{1704, 615}], LineBox[{1705, 616}], 
       LineBox[{1706, 617}], LineBox[{1707, 618}], LineBox[{1708, 619}], 
       LineBox[{1709, 620}], LineBox[{1710, 621}], LineBox[{1712, 623}], 
       LineBox[{1713, 624}], LineBox[{1715, 626}], LineBox[{1716, 627}], 
       LineBox[{1717, 628}], LineBox[{1718, 629}], LineBox[{1719, 630}], 
       LineBox[{1721, 632}], LineBox[{1722, 633}], LineBox[{1723, 634}], 
       LineBox[{1724, 635}], LineBox[{1725, 636}], LineBox[{1726, 637}], 
       LineBox[{1727, 638}], LineBox[{1728, 639}], LineBox[{1730, 641}], 
       LineBox[{1731, 642}], LineBox[{1732, 643}], LineBox[{1733, 644}], 
       LineBox[{1734, 645}], LineBox[{1735, 646}], LineBox[{1737, 648}], 
       LineBox[{1742, 653}], LineBox[{1743, 654}], LineBox[{1744, 655}], 
       LineBox[{1745, 656}], LineBox[{1746, 657}], LineBox[{1747, 658}], 
       LineBox[{1748, 659}], LineBox[{1749, 660}], LineBox[{1752, 663}], 
       LineBox[{1753, 664}], LineBox[{1754, 665}], LineBox[{1755, 666}], 
       LineBox[{1756, 667}], LineBox[{1758, 669}], LineBox[{1760, 671}], 
       LineBox[{1761, 672}], LineBox[{1762, 673}], LineBox[{1763, 674}], 
       LineBox[{1765, 676}], LineBox[{1766, 677}], LineBox[{1767, 678}], 
       LineBox[{1768, 679}], LineBox[{1769, 680}], LineBox[{1771, 682}], 
       LineBox[{1773, 684}], LineBox[{1774, 685}], LineBox[{1775, 686}], 
       LineBox[{1776, 687}], LineBox[{1777, 688}], LineBox[{1781, 692}], 
       LineBox[{1783, 694}], LineBox[{1784, 695}], LineBox[{1786, 697}], 
       LineBox[{1787, 698}], LineBox[{1789, 700}], LineBox[{1790, 701}], 
       LineBox[{1791, 702}], LineBox[{1797, 708}], LineBox[{1798, 709}], 
       LineBox[{1799, 710}], LineBox[{1800, 711}], LineBox[{1801, 712}], 
       LineBox[{1802, 713}], LineBox[{1804, 715}], LineBox[{1805, 716}], 
       LineBox[{1806, 717}], LineBox[{1808, 719}], LineBox[{1809, 720}], 
       LineBox[{1811, 722}], LineBox[{1812, 723}], LineBox[{1813, 724}], 
       LineBox[{1817, 728}], LineBox[{1820, 731}], LineBox[{1822, 733}], 
       LineBox[{1823, 734}], LineBox[{1825, 736}], LineBox[{1829, 740}], 
       LineBox[{1834, 745}], LineBox[{1837, 748}], LineBox[{1838, 749}], 
       LineBox[{1839, 750}], LineBox[{1840, 751}], LineBox[{1841, 752}], 
       LineBox[{1843, 754}], LineBox[{1844, 755}], LineBox[{1845, 756}], 
       LineBox[{1846, 757}], LineBox[{1847, 758}], LineBox[{1848, 759}], 
       LineBox[{1849, 760}], LineBox[{1850, 761}], LineBox[{1851, 762}], 
       LineBox[{1852, 763}], LineBox[{1853, 764}], LineBox[{1858, 769}], 
       LineBox[{1863, 774}], LineBox[{1864, 775}], LineBox[{1865, 776}], 
       LineBox[{1866, 777}], LineBox[{1868, 779}], LineBox[{1869, 780}], 
       LineBox[{1878, 789}], LineBox[{1879, 790}], LineBox[{1880, 791}], 
       LineBox[{1881, 792}], LineBox[{1883, 794}], LineBox[{1884, 795}], 
       LineBox[{1886, 797}], LineBox[{1888, 799}], LineBox[{1889, 800}], 
       LineBox[{1890, 801}], LineBox[{1891, 802}], LineBox[{1892, 803}], 
       LineBox[{1894, 805}], LineBox[{1895, 806}], LineBox[{1896, 807}], 
       LineBox[{1897, 808}], LineBox[{1901, 812}], LineBox[{1902, 813}], 
       LineBox[{1906, 817}], LineBox[{1908, 819}], LineBox[{1911, 822}], 
       LineBox[{1913, 824}], LineBox[{1914, 825}], LineBox[{1916, 827}], 
       LineBox[{1917, 828}], LineBox[{1918, 829}], LineBox[{1919, 830}], 
       LineBox[{1920, 831}], LineBox[{1921, 832}], LineBox[{1922, 833}], 
       LineBox[{1923, 834}], LineBox[{1924, 835}], LineBox[{1925, 836}], 
       LineBox[{1926, 837}], LineBox[{1927, 838}], LineBox[{1928, 839}], 
       LineBox[{1932, 843}], LineBox[{1933, 844}], LineBox[{1936, 847}], 
       LineBox[{1937, 848}], LineBox[{1938, 849}], LineBox[{1939, 850}], 
       LineBox[{1941, 852}], LineBox[{1944, 855}], LineBox[{1946, 857}], 
       LineBox[{1949, 860}], LineBox[{1950, 861}], LineBox[{1952, 863}], 
       LineBox[{1953, 864}], LineBox[{1954, 865}], LineBox[{1957, 868}], 
       LineBox[{1960, 871}], LineBox[{1961, 872}], LineBox[{1965, 876}], 
       LineBox[{1966, 877}], LineBox[{1970, 881}], LineBox[{1971, 882}], 
       LineBox[{1974, 885}], LineBox[{1975, 886}], LineBox[{1976, 887}], 
       LineBox[{1978, 889}], LineBox[{1987, 898}], LineBox[{1991, 902}], 
       LineBox[{1999, 910}], LineBox[{2000, 911}], LineBox[{2007, 918}], 
       LineBox[{2009, 920}], LineBox[{2010, 921}], LineBox[{2011, 922}], 
       LineBox[{2012, 923}], LineBox[{2015, 926}], LineBox[{2019, 930}], 
       LineBox[{2020, 931}], LineBox[{2024, 935}], LineBox[{2025, 936}], 
       LineBox[{2028, 939}], LineBox[{2030, 941}], LineBox[{2031, 942}], 
       LineBox[{2032, 943}], LineBox[{2033, 944}], LineBox[{2034, 945}], 
       LineBox[{2035, 946}], LineBox[{2036, 947}], LineBox[{2037, 948}], 
       LineBox[{2039, 950}], LineBox[{2040, 951}], LineBox[{2041, 952}], 
       LineBox[{2042, 953}], LineBox[{2044, 955}], LineBox[{2045, 956}], 
       LineBox[{2046, 957}], LineBox[{2047, 958}], LineBox[{2048, 959}], 
       LineBox[{2049, 960}], LineBox[{2052, 963}], LineBox[{2053, 964}], 
       LineBox[{2054, 965}], LineBox[{2058, 969}], LineBox[{2059, 970}], 
       LineBox[{2060, 971}], LineBox[{2061, 972}], LineBox[{2062, 973}], 
       LineBox[{2066, 977}], LineBox[{2067, 978}], LineBox[{2068, 979}], 
       LineBox[{2069, 980}], LineBox[{2072, 983}], LineBox[{2073, 984}], 
       LineBox[{2074, 985}], LineBox[{2075, 986}], LineBox[{2076, 987}], 
       LineBox[{2077, 988}], LineBox[{2078, 989}], LineBox[{2079, 990}], 
       LineBox[{2080, 991}], LineBox[{2082, 993}], LineBox[{2083, 994}], 
       LineBox[{2084, 995}], LineBox[{2085, 996}], LineBox[{2086, 997}], 
       LineBox[{2087, 998}], LineBox[{2088, 999}], LineBox[{2089, 1000}], 
       LineBox[{2090, 1001}], LineBox[{2091, 1002}], LineBox[{2092, 1003}], 
       LineBox[{2093, 1004}], LineBox[{2094, 1005}], LineBox[{2095, 1006}], 
       LineBox[{2096, 1007}], LineBox[{2097, 1008}], LineBox[{2098, 1009}], 
       LineBox[{2099, 1010}], LineBox[{2100, 1011}], LineBox[{2101, 1012}], 
       LineBox[{2102, 1013}], LineBox[{2103, 1014}], LineBox[{2104, 1015}], 
       LineBox[{2105, 1016}], LineBox[{2106, 1017}], LineBox[{2108, 1019}], 
       LineBox[{2109, 1020}], LineBox[{2110, 1021}], LineBox[{2112, 1023}], 
       LineBox[{2113, 1024}], LineBox[{2114, 1025}], LineBox[{2116, 1027}], 
       LineBox[{2117, 1028}], LineBox[{2118, 1029}], LineBox[{2119, 1030}], 
       LineBox[{2120, 1031}], LineBox[{2121, 1032}], LineBox[{2123, 1034}], 
       LineBox[{2124, 1035}], LineBox[{2125, 1036}], LineBox[{2126, 1037}], 
       LineBox[{2128, 1039}], LineBox[{2129, 1040}], LineBox[{2130, 1041}], 
       LineBox[{2132, 1043}], LineBox[{2133, 1044}], LineBox[{2136, 1047}], 
       LineBox[{2139, 1050}], LineBox[{2140, 1051}], LineBox[{2141, 1052}], 
       LineBox[{2142, 1053}], LineBox[{2143, 1054}], LineBox[{2144, 1055}], 
       LineBox[{2145, 1056}], LineBox[{2146, 1057}], LineBox[{2147, 1058}], 
       LineBox[{2156, 1067}], LineBox[{2157, 1068}], LineBox[{2163, 1074}], 
       LineBox[{2166, 1077}], LineBox[{2167, 1078}], LineBox[{2171, 1082}], 
       LineBox[{2172, 1083}], LineBox[{2173, 1084}], LineBox[{2176, 1087}], 
       LineBox[{2178, 1089}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{1093, 4}], LineBox[{1095, 6}], LineBox[{1096, 7}], 
       LineBox[{1097, 8}], LineBox[{1098, 9}], LineBox[{1099, 10}], 
       LineBox[{1103, 14}], LineBox[{1104, 15}], LineBox[{1105, 16}], 
       LineBox[{1106, 17}], LineBox[{1107, 18}], LineBox[{1111, 22}], 
       LineBox[{1112, 23}], LineBox[{1113, 24}], LineBox[{1114, 25}], 
       LineBox[{1117, 28}], LineBox[{1120, 31}], LineBox[{1121, 32}], 
       LineBox[{1122, 33}], LineBox[{1123, 34}], LineBox[{1124, 35}], 
       LineBox[{1125, 36}], LineBox[{1133, 44}], LineBox[{1136, 47}], 
       LineBox[{1137, 48}], LineBox[{1138, 49}], LineBox[{1140, 51}], 
       LineBox[{1141, 52}], LineBox[{1142, 53}], LineBox[{1143, 54}], 
       LineBox[{1144, 55}], LineBox[{1145, 56}], LineBox[{1146, 57}], 
       LineBox[{1147, 58}], LineBox[{1153, 64}], LineBox[{1155, 66}], 
       LineBox[{1156, 67}], LineBox[{1157, 68}], LineBox[{1158, 69}], 
       LineBox[{1159, 70}], LineBox[{1164, 75}], LineBox[{1169, 80}], 
       LineBox[{1170, 81}], LineBox[{1171, 82}], LineBox[{1173, 84}], 
       LineBox[{1174, 85}], LineBox[{1176, 87}], LineBox[{1178, 89}], 
       LineBox[{1179, 90}], LineBox[{1183, 94}], LineBox[{1184, 95}], 
       LineBox[{1186, 97}], LineBox[{1187, 98}], LineBox[{1188, 99}], 
       LineBox[{1190, 101}], LineBox[{1191, 102}], LineBox[{1193, 104}], 
       LineBox[{1194, 105}], LineBox[{1195, 106}], LineBox[{1196, 107}], 
       LineBox[{1197, 108}], LineBox[{1198, 109}], LineBox[{1199, 110}], 
       LineBox[{1200, 111}], LineBox[{1203, 114}], LineBox[{1204, 115}], 
       LineBox[{1205, 116}], LineBox[{1207, 118}], LineBox[{1213, 124}], 
       LineBox[{1214, 125}], LineBox[{1215, 126}], LineBox[{1216, 127}], 
       LineBox[{1217, 128}], LineBox[{1218, 129}], LineBox[{1219, 130}], 
       LineBox[{1220, 131}], LineBox[{1221, 132}], LineBox[{1222, 133}], 
       LineBox[{1223, 134}], LineBox[{1224, 135}], LineBox[{1225, 136}], 
       LineBox[{1226, 137}], LineBox[{1227, 138}], LineBox[{1228, 139}], 
       LineBox[{1229, 140}], LineBox[{1231, 142}], LineBox[{1232, 143}], 
       LineBox[{1234, 145}], LineBox[{1238, 149}], LineBox[{1242, 153}], 
       LineBox[{1243, 154}], LineBox[{1244, 155}], LineBox[{1247, 158}], 
       LineBox[{1248, 159}], LineBox[{1249, 160}], LineBox[{1250, 161}], 
       LineBox[{1251, 162}], LineBox[{1252, 163}], LineBox[{1253, 164}], 
       LineBox[{1254, 165}], LineBox[{1255, 166}], LineBox[{1256, 167}], 
       LineBox[{1257, 168}], LineBox[{1258, 169}], LineBox[{1259, 170}], 
       LineBox[{1261, 172}], LineBox[{1263, 174}], LineBox[{1264, 175}], 
       LineBox[{1269, 180}], LineBox[{1270, 181}], LineBox[{1271, 182}], 
       LineBox[{1274, 185}], LineBox[{1275, 186}], LineBox[{1276, 187}], 
       LineBox[{1277, 188}], LineBox[{1278, 189}], LineBox[{1279, 190}], 
       LineBox[{1280, 191}], LineBox[{1281, 192}], LineBox[{1282, 193}], 
       LineBox[{1283, 194}], LineBox[{1285, 196}], LineBox[{1286, 197}], 
       LineBox[{1287, 198}], LineBox[{1288, 199}], LineBox[{1289, 200}], 
       LineBox[{1290, 201}], LineBox[{1291, 202}], LineBox[{1292, 203}], 
       LineBox[{1295, 206}], LineBox[{1296, 207}], LineBox[{1297, 208}], 
       LineBox[{1298, 209}], LineBox[{1299, 210}], LineBox[{1300, 211}], 
       LineBox[{1301, 212}], LineBox[{1302, 213}], LineBox[{1303, 214}], 
       LineBox[{1304, 215}], LineBox[{1305, 216}], LineBox[{1308, 219}], 
       LineBox[{1309, 220}], LineBox[{1310, 221}], LineBox[{1313, 224}], 
       LineBox[{1314, 225}], LineBox[{1315, 226}], LineBox[{1316, 227}], 
       LineBox[{1317, 228}], LineBox[{1318, 229}], LineBox[{1320, 231}], 
       LineBox[{1321, 232}], LineBox[{1322, 233}], LineBox[{1323, 234}], 
       LineBox[{1324, 235}], LineBox[{1327, 238}], LineBox[{1328, 239}], 
       LineBox[{1329, 240}], LineBox[{1330, 241}], LineBox[{1332, 243}], 
       LineBox[{1333, 244}], LineBox[{1343, 254}], LineBox[{1344, 255}], 
       LineBox[{1348, 259}], LineBox[{1354, 265}], LineBox[{1355, 266}], 
       LineBox[{1374, 285}], LineBox[{1379, 290}], LineBox[{1384, 295}], 
       LineBox[{1385, 296}], LineBox[{1389, 300}], LineBox[{1390, 301}], 
       LineBox[{1395, 306}], LineBox[{1397, 308}], LineBox[{1398, 309}], 
       LineBox[{1416, 327}], LineBox[{1430, 341}], LineBox[{1445, 356}], 
       LineBox[{1446, 357}], LineBox[{1447, 358}], LineBox[{1453, 364}], 
       LineBox[{1454, 365}], LineBox[{1455, 366}], LineBox[{1456, 367}], 
       LineBox[{1457, 368}], LineBox[{1458, 369}], LineBox[{1460, 371}], 
       LineBox[{1470, 381}], LineBox[{1471, 382}], LineBox[{1476, 387}], 
       LineBox[{1489, 400}], LineBox[{1490, 401}], LineBox[{1497, 408}], 
       LineBox[{1498, 409}], LineBox[{1499, 410}], LineBox[{1504, 415}], 
       LineBox[{1505, 416}], LineBox[{1513, 424}], LineBox[{1514, 425}], 
       LineBox[{1530, 441}], LineBox[{1531, 442}], LineBox[{1533, 444}], 
       LineBox[{1535, 446}], LineBox[{1560, 471}], LineBox[{1562, 473}], 
       LineBox[{1566, 477}], LineBox[{1568, 479}], LineBox[{1569, 480}], 
       LineBox[{1570, 481}], LineBox[{1586, 497}], LineBox[{1587, 498}], 
       LineBox[{1588, 499}], LineBox[{1589, 500}], LineBox[{1597, 508}], 
       LineBox[{1598, 509}], LineBox[{1604, 515}], LineBox[{1605, 516}], 
       LineBox[{1606, 517}], LineBox[{1607, 518}], LineBox[{1610, 521}], 
       LineBox[{1613, 524}], LineBox[{1616, 527}], LineBox[{1617, 528}], 
       LineBox[{1618, 529}], LineBox[{1621, 532}], LineBox[{1623, 534}], 
       LineBox[{1629, 540}], LineBox[{1630, 541}], LineBox[{1634, 545}], 
       LineBox[{1636, 547}], LineBox[{1637, 548}], LineBox[{1639, 550}], 
       LineBox[{1641, 552}], LineBox[{1643, 554}], LineBox[{1644, 555}], 
       LineBox[{1645, 556}], LineBox[{1649, 560}], LineBox[{1650, 561}], 
       LineBox[{1651, 562}], LineBox[{1653, 564}], LineBox[{1656, 567}], 
       LineBox[{1658, 569}], LineBox[{1659, 570}], LineBox[{1664, 575}], 
       LineBox[{1671, 582}], LineBox[{1672, 583}], LineBox[{1673, 584}], 
       LineBox[{1674, 585}], LineBox[{1675, 586}], LineBox[{1677, 588}], 
       LineBox[{1681, 592}], LineBox[{1685, 596}], LineBox[{1686, 597}], 
       LineBox[{1690, 601}], LineBox[{1692, 603}], LineBox[{1694, 605}], 
       LineBox[{1701, 612}], LineBox[{1711, 622}], LineBox[{1714, 625}], 
       LineBox[{1720, 631}], LineBox[{1729, 640}], LineBox[{1736, 647}], 
       LineBox[{1738, 649}], LineBox[{1739, 650}], LineBox[{1740, 651}], 
       LineBox[{1741, 652}], LineBox[{1750, 661}], LineBox[{1751, 662}], 
       LineBox[{1757, 668}], LineBox[{1759, 670}], LineBox[{1764, 675}], 
       LineBox[{1770, 681}], LineBox[{1772, 683}], LineBox[{1778, 689}], 
       LineBox[{1779, 690}], LineBox[{1780, 691}], LineBox[{1782, 693}], 
       LineBox[{1785, 696}], LineBox[{1788, 699}], LineBox[{1792, 703}], 
       LineBox[{1793, 704}], LineBox[{1794, 705}], LineBox[{1795, 706}], 
       LineBox[{1796, 707}], LineBox[{1803, 714}], LineBox[{1807, 718}], 
       LineBox[{1810, 721}], LineBox[{1814, 725}], LineBox[{1815, 726}], 
       LineBox[{1816, 727}], LineBox[{1818, 729}], LineBox[{1819, 730}], 
       LineBox[{1821, 732}], LineBox[{1824, 735}], LineBox[{1826, 737}], 
       LineBox[{1827, 738}], LineBox[{1828, 739}], LineBox[{1830, 741}], 
       LineBox[{1831, 742}], LineBox[{1832, 743}], LineBox[{1833, 744}], 
       LineBox[{1835, 746}], LineBox[{1836, 747}], LineBox[{1842, 753}], 
       LineBox[{1854, 765}], LineBox[{1855, 766}], LineBox[{1856, 767}], 
       LineBox[{1857, 768}], LineBox[{1859, 770}], LineBox[{1860, 771}], 
       LineBox[{1861, 772}], LineBox[{1862, 773}], LineBox[{1867, 778}], 
       LineBox[{1870, 781}], LineBox[{1871, 782}], LineBox[{1872, 783}], 
       LineBox[{1873, 784}], LineBox[{1874, 785}], LineBox[{1875, 786}], 
       LineBox[{1876, 787}], LineBox[{1877, 788}], LineBox[{1882, 793}], 
       LineBox[{1885, 796}], LineBox[{1887, 798}], LineBox[{1893, 804}], 
       LineBox[{1898, 809}], LineBox[{1899, 810}], LineBox[{1900, 811}], 
       LineBox[{1903, 814}], LineBox[{1904, 815}], LineBox[{1905, 816}], 
       LineBox[{1907, 818}], LineBox[{1909, 820}], LineBox[{1910, 821}], 
       LineBox[{1912, 823}], LineBox[{1915, 826}], LineBox[{1929, 840}], 
       LineBox[{1930, 841}], LineBox[{1931, 842}], LineBox[{1934, 845}], 
       LineBox[{1935, 846}], LineBox[{1940, 851}], LineBox[{1942, 853}], 
       LineBox[{1943, 854}], LineBox[{1945, 856}], LineBox[{1947, 858}], 
       LineBox[{1948, 859}], LineBox[{1951, 862}], LineBox[{1955, 866}], 
       LineBox[{1956, 867}], LineBox[{1958, 869}], LineBox[{1959, 870}], 
       LineBox[{1962, 873}], LineBox[{1963, 874}], LineBox[{1964, 875}], 
       LineBox[{1967, 878}], LineBox[{1968, 879}], LineBox[{1969, 880}], 
       LineBox[{1972, 883}], LineBox[{1973, 884}], LineBox[{1977, 888}], 
       LineBox[{1979, 890}], LineBox[{1980, 891}], LineBox[{1981, 892}], 
       LineBox[{1982, 893}], LineBox[{1983, 894}], LineBox[{1984, 895}], 
       LineBox[{1985, 896}], LineBox[{1986, 897}], LineBox[{1988, 899}], 
       LineBox[{1989, 900}], LineBox[{1990, 901}], LineBox[{1992, 903}], 
       LineBox[{1993, 904}], LineBox[{1994, 905}], LineBox[{1995, 906}], 
       LineBox[{1996, 907}], LineBox[{1997, 908}], LineBox[{1998, 909}], 
       LineBox[{2001, 912}], LineBox[{2002, 913}], LineBox[{2003, 914}], 
       LineBox[{2004, 915}], LineBox[{2005, 916}], LineBox[{2006, 917}], 
       LineBox[{2008, 919}], LineBox[{2013, 924}], LineBox[{2014, 925}], 
       LineBox[{2016, 927}], LineBox[{2017, 928}], LineBox[{2018, 929}], 
       LineBox[{2021, 932}], LineBox[{2022, 933}], LineBox[{2023, 934}], 
       LineBox[{2026, 937}], LineBox[{2027, 938}], LineBox[{2029, 940}], 
       LineBox[{2038, 949}], LineBox[{2043, 954}], LineBox[{2050, 961}], 
       LineBox[{2051, 962}], LineBox[{2055, 966}], LineBox[{2056, 967}], 
       LineBox[{2057, 968}], LineBox[{2063, 974}], LineBox[{2064, 975}], 
       LineBox[{2065, 976}], LineBox[{2070, 981}], LineBox[{2071, 982}], 
       LineBox[{2081, 992}], LineBox[{2107, 1018}], LineBox[{2111, 1022}], 
       LineBox[{2115, 1026}], LineBox[{2122, 1033}], LineBox[{2127, 1038}], 
       LineBox[{2131, 1042}], LineBox[{2134, 1045}], LineBox[{2135, 1046}], 
       LineBox[{2137, 1048}], LineBox[{2138, 1049}], LineBox[{2148, 1059}], 
       LineBox[{2149, 1060}], LineBox[{2150, 1061}], LineBox[{2151, 1062}], 
       LineBox[{2152, 1063}], LineBox[{2153, 1064}], LineBox[{2154, 1065}], 
       LineBox[{2155, 1066}], LineBox[{2158, 1069}], LineBox[{2159, 1070}], 
       LineBox[{2160, 1071}], LineBox[{2161, 1072}], LineBox[{2162, 1073}], 
       LineBox[{2164, 1075}], LineBox[{2165, 1076}], LineBox[{2168, 1079}], 
       LineBox[{2169, 1080}], LineBox[{2170, 1081}], LineBox[{2174, 1085}], 
       LineBox[{2175, 1086}], LineBox[{2177, 1088}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.004583333333333334], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwN00OiGAoCALA3tW3btm3btm392rZt27Zt27Y7WeQISdiofaV2/wsICCgY
JCBgUIiAgMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7z
mM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exhL/vY
zwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu97jP
Ax7yiMc84SnPeM4LXvKK17zhLe94zwc+8onPfOEr3/jOD37yi9/84S//CAgZ
EPA/AhGYIAQlGMEJQUhCEZowhCUc4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJ
QEISkZgkJCUZyUlBSlKRmjSkJR3pyUBGMpGZLGQlG9nJQU5ykZs85CUf+SlA
QQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa1alBTWpRmzrUpR71aUBD
GtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50pRvd6UFPetGbPvSlH//RnwEM
ZBCDGcJQhjGcEYxkFKMZw1jGMZ4JTGQSk5nCVKYxnRnMZBazmcNc5jGfBSxk
EYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb2cJWtrGdHexkF7vZw172sZ8DHOQQ
hznCUY5xnBOc5BSnOcNZznGeC1zkEpe5wlWucZ0b3OQWt7nDXe5xnwc85BGP
ecJTnvGcF7zkFa95w1ve8Z4PfOQTn/nCV77xnR/85Be/+cNf/hEQyn8CEZgg
BCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4xCUe8UlAQhKRmCQk
JRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzkJR/5KUBBClGYIhSl
GMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSlHvVpQEMa0ZgmNKUZ
zWlBS1rRmja0pR3t6UBHOtGZLnSlG93pQU960Zs+9KUf/9GfAQxkEIMZwlCG
MZwRjGQUoxnDWMYxnglMZBKTmcJUpjGdGcxkFrOZw1zmMZ8FLGQRi1nCUpax
nBWsZBWrWcNa1rGeDWxkE5vZwla2sZ0d7GQXu9nDXvaxnwMc5BCHOcJRjnGc
E5zkFKc5w1nOcZ4LXOQSl7nCVa5xnRvc5Ba3ucNd7nGfBzzkEY95wlOe8ZwX
vOQVr3nDW97xng985BOf+cJXvvGdH/zkF7/5w1/+ERDafwIRmCAEJRjBCUFI
QhGaMIQlHOGJQEQiEZkoRCUa0YlBTGIRmzjEJR7xSUBCEpGYJCQlGclJQUpS
kZo0pCUd6clARjKRmSxkJRvZyUFOcpGbPOQlH/kpQEEKUZgiFKUYxSlBSUpR
mjKUpRzlqUBFKlGZKlSlGtWpQU1qUZs61KUe9WlAQxrRmCY0pRnNaUFLWtGa
NrSlHe3pQEc60ZkudKUb3elBT3rRmz70pR//0Z8BDGQQgxnCUIYxnBGMZBSj
GcNYxjGeCUxkEpOZwlSmMZ0ZzGQWs5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZ
w1rWsZ4NbGQTm9nCVraxnR3sZBe72cNe9rGfAxzkEIc5wlGOcZwTnOQUpznD
Wc5xngtc5BKXucJVrnGdG9zkFre5w13ucZ8HPOQRj3nCU57xnBe85BWvecNb
3vGeD3zkE5/5wle+8Z0f/OQXv/nDX/4REMZ/AhGYIAQlGMEJQUhCEZowhCUc
4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJQEISkZgkJCUZyUlBSlKRmjSkJR3p
yUBGMpGZLGQlG9nJQU5ykZs85CUf+SlAQQpRmCIUpRjFKUFJSlGaMpSlHOWp
QEUqUZkqVKUa1alBTWpRmzrUpR71aUBDGtGYJjSlGc1pQUta0Zo2tKUd7elA
RzrRmS50pRvd6UFPetGbPvSlH//RnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4J
TGQSk5nCVKYxnRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1s
ZBOb2cJWtrGdHexkF7vZw172sZ8DHOQQ/wfgGlSS
        "]]}, {}}}], {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"actual value - predicted value\"", TraditionalForm], None}, {
     FormBox["\"predicted value\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.10622505270525087`, 0.2537667713497201}, {-4.36244810819162,
    4.36244810819162}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.710061836689308*^9, 3.7100694576779785`*^9, 3.710070139624318*^9, 
   3.7100704780669823`*^9, {3.7100705615096645`*^9, 3.710070614525264*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<Properties\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7100702445863047`*^9, 3.710070250788543*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ComparisonPlot\"\>", ",", "\<\"InversePerplexity\"\>", 
   ",", "\<\"Likelihood\"\>", ",", "\<\"LogLikelihood\"\>", 
   ",", "\<\"LogLikelihoodRate\"\>", ",", "\<\"MeanDeviation\"\>", 
   ",", "\<\"MeanSquare\"\>", ",", "\<\"Perplexity\"\>", 
   ",", "\<\"Properties\"\>", ",", "\<\"RejectionRate\"\>", 
   ",", "\<\"ResidualHistogram\"\>", ",", "\<\"ResidualPlot\"\>", 
   ",", "\<\"Residuals\"\>", ",", "\<\"StandardDeviation\"\>", 
   ",", "\<\"TotalSquare\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7100702513626595`*^9, 3.710070486409651*^9, {3.710070592490859*^9, 
   3.710070614591277*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"residuals1", "=", 
  RowBox[{"pm", "[", "\"\<Residuals\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.7100706165066605`*^9, 3.7100706341761923`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.7423094125617071`"}], ",", 
   RowBox[{"-", "0.39413039631605934`"}], ",", 
   RowBox[{"-", "0.19557702379234132`"}], ",", "0.8551781139712787`", ",", 
   RowBox[{"-", "0.8746574865358464`"}], ",", "1.9147942059619663`", ",", 
   "3.2178898172044095`", ",", "3.5106552251133576`", ",", 
   "3.1362747392354806`", ",", "0.8068154641819031`", ",", 
   RowBox[{"-", "0.7199620368719719`"}], ",", 
   RowBox[{"-", "1.1385447584783779`"}], ",", 
   RowBox[{"-", "0.689043338916513`"}], ",", "1.2782911951611302`", ",", 
   "1.5051848827774406`", ",", "0.1774977997204937`", ",", 
   "0.37236216812287926`", ",", "1.1003359192064786`", ",", 
   RowBox[{"-", "0.45810724168139083`"}], ",", 
   RowBox[{"-", "0.4679508599693947`"}], ",", 
   RowBox[{"-", "0.08050355651283823`"}], ",", "0.661685757217875`", ",", 
   "2.79858638251382`", ",", "2.505777802340193`", ",", "0.3651078255258911`",
    ",", 
   RowBox[{"-", "0.5774437069936176`"}], ",", 
   RowBox[{"-", "1.005361053511848`"}], ",", "1.2650669573226527`", ",", 
   RowBox[{"-", "0.4261760051451037`"}], ",", 
   RowBox[{"-", "0.10237519143436256`"}], ",", "0.11159150340086835`", ",", 
   "0.870100124091227`", ",", "0.778866286293773`", ",", 
   "0.6634364436010929`", ",", "0.8872969170105252`", ",", 
   "1.7857287861765114`", ",", 
   RowBox[{"-", "0.11694582946125259`"}], ",", 
   RowBox[{"-", "0.5790498247951419`"}], ",", 
   RowBox[{"-", "0.6319380324538006`"}], ",", 
   RowBox[{"-", "0.8524700968900332`"}], ",", 
   RowBox[{"-", "0.13077537381417165`"}], ",", 
   RowBox[{"-", "0.0256119308834917`"}], ",", 
   RowBox[{"-", "0.21965506637259807`"}], ",", "0.42968122021420135`", ",", 
   RowBox[{"-", "0.36473543343402315`"}], ",", 
   RowBox[{"-", "0.21861081857145165`"}], ",", "1.6567829745453355`", ",", 
   "1.5170410643582601`", ",", "0.28709299209278644`", ",", 
   RowBox[{"-", "0.3083727830892323`"}], ",", "1.7223607026900767`", ",", 
   "0.38960839011974896`", ",", "0.9653413146656393`", ",", 
   "3.891160993126974`", ",", "4.026457159889169`", ",", 
   "2.6287102352179303`", ",", "2.7134776261204414`", ",", 
   "0.05018946735154972`", ",", 
   RowBox[{"-", "0.07556001869202189`"}], ",", 
   RowBox[{"-", "0.653822138619571`"}], ",", 
   RowBox[{"-", "0.5516887297130633`"}], ",", 
   RowBox[{"-", "0.2697798442897511`"}], ",", 
   RowBox[{"-", "0.7708988074579763`"}], ",", "0.0069172452484916325`", ",", 
   RowBox[{"-", "0.059044762117080096`"}], ",", "0.3907064407244823`", ",", 
   "1.0832444335183875`", ",", "0.62572133384623`", ",", 
   "0.13671120088346816`", ",", "0.05328535617548369`", ",", 
   RowBox[{"-", "0.24147490000722543`"}], ",", 
   RowBox[{"-", "0.21894828447062512`"}], ",", 
   RowBox[{"-", "0.4926838699878759`"}], ",", 
   RowBox[{"-", "0.13795915748278975`"}], ",", "0.11773119329829979`", ",", 
   RowBox[{"-", "0.2691878751478485`"}], ",", 
   RowBox[{"-", "0.02306543718882531`"}], ",", 
   RowBox[{"-", "0.008904486350027718`"}], ",", 
   RowBox[{"-", "0.0337634552084434`"}], ",", "0.3019360067922994`", ",", 
   "0.2259328398890928`", ",", "0.05622802209056227`", ",", 
   RowBox[{"-", "1.1164855273882497`"}], ",", "0.5625381559135931`", ",", 
   "0.23517285375053854`", ",", 
   RowBox[{"-", "0.3919452800848877`"}], ",", "0.12337761447042023`", ",", 
   RowBox[{"-", "0.9073325641957153`"}], ",", "0.09609290884351468`", ",", 
   "1.2456747026587927`", ",", 
   RowBox[{"-", "0.3279343389968815`"}], ",", 
   RowBox[{"-", "0.7069713280286075`"}], ",", 
   RowBox[{"-", "0.08960585039552592`"}], ",", "0.11997841499691504`", ",", 
   "0.21545807626883023`", ",", 
   RowBox[{"-", "0.4285877020770346`"}], ",", "0.7992674170195314`", ",", 
   "0.8181850897129915`", ",", "0.373423380987753`", ",", 
   RowBox[{"-", "0.3132181151201229`"}], ",", "1.785036897829706`", ",", 
   "1.1251073674296634`", ",", 
   RowBox[{"-", "0.662373501908392`"}], ",", "1.2750321679575265`", ",", 
   "1.212658805107579`", ",", "0.6525176366494801`", ",", 
   "1.343242058022746`", ",", "0.9239488538072749`", ",", 
   "1.3074722710747138`", ",", "1.6485988402994483`", ",", 
   "0.04478864164381709`", ",", 
   RowBox[{"-", "0.5998708287995907`"}], ",", 
   RowBox[{"-", "0.06507287393294928`"}], ",", "0.7628034870607006`", ",", 
   "1.1343606389572238`", ",", "0.5739257660773947`", ",", 
   RowBox[{"-", "0.4455568755057604`"}], ",", "0.9091430427636913`", ",", 
   RowBox[{"-", "0.37832518592745723`"}], ",", 
   RowBox[{"-", "0.6717917356272795`"}], ",", 
   RowBox[{"-", "0.6357563691121821`"}], ",", 
   RowBox[{"-", "0.5347945719057712`"}], ",", 
   RowBox[{"-", "0.1144249131357137`"}], ",", "1.5896081172809213`", ",", 
   "0.7797008001313962`", ",", "1.1586160345607313`", ",", 
   "0.5208622361699388`", ",", "0.2448699395386542`", ",", 
   "0.5324091495678094`", ",", "0.46500208023658635`", ",", 
   "0.7878566987733069`", ",", "0.12911093291215803`", ",", 
   "1.1813005301717978`", ",", "0.40224064537611864`", ",", 
   "1.1175960281926296`", ",", "1.8619940309973217`", ",", 
   "1.1754155701860427`", ",", "2.351278548830069`", ",", 
   "1.5965088721546883`", ",", "0.9523703695101107`", ",", 
   RowBox[{"-", "0.9230072757744585`"}], ",", "1.4106653720934628`", ",", 
   "0.3074059686243498`", ",", 
   RowBox[{"-", "0.05927751409894056`"}], ",", "0.5280444585200704`", ",", 
   RowBox[{"-", "0.24432695066243082`"}], ",", 
   RowBox[{"-", "0.4936908724904584`"}], ",", 
   RowBox[{"-", "0.9016931680404573`"}], ",", "0.4453912145529369`", ",", 
   RowBox[{"-", "0.5801837577513821`"}], ",", 
   RowBox[{"-", "0.7235599883756005`"}], ",", 
   RowBox[{"-", "0.8222930784473697`"}], ",", "1.7113203242109392`", ",", 
   "1.2493486986587727`", ",", "0.1589030031355798`", ",", 
   RowBox[{"-", "0.035126494836036526`"}], ",", 
   RowBox[{"-", "0.45196638756693025`"}], ",", "0.1766428488223432`", ",", 
   "1.2602707966277467`", ",", "0.9513845908533411`", ",", 
   "1.1597396357330554`", ",", "0.5435690307849779`", ",", 
   "0.11569277485729514`", ",", "0.6910133642027096`", ",", 
   "1.5506445141633316`", ",", "2.082950699677834`", ",", 
   "1.036548549709437`", ",", "0.9414278050380845`", ",", 
   "0.3723671557206366`", ",", "0.13414729065362804`", ",", 
   RowBox[{"-", "0.04504523944451955`"}], ",", "0.34661478241578797`", ",", 
   RowBox[{"-", "0.14556144233254237`"}], ",", "0.4410785338733403`", ",", 
   "0.3937972036166714`", ",", 
   RowBox[{"-", "0.16662857490353694`"}], ",", 
   RowBox[{"-", "0.3973267462445467`"}], ",", 
   RowBox[{"-", "0.6177403018549749`"}], ",", 
   RowBox[{"-", "0.5016992958330665`"}], ",", "0.2704422221150849`", ",", 
   "0.48780353376332414`", ",", "1.4880793492270075`", ",", 
   RowBox[{"-", "0.12157913996057815`"}], ",", 
   RowBox[{"-", "0.22466731809109536`"}], ",", "0.9248443637826917`", ",", 
   "0.5306449548668833`", ",", "0.6221923290530214`", ",", 
   "0.9618755214675061`", ",", "1.0058073406740322`", ",", 
   "0.07485660622466722`", ",", "0.07872768074979053`", ",", 
   "0.22310748346981515`", ",", "0.47526775070006766`", ",", 
   "0.2384873175304261`", ",", 
   RowBox[{"-", "0.23019877497462501`"}], ",", "0.8971920757721634`", ",", 
   "0.5613102172614142`", ",", "0.27793807637863654`", ",", 
   "1.2139412128295701`", ",", "0.21780063603238373`", ",", 
   "0.36540725427644694`", ",", "0.33485686442595297`", ",", 
   "0.6515881758186436`", ",", 
   RowBox[{"-", "0.43786194965721126`"}], ",", 
   RowBox[{"-", "0.3383094909226785`"}], ",", "0.8714266411278841`", ",", 
   "0.24363675265946386`", ",", "0.28793852264124875`", ",", 
   "0.26765338492151297`", ",", "0.605602587895093`", ",", 
   "0.3126093281908705`", ",", "0.26201446778445125`", ",", 
   "0.8210750639985377`", ",", "0.37598246949105785`", ",", 
   "0.6225937993535231`", ",", "0.015926206074035748`", ",", 
   RowBox[{"-", "1.0606726195976883`"}], ",", 
   RowBox[{"-", "1.0901497089624543`"}], ",", "0.020200779640959482`", ",", 
   "0.4186175751838921`", ",", "0.2661940525933427`", ",", 
   RowBox[{"-", "0.09805363715746729`"}], ",", 
   RowBox[{"-", "0.8717722544973309`"}], ",", "0.43251977409229525`", ",", 
   "1.3240006295868372`", ",", "0.4060594801515346`", ",", 
   "0.8658428323383371`", ",", "0.01803892572431734`", ",", 
   "0.1386946288376121`", ",", 
   RowBox[{"-", "0.7971844020696931`"}], ",", "0.8273272069335575`", ",", 
   "0.29719668514400777`", ",", "3.1436509324745368`", ",", 
   "3.544001134695989`", ",", "2.1611365070240853`", ",", 
   RowBox[{"-", "0.4579704138218763`"}], ",", 
   RowBox[{"-", "0.9754016211555178`"}], ",", "0.701067930706675`", ",", 
   "0.1946398151807698`", ",", "0.048727054534174474`", ",", 
   "0.0352095678741364`", ",", 
   RowBox[{"-", "0.2714744931228866`"}], ",", "0.869131754704648`", ",", 
   "0.5147926756884731`", ",", 
   RowBox[{"-", "0.36250588348723556`"}], ",", 
   RowBox[{"-", "1.0751500881326403`"}], ",", 
   RowBox[{"-", "0.6231583648771408`"}], ",", 
   RowBox[{"-", "1.300518507843019`"}], ",", 
   RowBox[{"-", "0.821298441580861`"}], ",", 
   RowBox[{"-", "0.6111769008977869`"}], ",", 
   RowBox[{"-", "0.723719815945849`"}], ",", 
   RowBox[{"-", "0.39414507402394294`"}], ",", 
   RowBox[{"-", "0.29840896172045883`"}], ",", "0.4892913956550504`", ",", 
   "0.13253375213439406`", ",", 
   RowBox[{"-", "0.5164089328607836`"}], ",", 
   RowBox[{"-", "1.1233607070690526`"}], ",", 
   RowBox[{"-", "0.6196396837815811`"}], ",", "0.021458978508512097`", ",", 
   RowBox[{"-", "1.7875808924833236`"}], ",", 
   RowBox[{"-", "0.9851494236674263`"}], ",", 
   RowBox[{"-", "0.4235110703403967`"}], ",", 
   RowBox[{"-", "0.4554237114037939`"}], ",", 
   RowBox[{"-", "0.5692714463512807`"}], ",", "0.9781404412108338`", ",", 
   "0.46169012107987395`", ",", 
   RowBox[{"-", "1.1536915037541535`"}], ",", 
   RowBox[{"-", "1.2480172405033385`"}], ",", 
   RowBox[{"-", "1.228800641261418`"}], ",", 
   RowBox[{"-", "0.5259991050714593`"}], ",", 
   RowBox[{"-", "0.6876071774255128`"}], ",", 
   RowBox[{"-", "0.5363119067997615`"}], ",", 
   RowBox[{"-", "1.445646157215969`"}], ",", 
   RowBox[{"-", "1.0478068416925286`"}], ",", 
   RowBox[{"-", "0.24423145404448013`"}], ",", 
   RowBox[{"-", "0.4630704356870935`"}], ",", 
   RowBox[{"-", "1.4001053702705215`"}], ",", 
   RowBox[{"-", "0.8976739335142792`"}], ",", 
   RowBox[{"-", "0.145208451606033`"}], ",", 
   RowBox[{"-", "0.14752792910260462`"}], ",", 
   RowBox[{"-", "1.9418862821332847`"}], ",", 
   RowBox[{"-", "2.0273722002415213`"}], ",", 
   RowBox[{"-", "0.45149594112045544`"}], ",", 
   RowBox[{"-", "0.744016632002874`"}], ",", "0.5785497691925219`", ",", 
   RowBox[{"-", "0.8043858450131677`"}], ",", 
   RowBox[{"-", "0.8810499364604394`"}], ",", 
   RowBox[{"-", "0.6283330040648234`"}], ",", 
   RowBox[{"-", "1.7618105346833017`"}], ",", "0.30522731028963035`", ",", 
   RowBox[{"-", "0.32988714028735544`"}], ",", 
   RowBox[{"-", "0.031709660988599564`"}], ",", 
   RowBox[{"-", "0.26144197301107486`"}], ",", 
   RowBox[{"-", "1.441296714683165`"}], ",", "2.0286423962405906`", ",", 
   "0.7044596721358386`", ",", 
   RowBox[{"-", "0.4346257390067292`"}], ",", 
   RowBox[{"-", "0.6972293779587347`"}], ",", 
   RowBox[{"-", "0.9118818823670811`"}], ",", "0.048256888781649916`", ",", 
   "0.17429713368270028`", ",", 
   RowBox[{"-", "0.31377271192572653`"}], ",", 
   RowBox[{"-", "0.9528684303310528`"}], ",", 
   RowBox[{"-", "1.6698968416486384`"}], ",", 
   RowBox[{"-", "1.0629206449679582`"}], ",", "0.3329498698757678`", ",", 
   RowBox[{"-", "0.406604925058795`"}], ",", "0.3358931415003158`", ",", 
   "0.2272789613469331`", ",", 
   RowBox[{"-", "1.042269162117304`"}], ",", 
   RowBox[{"-", "1.4084901465187636`"}], ",", 
   RowBox[{"-", "0.8472670878572901`"}], ",", 
   RowBox[{"-", "0.6280443046118795`"}], ",", 
   RowBox[{"-", "0.6157137714632456`"}], ",", 
   RowBox[{"-", "0.1942389146716079`"}], ",", 
   RowBox[{"-", "0.21708717032022581`"}], ",", 
   RowBox[{"-", "1.5421266728023062`"}], ",", 
   RowBox[{"-", "1.116026777227447`"}], ",", 
   RowBox[{"-", "0.40473623202213593`"}], ",", 
   RowBox[{"-", "0.6117188969573357`"}], ",", 
   RowBox[{"-", "1.1350531507532065`"}], ",", 
   RowBox[{"-", "3.462856590490637`"}], ",", 
   RowBox[{"-", "2.2167294326287657`"}], ",", 
   RowBox[{"-", "1.6860452791169944`"}], ",", 
   RowBox[{"-", "0.6716982371599276`"}], ",", 
   RowBox[{"-", "0.50686683634439`"}], ",", "1.7493613372029224`", ",", 
   RowBox[{"-", "0.034925779367786985`"}], ",", 
   RowBox[{"-", "0.6518852541561148`"}], ",", 
   RowBox[{"-", "0.26240333809740823`"}], ",", 
   RowBox[{"-", "1.1868874590401894`"}], ",", 
   RowBox[{"-", "1.204635141692627`"}], ",", 
   RowBox[{"-", "0.08494361790938629`"}], ",", 
   RowBox[{"-", "0.08777708889527905`"}], ",", 
   RowBox[{"-", "1.009069722170449`"}], ",", 
   RowBox[{"-", "0.35820963243791426`"}], ",", 
   RowBox[{"-", "1.3706864213182284`"}], ",", 
   RowBox[{"-", "1.4357336057730703`"}], ",", 
   RowBox[{"-", "1.0103279224071797`"}], ",", 
   RowBox[{"-", "0.4895492237803888`"}], ",", "0.033589342438338526`", ",", 
   RowBox[{"-", "0.688520998767451`"}], ",", 
   RowBox[{"-", "1.0987244370211222`"}], ",", 
   RowBox[{"-", "1.3011484824099593`"}], ",", 
   RowBox[{"-", "0.9445998790585612`"}], ",", 
   RowBox[{"-", "0.6619204220755932`"}], ",", 
   RowBox[{"-", "1.2470957263175402`"}], ",", 
   RowBox[{"-", "0.38989917534789864`"}], ",", 
   RowBox[{"-", "0.3870703085226842`"}], ",", 
   RowBox[{"-", "1.0611142199646808`"}], ",", 
   RowBox[{"-", "2.3401284641218627`"}], ",", 
   RowBox[{"-", "1.8913908777680664`"}], ",", 
   RowBox[{"-", "0.7895537868044012`"}], ",", 
   RowBox[{"-", "0.21134544605387523`"}], ",", 
   RowBox[{"-", "1.0522178945209106`"}], ",", "0.2875975455589884`", ",", 
   "0.50313545452871`", ",", "0.8417162202865968`", ",", 
   RowBox[{"-", "0.005426876703384348`"}], ",", 
   RowBox[{"-", "0.5538665993986739`"}], ",", 
   RowBox[{"-", "0.5634008546491047`"}], ",", 
   RowBox[{"-", "0.8002966223073721`"}], ",", 
   RowBox[{"-", "0.23411037183004327`"}], ",", "0.45119323790668775`", ",", 
   "1.213667738333101`", ",", "2.1474385059722736`", ",", 
   "1.6991844491267016`", ",", "1.1691342558697437`", ",", 
   "0.823918804683606`", ",", 
   RowBox[{"-", "0.06437160581632206`"}], ",", "0.8421392125627064`", ",", 
   RowBox[{"-", "0.07590691962016885`"}], ",", 
   RowBox[{"-", "0.09150311518886989`"}], ",", 
   RowBox[{"-", "1.1011318009421014`"}], ",", 
   RowBox[{"-", "1.9249722430179619`"}], ",", 
   RowBox[{"-", "0.8803893525902899`"}], ",", 
   RowBox[{"-", "0.6133946060483806`"}], ",", 
   RowBox[{"-", "0.19952766624769014`"}], ",", 
   RowBox[{"-", "0.7528195539806309`"}], ",", 
   RowBox[{"-", "1.1236215282852806`"}], ",", "1.3686425447375579`", ",", 
   "0.03419678067737986`", ",", 
   RowBox[{"-", "1.781683325844467`"}], ",", 
   RowBox[{"-", "1.0134225651080162`"}], ",", 
   RowBox[{"-", "0.7414948355887525`"}], ",", 
   RowBox[{"-", "0.22944728061168979`"}], ",", "0.06881414067319677`", ",", 
   RowBox[{"-", "0.39725026222377235`"}], ",", 
   RowBox[{"-", "1.1484647836422026`"}], ",", 
   RowBox[{"-", "1.3542560790238396`"}], ",", 
   RowBox[{"-", "0.9017826963550366`"}], ",", 
   RowBox[{"-", "0.6288140116038583`"}], ",", 
   RowBox[{"-", "0.06863434030690674`"}], ",", 
   RowBox[{"-", "1.9477383844133933`"}], ",", 
   RowBox[{"-", "1.2933772287587617`"}], ",", 
   RowBox[{"-", "1.4442082435878434`"}], ",", 
   RowBox[{"-", "1.4727733523448983`"}], ",", 
   RowBox[{"-", "0.7364075797327767`"}], ",", 
   RowBox[{"-", "0.47659439622769995`"}], ",", "1.163183268550004`", ",", 
   "0.7843581661952599`", ",", 
   RowBox[{"-", "0.5528211470865905`"}], ",", 
   RowBox[{"-", "1.3132423055471822`"}], ",", 
   RowBox[{"-", "1.2387901783242123`"}], ",", 
   RowBox[{"-", "0.6537414768972941`"}], ",", 
   RowBox[{"-", "0.1413380003891207`"}], ",", 
   RowBox[{"-", "0.3780338823526462`"}], ",", "0.6226283595073108`", ",", 
   "0.09130574131798902`", ",", "0.1632604846924976`", ",", 
   RowBox[{"-", "0.4702198922028068`"}], ",", 
   RowBox[{"-", "0.7753521686643545`"}], ",", 
   RowBox[{"-", "1.1055224843584242`"}], ",", 
   RowBox[{"-", "0.7567756717601222`"}], ",", "0.05215332799705838`", ",", 
   "1.346986488401639`", ",", 
   RowBox[{"-", "0.8903503310116613`"}], ",", 
   RowBox[{"-", "1.3411192916402095`"}], ",", 
   RowBox[{"-", "1.0979590536782753`"}], ",", 
   RowBox[{"-", "0.28093722118011905`"}], ",", 
   RowBox[{"-", "0.9762403360826526`"}], ",", 
   RowBox[{"-", "1.386606837870164`"}], ",", 
   RowBox[{"-", "0.18531668130719092`"}], ",", "0.9196823011063031`", ",", 
   "0.9088927217681864`", ",", 
   RowBox[{"-", "0.8807996647099274`"}], ",", 
   RowBox[{"-", "1.090380594235391`"}], ",", 
   RowBox[{"-", "1.146505649224915`"}], ",", 
   RowBox[{"-", "1.4588874937446288`"}], ",", 
   RowBox[{"-", "1.4132283442010387`"}], ",", 
   RowBox[{"-", "0.7054847128075823`"}], ",", 
   RowBox[{"-", "0.08692675734636249`"}], ",", 
   RowBox[{"-", "0.941108218190879`"}], ",", 
   RowBox[{"-", "0.8585576764140175`"}], ",", 
   RowBox[{"-", "0.15200698731795417`"}], ",", 
   RowBox[{"-", "0.016277890201093992`"}], ",", 
   RowBox[{"-", "0.42629147540262213`"}], ",", 
   RowBox[{"-", "0.8589610255530384`"}], ",", 
   RowBox[{"-", "0.20442612900815355`"}], ",", 
   RowBox[{"-", "0.189812338620442`"}], ",", "0.18127887683620564`", ",", 
   "0.2673909861852088`", ",", 
   RowBox[{"-", "0.18308511929049293`"}], ",", "0.1597639078825725`", ",", 
   RowBox[{"-", "0.5988367867871945`"}], ",", "0.6795821073743298`", ",", 
   RowBox[{"-", "0.37788216308488176`"}], ",", 
   RowBox[{"-", "0.948897924131815`"}], ",", 
   RowBox[{"-", "0.7263228190899077`"}], ",", 
   RowBox[{"-", "0.10971175120729487`"}], ",", 
   RowBox[{"-", "0.8440802325149181`"}], ",", 
   RowBox[{"-", "0.6413175114807288`"}], ",", 
   RowBox[{"-", "0.2528785474771171`"}], ",", 
   RowBox[{"-", "1.103890392384657`"}], ",", 
   RowBox[{"-", "1.137790247486253`"}], ",", 
   RowBox[{"-", "0.4784535559792293`"}], ",", 
   RowBox[{"-", "1.4434806753346279`"}], ",", 
   RowBox[{"-", "1.2851308115222766`"}], ",", 
   RowBox[{"-", "1.0741323564393817`"}], ",", 
   RowBox[{"-", "1.588299153268695`"}], ",", 
   RowBox[{"-", "0.7892514722375039`"}], ",", 
   RowBox[{"-", "1.2094263980178157`"}], ",", 
   RowBox[{"-", "1.0766842455907772`"}], ",", 
   RowBox[{"-", "1.4677633792494467`"}], ",", 
   RowBox[{"-", "0.47726887813331637`"}], ",", 
   RowBox[{"-", "0.6717863843983556`"}], ",", 
   RowBox[{"-", "0.698625399854415`"}], ",", 
   RowBox[{"-", "1.4201870813421482`"}], ",", 
   RowBox[{"-", "1.1274264959217513`"}], ",", 
   RowBox[{"-", "0.015968712445657937`"}], ",", "0.4520359531168668`", ",", 
   RowBox[{"-", "0.5588517695405928`"}], ",", "0.5753400596324427`", ",", 
   RowBox[{"-", "0.331818767029818`"}], ",", 
   RowBox[{"-", "0.6925339107477434`"}], ",", 
   RowBox[{"-", "0.5478857249280591`"}], ",", "0.5220673523918788`", ",", 
   RowBox[{"-", "0.8472071079577692`"}], ",", "0.15760629964591066`", ",", 
   "1.1667489201729502`", ",", "1.836007979612239`", ",", 
   RowBox[{"-", "1.2628072975720632`"}], ",", 
   RowBox[{"-", "0.7575892721748694`"}], ",", 
   RowBox[{"-", "0.3967340855404772`"}], ",", 
   RowBox[{"-", "0.7883631438609753`"}], ",", 
   RowBox[{"-", "0.6880262141814973`"}], ",", 
   RowBox[{"-", "0.8590721466771567`"}], ",", 
   RowBox[{"-", "1.0203404062541113`"}], ",", 
   RowBox[{"-", "0.6215876999310659`"}], ",", 
   RowBox[{"-", "1.1674997045960205`"}], ",", 
   RowBox[{"-", "0.1721159005400496`"}], ",", 
   RowBox[{"-", "0.7468860730117282`"}], ",", 
   RowBox[{"-", "1.394912730732534`"}], ",", 
   RowBox[{"-", "1.6990118374843013`"}], ",", 
   RowBox[{"-", "0.17450445904156195`"}], ",", 
   RowBox[{"-", "0.5394564354598664`"}], ",", "0.5553981781863848`", ",", 
   "1.2068474713743238`", ",", "0.5246545716206273`", ",", 
   "0.5930874937426232`", ",", 
   RowBox[{"-", "0.41830184544409565`"}], ",", 
   RowBox[{"-", "1.4600842601190422`"}], ",", 
   RowBox[{"-", "0.8782155817805857`"}], ",", 
   RowBox[{"-", "1.2847913770789756`"}], ",", 
   RowBox[{"-", "1.2346516923684325`"}], ",", 
   RowBox[{"-", "1.1805199870601963`"}], ",", 
   RowBox[{"-", "1.3521066496015979`"}], ",", "0.5179559014397358`", ",", 
   "0.8706136095327726`", ",", 
   RowBox[{"-", "0.3965663369878492`"}], ",", 
   RowBox[{"-", "0.3490861401958388`"}], ",", 
   RowBox[{"-", "0.972493508177156`"}], ",", 
   RowBox[{"-", "1.5302553918602015`"}], ",", 
   RowBox[{"-", "0.7322861648508915`"}], ",", "0.014878908587670447`", ",", 
   "0.8305444472419623`", ",", "0.42833731669514`", ",", 
   "0.10931108948469655`", ",", 
   RowBox[{"-", "0.5298026277556689`"}], ",", 
   RowBox[{"-", "1.0075485569009657`"}], ",", "0.6141747452313054`", ",", 
   RowBox[{"-", "0.48216128709305484`"}], ",", 
   RowBox[{"-", "0.4525699623106549`"}], ",", "0.6812366272283372`", ",", 
   RowBox[{"-", "1.0109727848940104`"}], ",", 
   RowBox[{"-", "0.6067948365098303`"}], ",", "0.10897125809381099`", ",", 
   "0.007188386585217824`", ",", "0.3030485996823169`", ",", 
   RowBox[{"-", "0.3797051395479068`"}], ",", 
   RowBox[{"-", "0.916350378893051`"}], ",", "0.0610670188063057`", ",", 
   RowBox[{"-", "1.0031046492188187`"}], ",", "0.2359420854186`", ",", 
   RowBox[{"-", "0.4195857647907751`"}], ",", 
   RowBox[{"-", "0.8036093417485208`"}], ",", 
   RowBox[{"-", "1.044324892092944`"}], ",", 
   RowBox[{"-", "0.49769703230635554`"}], ",", 
   RowBox[{"-", "0.032338857227003595`"}], ",", "1.5863696405686694`", ",", 
   "0.0661767012323098`", ",", 
   RowBox[{"-", "0.538692272078597`"}], ",", 
   RowBox[{"-", "0.11382924249769062`"}], ",", 
   RowBox[{"-", "0.29923614660079223`"}], ",", "0.7911915469322888`", ",", 
   RowBox[{"-", "0.6593808321761564`"}], ",", "0.4625747314832829`", ",", 
   "1.7100296670253816`", ",", 
   RowBox[{"-", "0.10776644180045536`"}], ",", "0.6345966461472298`", ",", 
   RowBox[{"-", "0.4296528778629677`"}], ",", "0.32794596658617836`", ",", 
   RowBox[{"-", "0.5219725636770783`"}], ",", "1.1799164708770966`", ",", 
   "0.47900741689327697`", ",", "0.4385203904250309`", ",", 
   RowBox[{"-", "0.051526739584511`"}], ",", 
   RowBox[{"-", "1.1557551005382938`"}], ",", 
   RowBox[{"-", "0.12188602724653866`"}], ",", "0.37306555141662856`", ",", 
   "0.30448310081984026`", ",", "0.14853756968173523`", ",", 
   RowBox[{"-", "0.3447866330034653`"}], ",", "0.8454534531844736`", ",", 
   RowBox[{"-", "0.6910596990728213`"}], ",", 
   RowBox[{"-", "0.830290563799333`"}], ",", "0.9209883544361839`", ",", 
   RowBox[{"-", "0.21976875965499137`"}], ",", "0.8140150716674374`", ",", 
   "0.20280178614913794`", ",", 
   RowBox[{"-", "1.3885750935723695`"}], ",", 
   RowBox[{"-", "0.7387105247157634`"}], ",", 
   RowBox[{"-", "0.005502550178559922`"}], ",", 
   RowBox[{"-", "0.15931026303720616`"}], ",", "0.3996928037798614`", ",", 
   RowBox[{"-", "0.49161790399826166`"}], ",", 
   RowBox[{"-", "0.5404226779928383`"}], ",", 
   RowBox[{"-", "0.6223146689490962`"}], ",", 
   RowBox[{"-", "1.3873312369137034`"}], ",", 
   RowBox[{"-", "0.9839412009978873`"}], ",", 
   RowBox[{"-", "1.5820120474713146`"}], ",", "1.2802882726297882`", ",", 
   "0.4999213725863251`", ",", "0.9264808396570123`", ",", 
   "1.0112194537278274`", ",", "0.9611186917469066`", ",", 
   RowBox[{"-", "0.026472357708647948`"}], ",", "0.16488426146476506`", ",", 
   RowBox[{"-", "0.6681848923171427`"}], ",", 
   RowBox[{"-", "0.3329239568358284`"}], ",", 
   RowBox[{"-", "0.07621796388420274`"}], ",", "0.5310999571938155`", ",", 
   RowBox[{"-", "0.8126358575781494`"}], ",", 
   RowBox[{"-", "0.8274550494816497`"}], ",", 
   RowBox[{"-", "1.3229675280614297`"}], ",", "1.2005394562047793`", ",", 
   "1.294941132365699`", ",", 
   RowBox[{"-", "0.23087460764191142`"}], ",", 
   RowBox[{"-", "0.18714473676698704`"}], ",", 
   RowBox[{"-", "0.29758548759524617`"}], ",", "0.12665418260711006`", ",", 
   RowBox[{"-", "0.045233584212575506`"}], ",", "0.25181720826144427`", ",", 
   RowBox[{"-", "0.2154046279933679`"}], ",", "0.39742230465063844`", ",", 
   RowBox[{"-", "0.5603526839298302`"}], ",", 
   RowBox[{"-", "0.08447255587477127`"}], ",", 
   RowBox[{"-", "0.07649394436293447`"}], ",", 
   RowBox[{"-", "0.13630362790959022`"}], ",", 
   RowBox[{"-", "0.4561190281653297`"}], ",", 
   RowBox[{"-", "0.28396972166978984`"}], ",", "0.744628365517561`", ",", 
   RowBox[{"-", "0.25242356623906614`"}], ",", 
   RowBox[{"-", "0.35102593633556844`"}], ",", 
   RowBox[{"-", "0.1559874693511977`"}], ",", 
   RowBox[{"-", "0.07827927826893463`"}], ",", 
   RowBox[{"-", "0.5898496376802702`"}], ",", 
   RowBox[{"-", "0.7328060786364025`"}], ",", 
   RowBox[{"-", "0.3344132225540971`"}], ",", 
   RowBox[{"-", "0.18831680913783075`"}], ",", 
   RowBox[{"-", "0.3888446310821815`"}], ",", "0.18828472004846172`", ",", 
   RowBox[{"-", "0.12617627073310694`"}], ",", 
   RowBox[{"-", "0.6113507386174056`"}], ",", "0.4178427347419149`", ",", 
   RowBox[{"-", "1.4067949914629532`"}], ",", 
   RowBox[{"-", "1.7306759791699475`"}], ",", 
   RowBox[{"-", "0.5565659316477202`"}], ",", 
   RowBox[{"-", "0.5056035068742248`"}], ",", 
   RowBox[{"-", "1.6821532000089723`"}], ",", "0.2275788365116528`", ",", 
   RowBox[{"-", "0.3417476608966844`"}], ",", 
   RowBox[{"-", "1.2213134670051495`"}], ",", 
   RowBox[{"-", "0.2078835223422983`"}], ",", 
   RowBox[{"-", "1.4654014346566564`"}], ",", 
   RowBox[{"-", "0.8114751524585355`"}], ",", 
   RowBox[{"-", "0.8800495491322199`"}], ",", 
   RowBox[{"-", "0.11086398525266902`"}], ",", 
   RowBox[{"-", "1.2960796426970702`"}], ",", "0.38711856887132956`", ",", 
   RowBox[{"-", "1.3189659286315687`"}], ",", 
   RowBox[{"-", "0.5789939477145838`"}], ",", 
   RowBox[{"-", "0.4244232633454247`"}], ",", 
   RowBox[{"-", "0.059276330099076846`"}], ",", 
   RowBox[{"-", "1.0375744203235444`"}], ",", 
   RowBox[{"-", "1.2370487034986763`"}], ",", "2.1767284925499215`", ",", 
   RowBox[{"-", "1.5705708616355059`"}], ",", "0.39523351459485234`", ",", 
   "4.154712483992019`", ",", "4.0388048923717`", ",", "3.171232340571632`", 
   ",", 
   RowBox[{"-", "0.5403183376683774`"}], ",", 
   RowBox[{"-", "0.7909937448558688`"}], ",", 
   RowBox[{"-", "1.0283946950829104`"}], ",", 
   RowBox[{"-", "0.9150508218562574`"}], ",", 
   RowBox[{"-", "0.44542546401635774`"}], ",", 
   RowBox[{"-", "0.9519386582177005`"}], ",", 
   RowBox[{"-", "0.6359797223316527`"}], ",", 
   RowBox[{"-", "0.4578698141821729`"}], ",", "0.005704934941282422`", ",", 
   "0.21834718609102302`", ",", 
   RowBox[{"-", "0.5341363378142756`"}], ",", 
   RowBox[{"-", "0.7711782952676268`"}], ",", 
   RowBox[{"-", "0.6983548598890893`"}], ",", 
   RowBox[{"-", "1.4371923813830971`"}], ",", 
   RowBox[{"-", "0.09147339704763593`"}], ",", "0.24109650076831277`", ",", 
   RowBox[{"-", "0.3577415526394433`"}], ",", "0.01531187177546288`", ",", 
   RowBox[{"-", "1.3034182203799136`"}], ",", 
   RowBox[{"-", "1.858963267542299`"}], ",", 
   RowBox[{"-", "0.5535420058670871`"}], ",", 
   RowBox[{"-", "1.2755203107555186`"}], ",", "0.26755993407485473`", ",", 
   RowBox[{"-", "0.7958844510419519`"}], ",", 
   RowBox[{"-", "0.9161212283642235`"}], ",", 
   RowBox[{"-", "1.2139698187624564`"}], ",", 
   RowBox[{"-", "0.630954776274075`"}], ",", 
   RowBox[{"-", "0.15347787763805756`"}], ",", "0.23772910871487513`", ",", 
   RowBox[{"-", "0.11676044456625773`"}], ",", "0.18305071863292077`", ",", 
   RowBox[{"-", "0.6887286199118965`"}], ",", 
   RowBox[{"-", "1.1379225759351155`"}], ",", 
   RowBox[{"-", "1.1485010180733024`"}], ",", 
   RowBox[{"-", "0.27243796449146473`"}], ",", 
   RowBox[{"-", "0.8046673574393266`"}], ",", "1.1540613335653493`", ",", 
   "2.4058485040655033`", ",", "1.8133004978122669`", ",", 
   RowBox[{"-", "0.44364099901340226`"}], ",", "0.005844702686057926`", ",", 
   RowBox[{"-", "0.5089896503139654`"}], ",", 
   RowBox[{"-", "1.34557706782456`"}], ",", "2.0176870017319573`", ",", 
   RowBox[{"-", "0.7018357469502327`"}], ",", 
   RowBox[{"-", "0.021372385520967374`"}], ",", "0.9456858635416391`", ",", 
   RowBox[{"-", "0.1760205424097927`"}], ",", 
   RowBox[{"-", "0.02013382734165997`"}], ",", 
   RowBox[{"-", "0.9940688877171212`"}], ",", "0.45848889481668076`", ",", 
   "1.5405684906636887`", ",", "1.2285123399323765`", ",", 
   "2.0795954381806725`", ",", "0.22364311570726472`", ",", 
   RowBox[{"-", "1.0240152774695335`"}], ",", 
   RowBox[{"-", "1.5474179255494853`"}], ",", 
   RowBox[{"-", "1.4166305437702382`"}], ",", 
   RowBox[{"-", "1.0549586794361832`"}], ",", 
   RowBox[{"-", "1.0924466827066763`"}], ",", 
   RowBox[{"-", "0.05059189980814169`"}], ",", "0.9966539542255793`", ",", 
   RowBox[{"-", "0.027093450025098942`"}], ",", 
   RowBox[{"-", "0.5058657834555066`"}], ",", 
   RowBox[{"-", "0.27165368315347177`"}], ",", "0.10166347277612746`", ",", 
   RowBox[{"-", "0.44149310178151535`"}], ",", 
   RowBox[{"-", "0.3511309797606297`"}], ",", "0.23266828933508385`", ",", 
   RowBox[{"-", "0.7413961101344713`"}], ",", 
   RowBox[{"-", "0.5000305168443805`"}], ",", 
   RowBox[{"-", "0.3303376159174327`"}], ",", "0.7832256053355171`", ",", 
   "1.324465203733239`", ",", "0.46238832057504575`", ",", 
   RowBox[{"-", "0.10172800251602838`"}], ",", "0.6521651269696075`", ",", 
   "0.190598062668122`", ",", 
   RowBox[{"-", "0.06975525234741248`"}], ",", "1.287300568345979`", ",", 
   RowBox[{"-", "0.7325236510382436`"}], ",", 
   RowBox[{"-", "1.1197831031314711`"}], ",", "0.27170371694907514`", ",", 
   RowBox[{"-", "0.27779464295271494`"}], ",", "1.4907333076838998`", ",", 
   "1.2206434018677144`", ",", "1.3805006653663037`", ",", 
   RowBox[{"-", "1.3535597251301947`"}], ",", "0.5888502502277868`", ",", 
   "0.013476223766810402`", ",", "0.6519982238406591`", ",", 
   "0.11184853686340732`", ",", 
   RowBox[{"-", "0.4148273562205144`"}], ",", "1.1700667957765483`", ",", 
   "0.7191730986513541`", ",", 
   RowBox[{"-", "0.48400023863823616`"}], ",", 
   RowBox[{"-", "1.421786013755288`"}], ",", 
   RowBox[{"-", "1.0943904913151894`"}], ",", 
   RowBox[{"-", "0.5458536988146208`"}], ",", 
   RowBox[{"-", "0.690803464764013`"}], ",", "0.36018140252083086`", ",", 
   RowBox[{"-", "0.6622651085196899`"}], ",", 
   RowBox[{"-", "0.5337609045866918`"}], ",", 
   RowBox[{"-", "1.0609031523929193`"}], ",", 
   RowBox[{"-", "0.42415005291791325`"}], ",", 
   RowBox[{"-", "0.6732008293860009`"}], ",", 
   RowBox[{"-", "0.5184936467702738`"}], ",", 
   RowBox[{"-", "1.2722099733062784`"}], ",", 
   RowBox[{"-", "1.8983135548598034`"}], ",", 
   RowBox[{"-", "0.918889085797823`"}], ",", 
   RowBox[{"-", "0.5302195052086527`"}], ",", 
   RowBox[{"-", "0.9999594486482599`"}], ",", "0.03662508993205654`", ",", 
   "0.2792969079404802`", ",", "1.7545350949422496`", ",", 
   "1.2493908638468896`", ",", 
   RowBox[{"-", "0.5547993785483784`"}], ",", "1.385552438181503`", ",", 
   "0.9900423184195384`", ",", "2.177043022817472`", ",", 
   "0.6405695697918661`", ",", 
   RowBox[{"-", "0.8658884413847003`"}], ",", 
   RowBox[{"-", "0.3037404725075612`"}], ",", 
   RowBox[{"-", "0.2569923949007094`"}], ",", 
   RowBox[{"-", "0.2287617493568392`"}], ",", "0.517725665736448`", ",", 
   RowBox[{"-", "0.5183056536084102`"}], ",", 
   RowBox[{"-", "0.7032145316902686`"}], ",", "0.5732331825060998`", ",", 
   "2.718718538934476`", ",", "2.6220697293036923`", ",", 
   "1.1428977218387908`", ",", "0.9813212053844406`", ",", 
   "0.035747184827299494`", ",", "0.9160676040333617`", ",", 
   "0.7962135394227354`", ",", 
   RowBox[{"-", "0.8744749616448275`"}], ",", 
   RowBox[{"-", "1.3569520145778582`"}], ",", 
   RowBox[{"-", "0.9046556095275864`"}], ",", 
   RowBox[{"-", "0.76107921202264`"}], ",", "0.38181756407350137`", ",", 
   RowBox[{"-", "1.1474107715335127`"}], ",", 
   RowBox[{"-", "1.0439811640757146`"}], ",", "0.480358025036599`", ",", 
   RowBox[{"-", "1.1168043899333295`"}], ",", "0.5683336816521072`", ",", 
   RowBox[{"-", "1.9394960655876319`"}], ",", 
   RowBox[{"-", "1.4428092708551457`"}], ",", 
   RowBox[{"-", "1.5324748201678253`"}], ",", 
   RowBox[{"-", "1.3120829379762071`"}], ",", 
   RowBox[{"-", "0.6746103550847172`"}], ",", "0.1536199805765327`", ",", 
   RowBox[{"-", "0.1503503928867203`"}], ",", 
   RowBox[{"-", "0.4683785641263952`"}], ",", 
   RowBox[{"-", "0.37918861643074964`"}], ",", 
   RowBox[{"-", "0.9166993973128239`"}], ",", "0.1942913417185969`", ",", 
   "2.2217716686391986`", ",", "2.2182584713779527`", ",", 
   RowBox[{"-", "0.7777115531431873`"}], ",", 
   RowBox[{"-", "0.5907786474663292`"}], ",", "0.41697450995109725`", ",", 
   "1.104996986766635`", ",", "1.5755524323967878`", ",", 
   RowBox[{"-", "0.37629928665707824`"}], ",", "2.1101736710590635`", ",", 
   RowBox[{"-", "1.2644826123543542`"}], ",", "2.02894698795341`", ",", 
   "1.0730130161256615`", ",", 
   RowBox[{"-", "0.3578545232345579`"}], ",", "2.3372477572674897`", ",", 
   RowBox[{"-", "0.47664493043857237`"}], ",", 
   RowBox[{"-", "0.017113852515853317`"}], ",", "0.31280556124471703`", ",", 
   RowBox[{"-", "0.024251091554862853`"}], ",", 
   RowBox[{"-", "0.08747128195762953`"}], ",", 
   RowBox[{"-", "0.7208071343361908`"}], ",", 
   RowBox[{"-", "1.7823980972462667`"}], ",", 
   RowBox[{"-", "1.2462624829838747`"}], ",", 
   RowBox[{"-", "0.9280645643998066`"}], ",", 
   RowBox[{"-", "1.2416071393792663`"}], ",", 
   RowBox[{"-", "1.3621099809288608`"}], ",", 
   RowBox[{"-", "0.7700673302150141`"}], ",", 
   RowBox[{"-", "0.991394723805764`"}], ",", 
   RowBox[{"-", "0.719380719848866`"}], ",", 
   RowBox[{"-", "1.5500318883622914`"}], ",", 
   RowBox[{"-", "2.4473127163250785`"}], ",", "2.0208726292531094`", ",", 
   "1.5143934720543828`", ",", "0.7071801826348912`", ",", 
   RowBox[{"-", "1.2899358921370694`"}], ",", 
   RowBox[{"-", "1.8003690794249188`"}], ",", "0.12188248662054219`", ",", 
   "1.0898503692925317`", ",", 
   RowBox[{"-", "0.8913804248041004`"}], ",", 
   RowBox[{"-", "0.3942487260929302`"}], ",", 
   RowBox[{"-", "0.7613049375297625`"}], ",", 
   RowBox[{"-", "0.6680833113943404`"}], ",", "0.7692957220906707`", ",", 
   RowBox[{"-", "0.8504021297948667`"}], ",", "0.07871426232216404`", ",", 
   "0.6163287961218521`", ",", 
   RowBox[{"-", "1.7848239829795847`"}], ",", "0.41878592277036536`", ",", 
   RowBox[{"-", "0.03132541834547756`"}], ",", "0.1779712975290173`", ",", 
   "1.467182838460434`", ",", 
   RowBox[{"-", "0.8818224007428168`"}], ",", 
   RowBox[{"-", "2.0465344428003536`"}], ",", "0.03998020318768898`", ",", 
   RowBox[{"-", "1.3386762810201274`"}], ",", 
   RowBox[{"-", "0.374052190990414`"}], ",", 
   RowBox[{"-", "1.4133224303208032`"}], ",", "1.2020551873933325`", ",", 
   "0.03157832064286899`", ",", 
   RowBox[{"-", "0.23362158443135628`"}], ",", "0.2831971100091279`", ",", 
   "0.7804278234928734`", ",", 
   RowBox[{"-", "0.8549229370763358`"}], ",", 
   RowBox[{"-", "0.20384475996378332`"}], ",", "0.280299710345559`", ",", 
   "0.49038534367584447`", ",", "0.16085596263600138`", ",", 
   RowBox[{"-", "1.167744276384753`"}], ",", 
   RowBox[{"-", "1.333570137055726`"}], ",", "1.4954046122666875`", ",", 
   "0.07964807951533302`", ",", "1.2772632138082967`", ",", 
   RowBox[{"-", "0.613039727428739`"}], ",", 
   RowBox[{"-", "0.7999765220982872`"}], ",", "0.781842198076376`", ",", 
   "1.1577116353405632`", ",", 
   RowBox[{"-", "0.2061889711943874`"}], ",", 
   RowBox[{"-", "1.009237524275694`"}], ",", 
   RowBox[{"-", "0.29284991135370114`"}], ",", "0.08899074642495274`", ",", 
   RowBox[{"-", "0.7234522312794652`"}], ",", "0.14028320635748281`", ",", 
   "0.9426807218438029`", ",", "1.3797291109562593`", ",", 
   "1.3707554853500605`", ",", "1.2046928012297846`", ",", 
   "1.781262934613954`", ",", "0.12381615500820196`", ",", 
   "0.0007886367923011228`", ",", 
   RowBox[{"-", "0.9052074507400029`"}], ",", "0.014237576577087616`", ",", 
   "0.8616368872144126`", ",", "0.31109067535380663`", ",", 
   RowBox[{"-", "0.5784998809633535`"}], ",", "0.04636462865602069`", ",", 
   "0.6607515600226193`", ",", "0.7849431270953877`", ",", 
   "0.6964733714635049`", ",", "0.295644054756969`", ",", 
   "1.4802128429516337`", ",", "0.6181248373172434`", ",", 
   RowBox[{"-", "0.14655188016692658`"}], ",", 
   RowBox[{"-", "0.1563603459449967`"}], ",", "0.21957011087402423`", ",", 
   "0.3746281691427342`", ",", "0.3876543087623302`", ",", 
   "1.0832465100527076`", ",", "0.07608017552269697`", ",", 
   "0.92574148371084`", ",", 
   RowBox[{"-", "0.30826191057217367`"}], ",", "0.3403809911951986`", ",", 
   RowBox[{"-", "0.003911460051986448`"}], ",", 
   RowBox[{"-", "0.05619212046201005`"}], ",", 
   RowBox[{"-", "0.375892012599618`"}], ",", 
   RowBox[{"-", "0.5062775593229534`"}], ",", "0.24742185144149223`", ",", 
   "0.6551422829945915`", ",", 
   RowBox[{"-", "0.9517514310684221`"}], ",", "0.722417919064307`", ",", 
   "1.955137570381361`", ",", "0.010132113993904651`", ",", 
   RowBox[{"-", "0.5920750312300577`"}], ",", 
   RowBox[{"-", "0.6625841550057985`"}], ",", "1.2081665122539014`", ",", 
   "1.3351130004759537`", ",", "0.9296525020854585`", ",", 
   RowBox[{"-", "0.5088594738702908`"}], ",", 
   RowBox[{"-", "0.4266662272188446`"}], ",", "1.1607281909085823`", ",", 
   "0.0734414891465702`", ",", 
   RowBox[{"-", "0.04963803742948762`"}], ",", "1.0393486428966883`", ",", 
   RowBox[{"-", "0.6244347862308555`"}], ",", 
   RowBox[{"-", "0.49309104345452814`"}], ",", 
   RowBox[{"-", "0.4728146645359902`"}], ",", 
   RowBox[{"-", "0.8599231237023366`"}], ",", 
   RowBox[{"-", "0.48619189096626125`"}], ",", 
   RowBox[{"-", "0.837978458674813`"}], ",", 
   RowBox[{"-", "0.8536608758659925`"}], ",", 
   RowBox[{"-", "0.5366586149027298`"}], ",", "0.5565404640741217`", ",", 
   RowBox[{"-", "1.5207292722526435`"}], ",", 
   RowBox[{"-", "0.904868093481448`"}], ",", 
   RowBox[{"-", "0.8887327710419233`"}], ",", 
   RowBox[{"-", "0.822616701567818`"}], ",", "0.10796687985429307`", ",", 
   RowBox[{"-", "0.7553586610378967`"}], ",", 
   RowBox[{"-", "0.015185789575327874`"}], ",", 
   RowBox[{"-", "0.6276696331937873`"}], ",", 
   RowBox[{"-", "0.3673277551512338`"}], ",", 
   RowBox[{"-", "0.34546628182483013`"}], ",", 
   RowBox[{"-", "0.27973110024392667`"}], ",", "0.3108439043748912`", ",", 
   "0.2168649125051322`", ",", 
   RowBox[{"-", "0.24689619016646686`"}], ",", 
   RowBox[{"-", "0.7678534558203596`"}], ",", 
   RowBox[{"-", "0.6173672885221609`"}], ",", "0.5038386433954195`", ",", 
   "0.23818010878580761`", ",", "0.1203936181061809`", ",", 
   RowBox[{"-", "0.8509051191863929`"}], ",", 
   RowBox[{"-", "1.4854496108303707`"}], ",", 
   RowBox[{"-", "1.5075729727682465`"}], ",", 
   RowBox[{"-", "0.9447613830605469`"}], ",", 
   RowBox[{"-", "1.0974459467855284`"}], ",", "0.01032299028991912`", ",", 
   "1.6312948023944311`", ",", "0.07193795452698268`", ",", 
   RowBox[{"-", "0.9406154461827665`"}], ",", 
   RowBox[{"-", "0.8354126695129526`"}], ",", 
   RowBox[{"-", "0.8871700941405223`"}], ",", 
   RowBox[{"-", "0.7096653541750916`"}], ",", "1.5989128424035683`", ",", 
   "0.9201085824953378`", ",", 
   RowBox[{"-", "0.8869738946218384`"}], ",", 
   RowBox[{"-", "1.023948612415943`"}], ",", 
   RowBox[{"-", "0.8413006854923121`"}], ",", 
   RowBox[{"-", "0.33260533394188996`"}], ",", 
   RowBox[{"-", "1.276254814827919`"}], ",", 
   RowBox[{"-", "0.7905486095612632`"}], ",", 
   RowBox[{"-", "0.7439202213383249`"}], ",", 
   RowBox[{"-", "0.41577617169418846`"}], ",", 
   RowBox[{"-", "1.9688326658266202`"}], ",", "0.06761591718696097`", ",", 
   RowBox[{"-", "0.9070092500655762`"}], ",", 
   RowBox[{"-", "0.9496196669301149`"}], ",", 
   RowBox[{"-", "2.1945680383717123`"}], ",", 
   RowBox[{"-", "1.1043234751700213`"}], ",", 
   RowBox[{"-", "0.8889712975577085`"}], ",", 
   RowBox[{"-", "0.13308133470519712`"}], ",", 
   RowBox[{"-", "0.5192300380975883`"}], ",", 
   RowBox[{"-", "1.0198718183627231`"}], ",", 
   RowBox[{"-", "1.0400879433552999`"}], ",", 
   RowBox[{"-", "1.255955664586815`"}], ",", 
   RowBox[{"-", "1.206250606261777`"}], ",", 
   RowBox[{"-", "1.1976892278639664`"}], ",", 
   RowBox[{"-", "0.5660343405853198`"}], ",", 
   RowBox[{"-", "0.5189483637151363`"}], ",", 
   RowBox[{"-", "0.7159065804065016`"}], ",", 
   RowBox[{"-", "0.2783103155708384`"}], ",", 
   RowBox[{"-", "1.0852240336914178`"}], ",", 
   RowBox[{"-", "1.0857598225773368`"}], ",", 
   RowBox[{"-", "0.4182836943224252`"}], ",", 
   RowBox[{"-", "0.6189584568406494`"}], ",", 
   RowBox[{"-", "0.43277384235676597`"}], ",", 
   RowBox[{"-", "0.4242244636761534`"}], ",", 
   RowBox[{"-", "0.3486319934021854`"}], ",", 
   RowBox[{"-", "0.8021059237705106`"}], ",", 
   RowBox[{"-", "0.963553318276344`"}], ",", "0.3479455959784581`", ",", 
   RowBox[{"-", "0.1444879281266331`"}], ",", 
   RowBox[{"-", "0.2836218420600818`"}], ",", 
   RowBox[{"-", "0.03269697603218108`"}], ",", "0.5244038128772204`", ",", 
   RowBox[{"-", "0.578654360489314`"}], ",", 
   RowBox[{"-", "0.6028406418320952`"}], ",", 
   RowBox[{"-", "0.48454073532914077`"}], ",", "0.08628608869507592`", ",", 
   RowBox[{"-", "1.8465894011746384`"}], ",", 
   RowBox[{"-", "1.5230910419169188`"}], ",", 
   RowBox[{"-", "0.8624623402648489`"}], ",", 
   RowBox[{"-", "0.09687914393847857`"}], ",", 
   RowBox[{"-", "0.646075222275284`"}], ",", 
   RowBox[{"-", "1.4182057443474625`"}], ",", "1.659051465894165`", ",", 
   RowBox[{"-", "0.4909876387667085`"}], ",", 
   RowBox[{"-", "0.3588280208687581`"}], ",", 
   RowBox[{"-", "1.4439643349690643`"}], ",", 
   RowBox[{"-", "0.2026718786576592`"}], ",", "0.878039993078863`", ",", 
   RowBox[{"-", "0.3182995484768425`"}], ",", 
   RowBox[{"-", "2.46964723322982`"}], ",", 
   RowBox[{"-", "0.09022750342538452`"}], ",", "1.176073271509987`", ",", 
   RowBox[{"-", "1.6294540991467368`"}], ",", 
   RowBox[{"-", "0.5892099509375681`"}], ",", "0.3321553081813552`", ",", 
   "1.9443039970129437`", ",", 
   RowBox[{"-", "0.9912665051171201`"}], ",", "0.1604815313396181`", ",", 
   "1.2095194310310964`", ",", 
   RowBox[{"-", "0.3091017910123568`"}], ",", 
   RowBox[{"-", "0.6481251455184722`"}], ",", 
   RowBox[{"-", "0.7383104499059449`"}], ",", 
   RowBox[{"-", "0.792777817717418`"}], ",", 
   RowBox[{"-", "0.40229352635988924`"}], ",", 
   RowBox[{"-", "1.1449461424445666`"}], ",", 
   RowBox[{"-", "0.48578054409218496`"}], ",", 
   RowBox[{"-", "0.4221890650197072`"}], ",", 
   RowBox[{"-", "0.8702469214183179`"}], ",", "1.058239522632559`", ",", 
   "0.9470411256564887`", ",", "0.7243532538736219`", ",", 
   "0.18309973403003874`", ",", "0.26424698588459183`", ",", 
   "2.1671702678592695`", ",", "0.854965271846273`", ",", 
   "0.26322252335772517`", ",", 
   RowBox[{"-", "0.23822893841031137`"}], ",", 
   RowBox[{"-", "0.5771357436223012`"}], ",", "2.3469332981867357`", ",", 
   "3.048201581351344`", ",", "2.6647907229888754`", ",", 
   "2.6547240431205714`", ",", "3.220705769928293`", ",", 
   RowBox[{"-", "0.4279014889374585`"}], ",", "0.2612265526255087`", ",", 
   "0.8909077755787632`", ",", 
   RowBox[{"-", "0.6602827430307121`"}], ",", 
   RowBox[{"-", "0.8212994534462897`"}], ",", "0.15890147400933327`", ",", 
   "0.019072552311040047`", ",", "0.6250449156381899`", ",", 
   RowBox[{"-", "0.27039059080919253`"}], ",", 
   RowBox[{"-", "0.4984834773131488`"}], ",", 
   RowBox[{"-", "0.3954047703426014`"}], ",", "0.5855041711057718`", ",", 
   "1.3439903283954002`", ",", 
   RowBox[{"-", "1.0958607379350505`"}], ",", "2.0812098711650266`", ",", 
   RowBox[{"-", "0.21531607338362632`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.710070634939345*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{
    RowBox[{"RandomSample", "[", 
     RowBox[{"trainingset", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "6", ",", "8"}], "}"}]}], "]"}], "]"}], "]"}], 
    "\[Rule]", 
    RowBox[{"Standardize", "[", 
     RowBox[{"trainingset", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "9"}], "]"}], "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.709938311722932*^9, 3.709938323528329*^9}, {
   3.7099383939406323`*^9, 3.709938396706202*^9}, {3.7099384786168337`*^9, 
   3.7099384822875795`*^9}, {3.7099385224777436`*^9, 3.7099385275187683`*^9}, 
   3.709947964195163*^9, 3.7099482788205357`*^9, 3.709955593590539*^9, 
   3.7099827434228754`*^9, {3.7100687063587704`*^9, 3.710068708791257*^9}, {
   3.7100690776840076`*^9, 3.710069083720215*^9}, {3.7100702714976845`*^9, 
   3.710070279173218*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{}, {{}, {
                  PointSize[0.125], 
                  GrayLevel[0.55], 
                  
                  PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                    4, 4.}}]}, {
                  GrayLevel[0.7], 
                  AbsoluteThickness[1.5], 
                  
                  BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                   5, 4}}]}}, {}}, Axes -> {False, False}, 
               AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
               BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {All, All}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of features: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{}, {{}, {
                  PointSize[0.125], 
                  GrayLevel[0.55], 
                  
                  PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                    4, 4.}}]}, {
                  GrayLevel[0.7], 
                  AbsoluteThickness[1.5], 
                  
                  BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                   5, 4}}]}}, {}}, Axes -> {False, False}, 
               AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
               BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {All, All}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of features: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["8073", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.709938338273324*^9, 3.7099384107090387`*^9, 
  3.7099384945470705`*^9, 3.7099479350071907`*^9, 3.709948259435571*^9, 
  3.7099482929864345`*^9, 3.7099827580537987`*^9, 3.71006181961294*^9, 
  3.710068723099117*^9, 3.710069097734017*^9, 3.710069456635771*^9, 
  3.710070102935983*^9, 3.7100702930839987`*^9, 3.7100706576268806`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "=", 
  RowBox[{"PredictorMeasurements", "[", 
   RowBox[{"p", ",", 
    RowBox[{
     RowBox[{"testset", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "6", ",", "8"}], "}"}]}], "]"}], "]"}], "\[Rule]", 
     RowBox[{"Standardize", "[", 
      RowBox[{"testset", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "9"}], "]"}], "]"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7099479414545097`*^9, 3.7099479532639265`*^9}, 
   3.709955600397936*^9, 3.709982751837556*^9, {3.710068715254549*^9, 
   3.7100687178810744`*^9}, {3.7100690888902545`*^9, 3.7100690960606823`*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorMeasurementsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  GrayLevel[0.6], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  Dashing[{Small, Small}], 
                  
                  LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                   11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                   GrayLevel[0.4], 
                   PointSize[0.09], 
                   AbsoluteThickness[1.6], 
                   
                   PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                    2.227816320451859, 2.584653237430766}, {3.043099335090081,
                     4.798822972025658}, {3.5728355469237116`, 
                    5.9507424155697155`}, {4.158566334344331, 
                    5.2097676165465385`}, {4.824808988689111, 
                    7.23346088027902}, {6.88649660338492, 
                    5.297021421229134}, {7.819072150835878, 
                    6.533166043611269}, {8.437306856915493, 
                    8.81724006216815}, {8.604907881861761, 
                    11.302704526196452`}}]}, {}}, {}}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1089", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  GrayLevel[0.6], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  Dashing[{Small, Small}], 
                  
                  LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                   11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                   GrayLevel[0.4], 
                   PointSize[0.09], 
                   AbsoluteThickness[1.6], 
                   
                   PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                    2.227816320451859, 2.584653237430766}, {3.043099335090081,
                     4.798822972025658}, {3.5728355469237116`, 
                    5.9507424155697155`}, {4.158566334344331, 
                    5.2097676165465385`}, {4.824808988689111, 
                    7.23346088027902}, {6.88649660338492, 
                    5.297021421229134}, {7.819072150835878, 
                    6.533166043611269}, {8.437306856915493, 
                    8.81724006216815}, {8.604907881861761, 
                    11.302704526196452`}}]}, {}}, {}}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1089", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"StandardDeviation: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["0.9993924883847486`", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorMeasurementsObject[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7099482935415487`*^9, 3.709982758532893*^9, 
  3.7100618201475816`*^9, 3.7100687235942163`*^9, 3.7100690994343567`*^9, 
  3.7100694572368903`*^9, 3.710070103440084*^9, 3.7100702935850997`*^9, 
  3.7100706581849933`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ComparisonPlot\>\"", "]"}]], "Input"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.004583333333333334], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1: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
i/akF2/x/Wwnddu0kzq+120eztQ8ONaM9YRMte7F8+i3c9In5q5fQn8dSp2s
nVs5jT5vTuhiKzn63GZJWc2NvHK8T4ejXn0dRp/pYd9norCJ58FVR0Wp4YXv
oy+kdIhqK6Lf6ynifXgpqwn4bDH3n0lKzE9kc67clUO4n7NZr/Kuc+8BHwpO
cMmpLIL2bIPkP4baliH+TVdmjTME73vvGb7mSDL01VlnxbWXG9F/h23fNDFM
LwSWZJMPi7laBO2Dy3afirzshLhyNhvjHCe+Fz/14SRZ3znMF/uoCnFXVzaw
TXxNW/F17G8sbjkz1oPvz/kypcxrvuD758gxU8uCI+jHax3WbDcKcX+XZYc+
vHuH+TJXfF7j1Yvnc6z06G+Cffj3Aic5qnjVLfB+H525Qp5vgn5WSj5F7D0/
7ofbPrJGiQXzIzUxrmZrkQPtB5Nu8xFxoI++49bXatZUCVzM1FOSTlkJ/VMC
jTa7t/H3ey+ihdkyoh599YKiu0ccvnc/TLW48+s7/j3E6OZ3yyVH5KluZbai
HlzfRvhupg49/n3GvRJlq35H/PuQM5n6SYRuWcBed3pu1tTi/dpQW7TQ28qF
eATllY7zeXPAEjNZ9v+J4veqKqklqyEZ3793ntrYmA/Cv7+on39S7n4b/b2w
lYzmtAzmd9/bkQ6+F5PgM1WuvI2svdgKLKtq7mlGiO+rGVzo3X4YjQBbB1sx
SJ/F9+BihvcsE03Rh3Y9tSqvT6zH968WWgr8ufhe98LH1iOjp9CnyQR8bw9I
WwZ+60/BOZ2F76sdGBi7LPjRV7ZP0K1dsC4FX2O+aOwmJf0H3zPvJvwofFWM
7+kvSSzYvIyE9rMqNx8pHKsDFsyeqNedQL/Ew8H17fJd9IE7Wg4HT/9G337r
rPid9+l4fpSULfa/ZaZgvpBbl0Vyg/egfeTrW7/mZLCe0WFuul/Y8w/0D0yu
e3jlAH4PM0qcvbYn8X7d6dkKWVnE39OR+4KW517ifU0SYkxuFunGelbuuyu8
m+jTnxWfi2gbQf+7KyMo8kIX8/uBbPV76bUsYNe6eP8qAjyPz7ZinNLW6Ktl
5xQ8VKkxXwr6VySOl7aiT0s89lSyDP1f3rWcpwoR6MNPEtaxvKbB+Fi8odOq
F/KQ6OI5rm58X/rhHeVBg0/4/p0rZiBebhV93eDywQ7zixP4HnWuNOxaCr7H
1soW5/3mg775pELgkcdPGmG8wYyUtjijYYi/6NLOUSQvgjjRfBaN9E/c/7SF
1ZkEslrgP8xbnYoiVcBM+0zPKDQVAld6LBPf1cX37UtJdR4+Wvg+P31kajNP
GP9+IcbqsxJpC65HaPvhuB0Jzs+v4Xz7Zz/6/teGbut1ueg/9x87H74jgL7b
L7hJWscO8+ssOyBV9Rjz53/ri9yTAmRDyToOiVdYX+FaLu8n18L38tKr+4b5
b5fC+FpaM+z6Nn+xflV5Pp5fAO9XZdiwtdwDHK+oVETS+i+eR+ffXTOraDyv
kqaHpGpr6BMmZN4EUAytgz94Yj5mrUI+Bfz5WMxp2Ur0sx/nubbP0aOPvP79
4lsOZXwPemC3kryWHn0363zMxSg29HEB3NM/NVPRn1zOCOnVFURfUeL5dFIk
DeshGT/jjmcd2wF+eC2x2jO6Br8XTDm8OzfwflqvMaYcisZ8XHvMMxWnSVD4
j2P9fzPqBuB6P9zkJ4npxP25GbfYBHytB771k1gvmxj9p1s7PdcbEtz/0dXG
m7dUkanOEhC9qUF/aLZMYDu2hz7PUfH15bZe5GEfH45TjugvhVREEg0JcT5i
lti9MQWsJyzGZ4kIh6IPjC+pn+KjRn8o+809R5MWueGxpld5JfpvohOcFGmC
6DMVh9VDbcXwPiie+ypltontmfPvZz9iRd90iyyPnYIG/ePb+20zDUfxfern
UOqh1IV6uD9GxfdeJpKjL338u09XfBnX/+c9lZlAJdZn9r9L63xegr7u1Rav
iOsU5oeOlck9LhnrLYzv9GM9xtFnG2ypXxl85gsczW6gmS2Kvthxq6XwJw36
+7C7LGmv9vA+sC9yvFbaQ19dti+btJMW3/empZ38SPMY/bb3WcV3jzo30L8x
361+yIq+rXrUZt24BPP35yePrk8d9qe0fBe5Xorvo3sI5kXTUydgPC/eEBED
XvR1FqztszohJPCeOXNz1E79JK5374IVzxG2Reh/rzvQXrVsG32fVfQEgQTm
7925K2oy07XQPlnG16rs6Q4wY06Fwh1PPF8zlR/KDhXxuD7lj4RMsTjfZmH2
wQxffL8eIzVMGsWJ+aNqs1cyJcXf+wWh+bivpfg9IK28XVR5He/fRJc8Qy3J
/3sv/fRHZvoinnfd0s2s0glsvyUtxyUpNo++xSbPQo0E/38I9nqqdoNX0Uc7
UPR/s1dDP5dhyPiGhQr9pcjL27kR4n2wP2Gb252Nr7AedI9TniJxdRziHhME
/71hwnqD2oO0QldyrC8eP7T8krEf73N4SZPZxgwhjBdG57DD40YGnCUnKL1o
RQKsUin//I4u8vpaSd+LKawnsey6fvjMiL/nH05vmhk6SmA9DjepFtlY0Xe2
y5wm/DOF78kbuQtIXrGOAB8R/S8y+l07tPc7HSahxV4DbDdbsL7OOwUcsN7P
7djzC/rnl1imLnu2ADcYiLtcnsP7GjBWo/wuAf/+Y+PZhbWhumUYj0x4uSR5
FO+H25F7iW5Be9BeMFtIhMO3teB/AMNVpoM=
          "]]}, {}}}, {}, {}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           GrayLevel[0.5], 
           Dashing[{Small, Small}], 
           Thickness[0.002]], 
          LineBox[CompressedData["
1:eJxFxXswE3AcAPANsxmbR5JTdulWEs3RnUMOvTzOtTMmcVOzmi7uOPpnp0hm
t7z6ozy3CzujNJpXmeYx5hxJs5Iyzh8s1yZbt26Xck71x76/Pz738eMUpHDt
MBjM5X/+P3xTkBfT56qynV9t+aqRoan919nsTvSj/Yi0B2I0R2SKVgvQxIV0
j/hMNOvsqWG6PXrfXeN4LY0MH5zkiCNWXeAabkvigXvO8NoVEuvTMSKMSZq+
xewmwPxQ/1otHQ8vHfkgc17EwQ5pvTQa2wF+UhY2R8fZw5aXjtlBtVi4f6HU
jUDDwOIyZkKTbG/cdiE3hiNS/YGdQorlTfgd+JxdotnN0woHF5T+yqBZ4HEB
PifaaoLZ4ZGTI94GWKBwEZxp24AXheTMKO4KbPGJauwq18ANisEAXv0ArMh9
36cuV8bYLp7x9NKsaeE84WHKi45V2HTI0EMP1MPtLdRNTasB9vYJj8iqNMOu
weMlUpkFZuQ+DmxhW+GfrdpN3+Qd+KNJlS8h7cJ7kkQac3QPVvu3lkynYmJt
n6gufKuXY+Hhrd++cQH28NZVXXpXpQN8nic8Td3AwbN1Rqf1DDxsHu14Jxki
wJf0Xg3SUCKsGmHujnU6wzqJMW4FS4KpFWHNkcVkmHRHpxUvu6KrjqcSm93g
oGVF7LdUd1hM4/nF23nALAFWycChKatVTBYBLal8Kiwko5/pJ7fFPugBEenN
j1D0nGN7iugGuiYr6Ls0B00ffCWQ30Zrs2cUUwXozyPbFPNd9EZR+NaFOrR0
dqKC3ojOOZpEyRChDfNZjPw2tPkkf6ipG91734XRLkcXLdUbe/rRVv5zX7UC
/VoXMjSvRPNClMlfxtCRDy8a1yfQu2vz/O0p9F/DyD+p
           "]]}, 
         Annotation[#, "Charting`Private`Tag$747630#1"]& ]}}, {}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, 
     PlotRange -> {{-3.961546921917627, 
      4.692312473896715}, {-3.961546921917627, 4.692312473896715}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"actual value\"", TraditionalForm], None}, {
        FormBox["\"predicted value\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-3.961546921917627, 
      4.692312473896715}, {-3.961546921917627, 4.692312473896715}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"predictions\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"perfect prediction line\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}], 
                    Thickness[0.018000000000000002`]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}], 
                    Thickness[0.018000000000000002`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7099482937986*^9, 3.709982758638915*^9, 
  3.710061763935313*^9, 3.7100618202659273`*^9, 3.710061861765993*^9, 
  3.7100687237202406`*^9, 3.7100694573779187`*^9, 3.710070103560108*^9, 
  3.7100702937111244`*^9, 3.710070658338023*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<StandardDeviation\>\"", "]"}]], "Input"],

Cell[BoxData["0.9993924883847486`"], "Output",
 CellChangeTimes->{3.709948293897621*^9, 3.7099827586749215`*^9, 
  3.710061768714899*^9, 3.7100618310333576`*^9, 3.7100687272949567`*^9, 
  3.7100694574419317`*^9, 3.7100701036061172`*^9, 3.7100703034910808`*^9, 
  3.710070658402036*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ResidualHistogram\>\"", "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.567], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.567], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-4., 0}, {-3.5, 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{69.79400000000004, 101.75647058823536`}, {
          137.51824734718394`, 139.78082610175454`}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-3., 0}, {-2.5, 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{132.0189411764706, 163.9814117647059}, {
          137.51824734718394`, 139.78082610175454`}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-2.5, 0}, {-2., 6}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{163.13141176470592`, 195.0938823529412}, {
          130.45535357433096`, 139.78082610175454`}}],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-2., 0}, {-1.5, 31}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{194.2438823529412, 226.20635294117648`}, {
          95.140884710066, 139.78082610175454`}}],
        StatusArea[#, 31]& ,
        TagBoxNote->"31"],
       StyleBox["31", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[31, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-1.5, 0}, {-1., 104}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{225.35635294117648`, 
          257.3188235294118}, {-7.977364373587591, 139.78082610175454`}}],
        StatusArea[#, 104]& ,
        TagBoxNote->"104"],
       StyleBox["104", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[104, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-1., 0}, {-0.5, 229}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{256.4688235294118, 
          288.4312941176471}, {-184.54970869491228`, 139.78082610175454`}}],
        StatusArea[#, 229]& ,
        TagBoxNote->"229"],
       StyleBox["229", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[229, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-0.5, 0}, {0., 228}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{287.5812941176471, 
          319.5437647058824}, {-183.1371299403417, 139.78082610175454`}}],
        StatusArea[#, 228]& ,
        TagBoxNote->"228"],
       StyleBox["228", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[228, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {0.5, 206}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{318.69376470588236`, 
          350.65623529411766`}, {-152.06039733978855`, 139.78082610175454`}}],
        StatusArea[#, 206]& ,
        TagBoxNote->"206"],
       StyleBox["206", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[206, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.5, 0}, {1., 114}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{349.80623529411764`, 
          381.76870588235295`}, {-22.103151919293566`, 139.78082610175454`}}],
        StatusArea[#, 114]& ,
        TagBoxNote->"114"],
       StyleBox["114", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[114, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1., 0}, {1.5, 89}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{380.9187058823529, 412.8811764705883}, {
          13.211316944971358`, 139.78082610175454`}}],
        StatusArea[#, 89]& ,
        TagBoxNote->"89"],
       StyleBox["89", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[89, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.5, 0}, {2., 39}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{412.03117647058826`, 443.99364705882357`}, {
          83.84025467350124, 139.78082610175454`}}],
        StatusArea[#, 39]& ,
        TagBoxNote->"39"],
       StyleBox["39", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[39, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2., 0}, {2.5, 21}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{443.14364705882355`, 475.10611764705885`}, {
          109.26667225577198`, 139.78082610175454`}}],
        StatusArea[#, 21]& ,
        TagBoxNote->"21"],
       StyleBox["21", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[21, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2.5, 0}, {3., 9}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{474.25611764705883`, 506.21858823529413`}, {
          126.21761731061916`, 139.78082610175454`}}],
        StatusArea[#, 9]& ,
        TagBoxNote->"9"],
       StyleBox["9", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[9, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3., 0}, {3.5, 5}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{505.3685882352941, 537.3310588235295}, {
          131.86793232890156`, 139.78082610175454`}}],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3.5, 0}, {4., 3}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{536.4810588235293, 568.4435294117648}, {
          134.69308983804277`, 139.78082610175454`}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4., 0}, {4.5, 3}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{567.5935294117646, 599.556}, {134.69308983804277`, 
          139.78082610175454`}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{-4.17, 0},
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"count\"", TraditionalForm], None}, {
     FormBox["\"actual value - predicted value\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-4., 4.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7099495571940966`*^9, 3.7099827596071095`*^9, 
  3.7100618419464912`*^9, 3.710069457524948*^9, 3.710070134357265*^9, 
  3.710070305374456*^9, 3.7100706584810514`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ResidualPlot\>\"", "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
eYftb39iQvsej/r80q+hCf3PwZ5H2X4Z329HNq4WJoynjQdpORLEl0I709Wo
qER+1K/nt6YpDxyNBa4Ycza3pl0AvvTdn4FIFPUS5cMMArRvUN+1kwl45hFQ
AVxROSrjdXcReM+Xg6t8O+rAPsLhdqe0SrGd+UlZdU0fzi984aWn2zTqh/tT
f3TykRRhfKAwujdXHvVOyrbG+sqnC6jvz4oTbnMnkAF9useMf7ga9Up16sq3
bB64n6FNxZBFEVror0+9pvbh6Q5gv5kjZvnvyIGr6nIOroehnr/cdPyLXTTq
R9nh05J8XLi/AoUw98ELqAf7c3PeCvBF/VlqqfbsxjC2Xw90DwlNRj1WzzWX
0ZUI9X/xRXnixNvpwE9D+ZZIyH/A86y+avXQfoj7K2rL8D5MgftTEnYp9U9C
vduM8WycZwzqxSn1b80O7ysD3gxspX18Pw/mP6Sp/jPIF983x6cFV1lmU1Dv
572uGm6P53vh/v3X+423MF6zx+mY2k487z1ZZ8RvMGL/Bxd5TP1qCmG9MxVs
+z/V4/5pjJJW5S+iveo5+jtO78bzlzou6mL1Ae13QO5yx4oDfg+e+1ppsW/l
wvy6Mh6uFXqV0J5KmW/buJmI3692DeaCW2iv67UeH0r6UL82k3jTykqD+vAZ
w43AbXwtGG95Ti9jz4rxkR/6qkWHylCvPG3j3yNjRAT+1aC6ymWitQbtXIHF
LIRO6C9hNw1Y3uvg+T8TquTTDkP9m0e7ilZLbAn0k6GLg7u+ficEfTKpNkku
Rhz1mlzx4SuZAsWgz5C13H9+R2oWmEblWkrhihuwMc8lrgsa2H8ywtY97NMI
zLfLcKo3aRD10l1EyVzUBXgf9tVLT8euQtRPZZ97TDwURv30sWv4wcSCNnh+
0rYVxmO0qA/ZUlCraoctoD7+4lNl8EfUzwfC7dIt7FE/PjNEUuiUif6zbfn7
p0/DBcAMjhe0B+zHYb0SfQplz1+5ML5H7dqY23g9sOnFC7HLWYkwflzjTHxW
112MTwyfDDayxvPal/iDRuMwvi/f7f12n7uM/neJqqn+KAPG11hYQ5/PXsXz
5ORX1wlrx3gYfRNBhHXSINiv/NjFuwPKqK8JFIm4hZNgu5pCkYB8Ad7PjRxU
v6HMjPeF49U4BBXDW4BZIliHQmdzgE+qP3/6NRnvN0eP5z+iO4b6LUH++k2b
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
466xwDlx9L8FgQ7FD1voz1yUxZxHh/C8hzyMuM50YX/6UUOXfNEp0FdOKYk7
mVBhPoQ7xxo/LZ5CPVojvrXt623U564m0gybHkD9sjvrLO/8tU54vkQ18mwz
G4wHSdgeDhEkwPPi0XPytpbDeMNH/wk3h8VG2J9E3I5ur3r0Z6Yv77W9pwhh
PsaxE/3ljmTAIlwTB12ttgFXB5BenLuFbFZtXUA/gfEkscCweVpqfJ9lN6iE
GAhxP7ejZt/586LeKUIo7PW+GvXCzTcFPy/QDOD98jei21f8m6B/R6ojA/ml
CmBl18yDXCdHgclbCV8J302E8butbRQCHqLebd92IdE5Gd8vg2C3l7Z5+PuP
MZawPK76OZhPzHPJ6W0z+od1aYll2T/+/febjTbNqLlsUF8j+P//+8P/Wob7
n/8k/rvX/8N/+A//8/j338t/+N/Df87zD/9P4t/62h/+59jzn21fuF/5h/8l
/M/2n7/7ef7wfzb//nv9P5X/2PMP/+E//K/iv1sP/J/Of87rD/8n69N/9/P9
Oa8//Ee//vfpx//s9v+qXv3P1rv/bvv+4f+39OS/e79/+L92fv9VPfXv1sP+
1frwP1tP/qNn/+H/Tvx/q7f+3XrNf3X//259+b/bef7hP/yH//vw362v/bP1
3H+3Pvzv1pv/0873D/+/xX+33vd368//afb8w/9evfo/XQ/9r+rX/2r7/9Gv
//Af/s/hf/X98L9bv/lX7+d/Z8//Xf9/9/n+3efxh//w/yT99T/9+f/wH/7D
/330zL/7ef672+efbc//0/5lwZbx4u8wv3RWwpRllSPW/yuZbPOyr1IDbqox
lEiowHqJAt/CU+8XYL1D4kx//+luApnf7PBqgij2PBWw2uMaw1Oh1MD0fl6i
9mGUwKLpD9U/k+D8JzZtW/bXYD7gDQpCM2ExrEeo7NRzJi8M8z1XXFR8VOCC
+bPtycsz2UUwH/pQ20B8xM9mnD84kIp/Xx/wQY3Q+vZUzIfTmuOzi6WrBuZf
eiUnqmdTi/YYOKkgJfID+g/4FnoqGWI+7IosD5nZGTKZ33pFDlk5GTEtKfCR
xjuV33L6Ib8pDf8orVF9A+Q/ZdvhmHuEdRhYs5jTfOdZzD+eT9n/tjsM81NX
i9pzd3pj/vEuhp3hLV71WP+Qgjfp3PwMsN6qEpP3C8x3zNsUI+uphPXlWteZ
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
F+vRFW7kq8tRYj03rhChBw9EXIGfidb1EpjjfAWENS/etXfB8+pcErB9qIH1
3AomGu5+9MB6m8etJevEZbPA/qaGN6aX6fH7/4IvIW2XAfIT6rd8GUuYz3rD
OIt6RyLWxzOunC+ZjsJ6l7VSh9to7bGe4b6BLfFbWUSgJ+e7tJBkn9+E9kRO
O7bIWqwPx2/2yDJCCfVmxqPmuZlRucCm1fPzCp7YrrT9KvVz3WxgLWFzVb0b
GcBLCzolSURYn9G83zipKg7tTR1arao/i3q5dOXj5xrVbcDfRE5HTt6wwPHM
cdRanajPF/ZU8s1k4Px6AcSpzURYv3EyNlwlQB798U6kj/7AzRXof4t5WlBY
FP356lz5LeeXOL8Tq5lNZyfW6xMb89Rfa6uB+eKIFqrJZ9H/PJYXJB69RT3+
rul3E14nfJ+Ep0pvhwT9AlYRYxNYKG8Hdptr0KZmz0V9cK6Gw4NzDfQUfQLf
dLUorA8W6ddmy74L69tlq7QK77VHjjfy6O7a6gIe591eKZRdCWyn/y0iLxT1
nPHdn7IZP6HeI6f6zmVDGvXU/uNOhbGruP4PvmhWC/cprKdY7MD6NBn12FTr
at2ti1lgr5erRpxXrEtQ3yy//PLcxhisp57w+p7+SiOwx4ERa0WPNmCHmn4P
5Qmst/fpaiH/cjbqVx1dp23SVVGfpPg6ea+cF+MlDOS3skk8fsJ+HKgjE7i/
YvzAyERva+0Unk+k2aHX2pfw/OIMIqhSh/9Sb9PB3kdvTwqs5yxxTyjs4BDw
FTMpmkN8s8Bva987/qRPwPptMw/09XIwnvAqsCJeyB35625uzwp21Edbi4bD
Y+tHgY2ZdIwfBWB9usunaWulVPH8E++ZZpzwwPUzlamWT5Jg/brH3T5nzbmK
YL24Kany5u2/oH3M3TvP0wjjE9vCOi0rvqSjvv/pw8QTwWrgj9s41dqVi6H/
LMe20IF7OJ73idT9Yb1I6H+wuqbjekccxg84+XfbZrYDb5PLzxQK6EG9X954
hiYC7Wd0mLeU4Cr6R9AvE54R4SZYb2B6WKDtJ8ZvOEjsXD1YsT6jgFrJesR5
fN6oTkX10Cv4vpwx7hqoP5YP42u5GK9uzPRBe9pemeOjIxjPsXwYRCP5WAn0
kvHRupWL7FhPcWa874NwFHJEV/G3I+ZYHzG2S15E+SPWp+t4ckMzcRvWezPl
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
p7fN6B/WpSWWZf/4999vNto0o+ayacj5X+SgbqM=
    "], {{{}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{1090, 1}], LineBox[{1091, 2}], LineBox[{1092, 3}], 
       LineBox[{1094, 5}], LineBox[{1100, 11}], LineBox[{1101, 12}], 
       LineBox[{1102, 13}], LineBox[{1108, 19}], LineBox[{1109, 20}], 
       LineBox[{1115, 26}], LineBox[{1116, 27}], LineBox[{1118, 29}], 
       LineBox[{1127, 38}], LineBox[{1128, 39}], LineBox[{1129, 40}], 
       LineBox[{1134, 45}], LineBox[{1139, 50}], LineBox[{1149, 60}], 
       LineBox[{1150, 61}], LineBox[{1151, 62}], LineBox[{1152, 63}], 
       LineBox[{1162, 73}], LineBox[{1165, 76}], LineBox[{1172, 83}], 
       LineBox[{1175, 86}], LineBox[{1177, 88}], LineBox[{1180, 91}], 
       LineBox[{1181, 92}], LineBox[{1185, 96}], LineBox[{1189, 100}], 
       LineBox[{1192, 103}], LineBox[{1201, 112}], LineBox[{1206, 117}], 
       LineBox[{1208, 119}], LineBox[{1209, 120}], LineBox[{1210, 121}], 
       LineBox[{1211, 122}], LineBox[{1212, 123}], LineBox[{1230, 141}], 
       LineBox[{1235, 146}], LineBox[{1236, 147}], LineBox[{1237, 148}], 
       LineBox[{1239, 150}], LineBox[{1240, 151}], LineBox[{1241, 152}], 
       LineBox[{1246, 157}], LineBox[{1260, 171}], LineBox[{1262, 173}], 
       LineBox[{1265, 176}], LineBox[{1266, 177}], LineBox[{1267, 178}], 
       LineBox[{1268, 179}], LineBox[{1272, 183}], LineBox[{1273, 184}], 
       LineBox[{1284, 195}], LineBox[{1293, 204}], LineBox[{1294, 205}], 
       LineBox[{1306, 217}], LineBox[{1307, 218}], LineBox[{1312, 223}], 
       LineBox[{1319, 230}], LineBox[{1325, 236}], LineBox[{1326, 237}], 
       LineBox[{1331, 242}], LineBox[{1334, 245}], LineBox[{1335, 246}], 
       LineBox[{1336, 247}], LineBox[{1337, 248}], LineBox[{1338, 249}], 
       LineBox[{1339, 250}], LineBox[{1340, 251}], LineBox[{1341, 252}], 
       LineBox[{1342, 253}], LineBox[{1345, 256}], LineBox[{1346, 257}], 
       LineBox[{1347, 258}], LineBox[{1348, 259}], LineBox[{1349, 260}], 
       LineBox[{1350, 261}], LineBox[{1351, 262}], LineBox[{1352, 263}], 
       LineBox[{1353, 264}], LineBox[{1356, 267}], LineBox[{1357, 268}], 
       LineBox[{1358, 269}], LineBox[{1359, 270}], LineBox[{1360, 271}], 
       LineBox[{1361, 272}], LineBox[{1362, 273}], LineBox[{1363, 274}], 
       LineBox[{1364, 275}], LineBox[{1365, 276}], LineBox[{1366, 277}], 
       LineBox[{1367, 278}], LineBox[{1368, 279}], LineBox[{1369, 280}], 
       LineBox[{1370, 281}], LineBox[{1371, 282}], LineBox[{1372, 283}], 
       LineBox[{1373, 284}], LineBox[{1375, 286}], LineBox[{1376, 287}], 
       LineBox[{1377, 288}], LineBox[{1378, 289}], LineBox[{1380, 291}], 
       LineBox[{1381, 292}], LineBox[{1382, 293}], LineBox[{1383, 294}], 
       LineBox[{1386, 297}], LineBox[{1387, 298}], LineBox[{1388, 299}], 
       LineBox[{1389, 300}], LineBox[{1391, 302}], LineBox[{1392, 303}], 
       LineBox[{1393, 304}], LineBox[{1394, 305}], LineBox[{1396, 307}], 
       LineBox[{1399, 310}], LineBox[{1400, 311}], LineBox[{1401, 312}], 
       LineBox[{1402, 313}], LineBox[{1403, 314}], LineBox[{1404, 315}], 
       LineBox[{1405, 316}], LineBox[{1406, 317}], LineBox[{1407, 318}], 
       LineBox[{1408, 319}], LineBox[{1409, 320}], LineBox[{1410, 321}], 
       LineBox[{1411, 322}], LineBox[{1412, 323}], LineBox[{1413, 324}], 
       LineBox[{1414, 325}], LineBox[{1415, 326}], LineBox[{1417, 328}], 
       LineBox[{1418, 329}], LineBox[{1419, 330}], LineBox[{1420, 331}], 
       LineBox[{1421, 332}], LineBox[{1422, 333}], LineBox[{1423, 334}], 
       LineBox[{1424, 335}], LineBox[{1425, 336}], LineBox[{1426, 337}], 
       LineBox[{1427, 338}], LineBox[{1428, 339}], LineBox[{1429, 340}], 
       LineBox[{1431, 342}], LineBox[{1432, 343}], LineBox[{1433, 344}], 
       LineBox[{1434, 345}], LineBox[{1435, 346}], LineBox[{1436, 347}], 
       LineBox[{1437, 348}], LineBox[{1438, 349}], LineBox[{1439, 350}], 
       LineBox[{1440, 351}], LineBox[{1441, 352}], LineBox[{1442, 353}], 
       LineBox[{1443, 354}], LineBox[{1444, 355}], LineBox[{1448, 359}], 
       LineBox[{1449, 360}], LineBox[{1450, 361}], LineBox[{1451, 362}], 
       LineBox[{1452, 363}], LineBox[{1463, 374}], LineBox[{1464, 375}], 
       LineBox[{1465, 376}], LineBox[{1466, 377}], LineBox[{1467, 378}], 
       LineBox[{1468, 379}], LineBox[{1469, 380}], LineBox[{1472, 383}], 
       LineBox[{1473, 384}], LineBox[{1474, 385}], LineBox[{1475, 386}], 
       LineBox[{1477, 388}], LineBox[{1478, 389}], LineBox[{1479, 390}], 
       LineBox[{1480, 391}], LineBox[{1481, 392}], LineBox[{1483, 394}], 
       LineBox[{1484, 395}], LineBox[{1485, 396}], LineBox[{1486, 397}], 
       LineBox[{1487, 398}], LineBox[{1488, 399}], LineBox[{1491, 402}], 
       LineBox[{1492, 403}], LineBox[{1493, 404}], LineBox[{1494, 405}], 
       LineBox[{1496, 407}], LineBox[{1500, 411}], LineBox[{1501, 412}], 
       LineBox[{1502, 413}], LineBox[{1503, 414}], LineBox[{1506, 417}], 
       LineBox[{1507, 418}], LineBox[{1508, 419}], LineBox[{1509, 420}], 
       LineBox[{1510, 421}], LineBox[{1511, 422}], LineBox[{1515, 426}], 
       LineBox[{1516, 427}], LineBox[{1517, 428}], LineBox[{1518, 429}], 
       LineBox[{1519, 430}], LineBox[{1520, 431}], LineBox[{1522, 433}], 
       LineBox[{1523, 434}], LineBox[{1526, 437}], LineBox[{1527, 438}], 
       LineBox[{1534, 445}], LineBox[{1536, 447}], LineBox[{1537, 448}], 
       LineBox[{1538, 449}], LineBox[{1540, 451}], LineBox[{1541, 452}], 
       LineBox[{1542, 453}], LineBox[{1543, 454}], LineBox[{1544, 455}], 
       LineBox[{1545, 456}], LineBox[{1546, 457}], LineBox[{1547, 458}], 
       LineBox[{1548, 459}], LineBox[{1549, 460}], LineBox[{1550, 461}], 
       LineBox[{1551, 462}], LineBox[{1552, 463}], LineBox[{1553, 464}], 
       LineBox[{1554, 465}], LineBox[{1555, 466}], LineBox[{1556, 467}], 
       LineBox[{1557, 468}], LineBox[{1558, 469}], LineBox[{1561, 472}], 
       LineBox[{1563, 474}], LineBox[{1564, 475}], LineBox[{1565, 476}], 
       LineBox[{1567, 478}], LineBox[{1571, 482}], LineBox[{1572, 483}], 
       LineBox[{1573, 484}], LineBox[{1574, 485}], LineBox[{1575, 486}], 
       LineBox[{1576, 487}], LineBox[{1577, 488}], LineBox[{1578, 489}], 
       LineBox[{1579, 490}], LineBox[{1580, 491}], LineBox[{1581, 492}], 
       LineBox[{1582, 493}], LineBox[{1583, 494}], LineBox[{1584, 495}], 
       LineBox[{1585, 496}], LineBox[{1590, 501}], LineBox[{1591, 502}], 
       LineBox[{1592, 503}], LineBox[{1593, 504}], LineBox[{1594, 505}], 
       LineBox[{1595, 506}], LineBox[{1596, 507}], LineBox[{1599, 510}], 
       LineBox[{1600, 511}], LineBox[{1601, 512}], LineBox[{1602, 513}], 
       LineBox[{1603, 514}], LineBox[{1608, 519}], LineBox[{1609, 520}], 
       LineBox[{1611, 522}], LineBox[{1612, 523}], LineBox[{1614, 525}], 
       LineBox[{1615, 526}], LineBox[{1619, 530}], LineBox[{1620, 531}], 
       LineBox[{1622, 533}], LineBox[{1624, 535}], LineBox[{1625, 536}], 
       LineBox[{1626, 537}], LineBox[{1627, 538}], LineBox[{1631, 542}], 
       LineBox[{1632, 543}], LineBox[{1633, 544}], LineBox[{1635, 546}], 
       LineBox[{1640, 551}], LineBox[{1642, 553}], LineBox[{1647, 558}], 
       LineBox[{1652, 563}], LineBox[{1654, 565}], LineBox[{1655, 566}], 
       LineBox[{1657, 568}], LineBox[{1660, 571}], LineBox[{1661, 572}], 
       LineBox[{1663, 574}], LineBox[{1665, 576}], LineBox[{1666, 577}], 
       LineBox[{1667, 578}], LineBox[{1668, 579}], LineBox[{1669, 580}], 
       LineBox[{1670, 581}], LineBox[{1678, 589}], LineBox[{1679, 590}], 
       LineBox[{1682, 593}], LineBox[{1683, 594}], LineBox[{1684, 595}], 
       LineBox[{1687, 598}], LineBox[{1688, 599}], LineBox[{1689, 600}], 
       LineBox[{1693, 604}], LineBox[{1695, 606}], LineBox[{1697, 608}], 
       LineBox[{1698, 609}], LineBox[{1699, 610}], LineBox[{1700, 611}], 
       LineBox[{1702, 613}], LineBox[{1703, 614}], LineBox[{1704, 615}], 
       LineBox[{1705, 616}], LineBox[{1706, 617}], LineBox[{1707, 618}], 
       LineBox[{1708, 619}], LineBox[{1709, 620}], LineBox[{1710, 621}], 
       LineBox[{1712, 623}], LineBox[{1713, 624}], LineBox[{1715, 626}], 
       LineBox[{1716, 627}], LineBox[{1717, 628}], LineBox[{1718, 629}], 
       LineBox[{1719, 630}], LineBox[{1721, 632}], LineBox[{1722, 633}], 
       LineBox[{1723, 634}], LineBox[{1724, 635}], LineBox[{1725, 636}], 
       LineBox[{1726, 637}], LineBox[{1727, 638}], LineBox[{1728, 639}], 
       LineBox[{1730, 641}], LineBox[{1731, 642}], LineBox[{1732, 643}], 
       LineBox[{1733, 644}], LineBox[{1734, 645}], LineBox[{1735, 646}], 
       LineBox[{1737, 648}], LineBox[{1742, 653}], LineBox[{1743, 654}], 
       LineBox[{1744, 655}], LineBox[{1745, 656}], LineBox[{1746, 657}], 
       LineBox[{1747, 658}], LineBox[{1748, 659}], LineBox[{1749, 660}], 
       LineBox[{1750, 661}], LineBox[{1752, 663}], LineBox[{1753, 664}], 
       LineBox[{1754, 665}], LineBox[{1755, 666}], LineBox[{1756, 667}], 
       LineBox[{1758, 669}], LineBox[{1759, 670}], LineBox[{1760, 671}], 
       LineBox[{1761, 672}], LineBox[{1762, 673}], LineBox[{1763, 674}], 
       LineBox[{1765, 676}], LineBox[{1766, 677}], LineBox[{1767, 678}], 
       LineBox[{1768, 679}], LineBox[{1769, 680}], LineBox[{1771, 682}], 
       LineBox[{1773, 684}], LineBox[{1774, 685}], LineBox[{1775, 686}], 
       LineBox[{1776, 687}], LineBox[{1777, 688}], LineBox[{1781, 692}], 
       LineBox[{1782, 693}], LineBox[{1783, 694}], LineBox[{1784, 695}], 
       LineBox[{1786, 697}], LineBox[{1791, 702}], LineBox[{1797, 708}], 
       LineBox[{1798, 709}], LineBox[{1799, 710}], LineBox[{1800, 711}], 
       LineBox[{1801, 712}], LineBox[{1802, 713}], LineBox[{1804, 715}], 
       LineBox[{1805, 716}], LineBox[{1806, 717}], LineBox[{1807, 718}], 
       LineBox[{1808, 719}], LineBox[{1809, 720}], LineBox[{1811, 722}], 
       LineBox[{1812, 723}], LineBox[{1813, 724}], LineBox[{1822, 733}], 
       LineBox[{1823, 734}], LineBox[{1825, 736}], LineBox[{1829, 740}], 
       LineBox[{1834, 745}], LineBox[{1837, 748}], LineBox[{1838, 749}], 
       LineBox[{1839, 750}], LineBox[{1840, 751}], LineBox[{1841, 752}], 
       LineBox[{1843, 754}], LineBox[{1844, 755}], LineBox[{1845, 756}], 
       LineBox[{1846, 757}], LineBox[{1847, 758}], LineBox[{1848, 759}], 
       LineBox[{1849, 760}], LineBox[{1850, 761}], LineBox[{1851, 762}], 
       LineBox[{1852, 763}], LineBox[{1853, 764}], LineBox[{1858, 769}], 
       LineBox[{1863, 774}], LineBox[{1864, 775}], LineBox[{1865, 776}], 
       LineBox[{1866, 777}], LineBox[{1868, 779}], LineBox[{1869, 780}], 
       LineBox[{1878, 789}], LineBox[{1879, 790}], LineBox[{1880, 791}], 
       LineBox[{1881, 792}], LineBox[{1883, 794}], LineBox[{1884, 795}], 
       LineBox[{1886, 797}], LineBox[{1888, 799}], LineBox[{1889, 800}], 
       LineBox[{1890, 801}], LineBox[{1891, 802}], LineBox[{1892, 803}], 
       LineBox[{1895, 806}], LineBox[{1896, 807}], LineBox[{1897, 808}], 
       LineBox[{1901, 812}], LineBox[{1902, 813}], LineBox[{1906, 817}], 
       LineBox[{1908, 819}], LineBox[{1911, 822}], LineBox[{1913, 824}], 
       LineBox[{1918, 829}], LineBox[{1919, 830}], LineBox[{1920, 831}], 
       LineBox[{1921, 832}], LineBox[{1922, 833}], LineBox[{1923, 834}], 
       LineBox[{1924, 835}], LineBox[{1925, 836}], LineBox[{1926, 837}], 
       LineBox[{1927, 838}], LineBox[{1928, 839}], LineBox[{1932, 843}], 
       LineBox[{1933, 844}], LineBox[{1936, 847}], LineBox[{1937, 848}], 
       LineBox[{1938, 849}], LineBox[{1939, 850}], LineBox[{1941, 852}], 
       LineBox[{1944, 855}], LineBox[{1949, 860}], LineBox[{1950, 861}], 
       LineBox[{1952, 863}], LineBox[{1953, 864}], LineBox[{1954, 865}], 
       LineBox[{1957, 868}], LineBox[{1960, 871}], LineBox[{1961, 872}], 
       LineBox[{1965, 876}], LineBox[{1966, 877}], LineBox[{1970, 881}], 
       LineBox[{1971, 882}], LineBox[{1974, 885}], LineBox[{1975, 886}], 
       LineBox[{1976, 887}], LineBox[{1978, 889}], LineBox[{1987, 898}], 
       LineBox[{1991, 902}], LineBox[{1999, 910}], LineBox[{2000, 911}], 
       LineBox[{2007, 918}], LineBox[{2010, 921}], LineBox[{2011, 922}], 
       LineBox[{2012, 923}], LineBox[{2015, 926}], LineBox[{2019, 930}], 
       LineBox[{2020, 931}], LineBox[{2024, 935}], LineBox[{2025, 936}], 
       LineBox[{2030, 941}], LineBox[{2031, 942}], LineBox[{2032, 943}], 
       LineBox[{2033, 944}], LineBox[{2034, 945}], LineBox[{2035, 946}], 
       LineBox[{2036, 947}], LineBox[{2037, 948}], LineBox[{2039, 950}], 
       LineBox[{2040, 951}], LineBox[{2041, 952}], LineBox[{2042, 953}], 
       LineBox[{2044, 955}], LineBox[{2046, 957}], LineBox[{2047, 958}], 
       LineBox[{2048, 959}], LineBox[{2049, 960}], LineBox[{2052, 963}], 
       LineBox[{2053, 964}], LineBox[{2054, 965}], LineBox[{2058, 969}], 
       LineBox[{2059, 970}], LineBox[{2060, 971}], LineBox[{2061, 972}], 
       LineBox[{2062, 973}], LineBox[{2066, 977}], LineBox[{2067, 978}], 
       LineBox[{2068, 979}], LineBox[{2069, 980}], LineBox[{2072, 983}], 
       LineBox[{2073, 984}], LineBox[{2074, 985}], LineBox[{2075, 986}], 
       LineBox[{2076, 987}], LineBox[{2077, 988}], LineBox[{2078, 989}], 
       LineBox[{2079, 990}], LineBox[{2080, 991}], LineBox[{2082, 993}], 
       LineBox[{2083, 994}], LineBox[{2084, 995}], LineBox[{2085, 996}], 
       LineBox[{2086, 997}], LineBox[{2087, 998}], LineBox[{2088, 999}], 
       LineBox[{2089, 1000}], LineBox[{2090, 1001}], LineBox[{2091, 1002}], 
       LineBox[{2092, 1003}], LineBox[{2093, 1004}], LineBox[{2094, 1005}], 
       LineBox[{2095, 1006}], LineBox[{2096, 1007}], LineBox[{2097, 1008}], 
       LineBox[{2098, 1009}], LineBox[{2099, 1010}], LineBox[{2100, 1011}], 
       LineBox[{2101, 1012}], LineBox[{2102, 1013}], LineBox[{2103, 1014}], 
       LineBox[{2104, 1015}], LineBox[{2105, 1016}], LineBox[{2106, 1017}], 
       LineBox[{2108, 1019}], LineBox[{2109, 1020}], LineBox[{2110, 1021}], 
       LineBox[{2112, 1023}], LineBox[{2113, 1024}], LineBox[{2114, 1025}], 
       LineBox[{2115, 1026}], LineBox[{2116, 1027}], LineBox[{2117, 1028}], 
       LineBox[{2118, 1029}], LineBox[{2119, 1030}], LineBox[{2120, 1031}], 
       LineBox[{2121, 1032}], LineBox[{2123, 1034}], LineBox[{2124, 1035}], 
       LineBox[{2125, 1036}], LineBox[{2126, 1037}], LineBox[{2128, 1039}], 
       LineBox[{2129, 1040}], LineBox[{2130, 1041}], LineBox[{2132, 1043}], 
       LineBox[{2133, 1044}], LineBox[{2136, 1047}], LineBox[{2139, 1050}], 
       LineBox[{2140, 1051}], LineBox[{2141, 1052}], LineBox[{2142, 1053}], 
       LineBox[{2143, 1054}], LineBox[{2144, 1055}], LineBox[{2145, 1056}], 
       LineBox[{2146, 1057}], LineBox[{2147, 1058}], LineBox[{2156, 1067}], 
       LineBox[{2157, 1068}], LineBox[{2163, 1074}], LineBox[{2166, 1077}], 
       LineBox[{2167, 1078}], LineBox[{2171, 1082}], LineBox[{2172, 1083}], 
       LineBox[{2173, 1084}], LineBox[{2176, 1087}], LineBox[{2178, 1089}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{1093, 4}], LineBox[{1095, 6}], LineBox[{1096, 7}], 
       LineBox[{1097, 8}], LineBox[{1098, 9}], LineBox[{1099, 10}], 
       LineBox[{1103, 14}], LineBox[{1104, 15}], LineBox[{1105, 16}], 
       LineBox[{1106, 17}], LineBox[{1107, 18}], LineBox[{1110, 21}], 
       LineBox[{1111, 22}], LineBox[{1112, 23}], LineBox[{1113, 24}], 
       LineBox[{1114, 25}], LineBox[{1117, 28}], LineBox[{1119, 30}], 
       LineBox[{1120, 31}], LineBox[{1121, 32}], LineBox[{1122, 33}], 
       LineBox[{1123, 34}], LineBox[{1124, 35}], LineBox[{1125, 36}], 
       LineBox[{1126, 37}], LineBox[{1130, 41}], LineBox[{1131, 42}], 
       LineBox[{1132, 43}], LineBox[{1133, 44}], LineBox[{1135, 46}], 
       LineBox[{1136, 47}], LineBox[{1137, 48}], LineBox[{1138, 49}], 
       LineBox[{1140, 51}], LineBox[{1141, 52}], LineBox[{1142, 53}], 
       LineBox[{1143, 54}], LineBox[{1144, 55}], LineBox[{1145, 56}], 
       LineBox[{1146, 57}], LineBox[{1147, 58}], LineBox[{1148, 59}], 
       LineBox[{1153, 64}], LineBox[{1154, 65}], LineBox[{1155, 66}], 
       LineBox[{1156, 67}], LineBox[{1157, 68}], LineBox[{1158, 69}], 
       LineBox[{1159, 70}], LineBox[{1160, 71}], LineBox[{1161, 72}], 
       LineBox[{1163, 74}], LineBox[{1164, 75}], LineBox[{1166, 77}], 
       LineBox[{1167, 78}], LineBox[{1168, 79}], LineBox[{1169, 80}], 
       LineBox[{1170, 81}], LineBox[{1171, 82}], LineBox[{1173, 84}], 
       LineBox[{1174, 85}], LineBox[{1176, 87}], LineBox[{1178, 89}], 
       LineBox[{1179, 90}], LineBox[{1182, 93}], LineBox[{1183, 94}], 
       LineBox[{1184, 95}], LineBox[{1186, 97}], LineBox[{1187, 98}], 
       LineBox[{1188, 99}], LineBox[{1190, 101}], LineBox[{1191, 102}], 
       LineBox[{1193, 104}], LineBox[{1194, 105}], LineBox[{1195, 106}], 
       LineBox[{1196, 107}], LineBox[{1197, 108}], LineBox[{1198, 109}], 
       LineBox[{1199, 110}], LineBox[{1200, 111}], LineBox[{1202, 113}], 
       LineBox[{1203, 114}], LineBox[{1204, 115}], LineBox[{1205, 116}], 
       LineBox[{1207, 118}], LineBox[{1213, 124}], LineBox[{1214, 125}], 
       LineBox[{1215, 126}], LineBox[{1216, 127}], LineBox[{1217, 128}], 
       LineBox[{1218, 129}], LineBox[{1219, 130}], LineBox[{1220, 131}], 
       LineBox[{1221, 132}], LineBox[{1222, 133}], LineBox[{1223, 134}], 
       LineBox[{1224, 135}], LineBox[{1225, 136}], LineBox[{1226, 137}], 
       LineBox[{1227, 138}], LineBox[{1228, 139}], LineBox[{1229, 140}], 
       LineBox[{1231, 142}], LineBox[{1232, 143}], LineBox[{1233, 144}], 
       LineBox[{1234, 145}], LineBox[{1238, 149}], LineBox[{1242, 153}], 
       LineBox[{1243, 154}], LineBox[{1244, 155}], LineBox[{1245, 156}], 
       LineBox[{1247, 158}], LineBox[{1248, 159}], LineBox[{1249, 160}], 
       LineBox[{1250, 161}], LineBox[{1251, 162}], LineBox[{1252, 163}], 
       LineBox[{1253, 164}], LineBox[{1254, 165}], LineBox[{1255, 166}], 
       LineBox[{1256, 167}], LineBox[{1257, 168}], LineBox[{1258, 169}], 
       LineBox[{1259, 170}], LineBox[{1261, 172}], LineBox[{1263, 174}], 
       LineBox[{1264, 175}], LineBox[{1269, 180}], LineBox[{1270, 181}], 
       LineBox[{1271, 182}], LineBox[{1274, 185}], LineBox[{1275, 186}], 
       LineBox[{1276, 187}], LineBox[{1277, 188}], LineBox[{1278, 189}], 
       LineBox[{1279, 190}], LineBox[{1280, 191}], LineBox[{1281, 192}], 
       LineBox[{1282, 193}], LineBox[{1283, 194}], LineBox[{1285, 196}], 
       LineBox[{1286, 197}], LineBox[{1287, 198}], LineBox[{1288, 199}], 
       LineBox[{1289, 200}], LineBox[{1290, 201}], LineBox[{1291, 202}], 
       LineBox[{1292, 203}], LineBox[{1295, 206}], LineBox[{1296, 207}], 
       LineBox[{1297, 208}], LineBox[{1298, 209}], LineBox[{1299, 210}], 
       LineBox[{1300, 211}], LineBox[{1301, 212}], LineBox[{1302, 213}], 
       LineBox[{1303, 214}], LineBox[{1304, 215}], LineBox[{1305, 216}], 
       LineBox[{1308, 219}], LineBox[{1309, 220}], LineBox[{1310, 221}], 
       LineBox[{1311, 222}], LineBox[{1313, 224}], LineBox[{1314, 225}], 
       LineBox[{1315, 226}], LineBox[{1316, 227}], LineBox[{1317, 228}], 
       LineBox[{1318, 229}], LineBox[{1320, 231}], LineBox[{1321, 232}], 
       LineBox[{1322, 233}], LineBox[{1323, 234}], LineBox[{1324, 235}], 
       LineBox[{1327, 238}], LineBox[{1328, 239}], LineBox[{1329, 240}], 
       LineBox[{1330, 241}], LineBox[{1332, 243}], LineBox[{1333, 244}], 
       LineBox[{1343, 254}], LineBox[{1344, 255}], LineBox[{1354, 265}], 
       LineBox[{1355, 266}], LineBox[{1374, 285}], LineBox[{1379, 290}], 
       LineBox[{1384, 295}], LineBox[{1385, 296}], LineBox[{1390, 301}], 
       LineBox[{1395, 306}], LineBox[{1397, 308}], LineBox[{1398, 309}], 
       LineBox[{1416, 327}], LineBox[{1430, 341}], LineBox[{1445, 356}], 
       LineBox[{1446, 357}], LineBox[{1447, 358}], LineBox[{1453, 364}], 
       LineBox[{1454, 365}], LineBox[{1455, 366}], LineBox[{1456, 367}], 
       LineBox[{1457, 368}], LineBox[{1458, 369}], LineBox[{1459, 370}], 
       LineBox[{1460, 371}], LineBox[{1461, 372}], LineBox[{1462, 373}], 
       LineBox[{1470, 381}], LineBox[{1471, 382}], LineBox[{1476, 387}], 
       LineBox[{1482, 393}], LineBox[{1489, 400}], LineBox[{1490, 401}], 
       LineBox[{1495, 406}], LineBox[{1497, 408}], LineBox[{1498, 409}], 
       LineBox[{1499, 410}], LineBox[{1504, 415}], LineBox[{1505, 416}], 
       LineBox[{1512, 423}], LineBox[{1513, 424}], LineBox[{1514, 425}], 
       LineBox[{1521, 432}], LineBox[{1524, 435}], LineBox[{1525, 436}], 
       LineBox[{1528, 439}], LineBox[{1529, 440}], LineBox[{1530, 441}], 
       LineBox[{1531, 442}], LineBox[{1532, 443}], LineBox[{1533, 444}], 
       LineBox[{1535, 446}], LineBox[{1539, 450}], LineBox[{1559, 470}], 
       LineBox[{1560, 471}], LineBox[{1562, 473}], LineBox[{1566, 477}], 
       LineBox[{1568, 479}], LineBox[{1569, 480}], LineBox[{1570, 481}], 
       LineBox[{1586, 497}], LineBox[{1587, 498}], LineBox[{1588, 499}], 
       LineBox[{1589, 500}], LineBox[{1597, 508}], LineBox[{1598, 509}], 
       LineBox[{1604, 515}], LineBox[{1605, 516}], LineBox[{1606, 517}], 
       LineBox[{1607, 518}], LineBox[{1610, 521}], LineBox[{1613, 524}], 
       LineBox[{1616, 527}], LineBox[{1617, 528}], LineBox[{1618, 529}], 
       LineBox[{1621, 532}], LineBox[{1623, 534}], LineBox[{1628, 539}], 
       LineBox[{1629, 540}], LineBox[{1630, 541}], LineBox[{1634, 545}], 
       LineBox[{1636, 547}], LineBox[{1637, 548}], LineBox[{1638, 549}], 
       LineBox[{1639, 550}], LineBox[{1641, 552}], LineBox[{1643, 554}], 
       LineBox[{1644, 555}], LineBox[{1645, 556}], LineBox[{1646, 557}], 
       LineBox[{1648, 559}], LineBox[{1649, 560}], LineBox[{1650, 561}], 
       LineBox[{1651, 562}], LineBox[{1653, 564}], LineBox[{1656, 567}], 
       LineBox[{1658, 569}], LineBox[{1659, 570}], LineBox[{1662, 573}], 
       LineBox[{1664, 575}], LineBox[{1671, 582}], LineBox[{1672, 583}], 
       LineBox[{1673, 584}], LineBox[{1674, 585}], LineBox[{1675, 586}], 
       LineBox[{1676, 587}], LineBox[{1677, 588}], LineBox[{1680, 591}], 
       LineBox[{1681, 592}], LineBox[{1685, 596}], LineBox[{1686, 597}], 
       LineBox[{1690, 601}], LineBox[{1691, 602}], LineBox[{1692, 603}], 
       LineBox[{1694, 605}], LineBox[{1696, 607}], LineBox[{1701, 612}], 
       LineBox[{1711, 622}], LineBox[{1714, 625}], LineBox[{1720, 631}], 
       LineBox[{1729, 640}], LineBox[{1736, 647}], LineBox[{1738, 649}], 
       LineBox[{1739, 650}], LineBox[{1740, 651}], LineBox[{1741, 652}], 
       LineBox[{1751, 662}], LineBox[{1757, 668}], LineBox[{1764, 675}], 
       LineBox[{1770, 681}], LineBox[{1772, 683}], LineBox[{1778, 689}], 
       LineBox[{1779, 690}], LineBox[{1780, 691}], LineBox[{1785, 696}], 
       LineBox[{1787, 698}], LineBox[{1788, 699}], LineBox[{1789, 700}], 
       LineBox[{1790, 701}], LineBox[{1792, 703}], LineBox[{1793, 704}], 
       LineBox[{1794, 705}], LineBox[{1795, 706}], LineBox[{1796, 707}], 
       LineBox[{1803, 714}], LineBox[{1810, 721}], LineBox[{1814, 725}], 
       LineBox[{1815, 726}], LineBox[{1816, 727}], LineBox[{1817, 728}], 
       LineBox[{1818, 729}], LineBox[{1819, 730}], LineBox[{1820, 731}], 
       LineBox[{1821, 732}], LineBox[{1824, 735}], LineBox[{1826, 737}], 
       LineBox[{1827, 738}], LineBox[{1828, 739}], LineBox[{1830, 741}], 
       LineBox[{1831, 742}], LineBox[{1832, 743}], LineBox[{1833, 744}], 
       LineBox[{1835, 746}], LineBox[{1836, 747}], LineBox[{1842, 753}], 
       LineBox[{1854, 765}], LineBox[{1855, 766}], LineBox[{1856, 767}], 
       LineBox[{1857, 768}], LineBox[{1859, 770}], LineBox[{1860, 771}], 
       LineBox[{1861, 772}], LineBox[{1862, 773}], LineBox[{1867, 778}], 
       LineBox[{1870, 781}], LineBox[{1871, 782}], LineBox[{1872, 783}], 
       LineBox[{1873, 784}], LineBox[{1874, 785}], LineBox[{1875, 786}], 
       LineBox[{1876, 787}], LineBox[{1877, 788}], LineBox[{1882, 793}], 
       LineBox[{1885, 796}], LineBox[{1887, 798}], LineBox[{1893, 804}], 
       LineBox[{1894, 805}], LineBox[{1898, 809}], LineBox[{1899, 810}], 
       LineBox[{1900, 811}], LineBox[{1903, 814}], LineBox[{1904, 815}], 
       LineBox[{1905, 816}], LineBox[{1907, 818}], LineBox[{1909, 820}], 
       LineBox[{1910, 821}], LineBox[{1912, 823}], LineBox[{1914, 825}], 
       LineBox[{1915, 826}], LineBox[{1916, 827}], LineBox[{1917, 828}], 
       LineBox[{1929, 840}], LineBox[{1930, 841}], LineBox[{1931, 842}], 
       LineBox[{1934, 845}], LineBox[{1935, 846}], LineBox[{1940, 851}], 
       LineBox[{1942, 853}], LineBox[{1943, 854}], LineBox[{1945, 856}], 
       LineBox[{1946, 857}], LineBox[{1947, 858}], LineBox[{1948, 859}], 
       LineBox[{1951, 862}], LineBox[{1955, 866}], LineBox[{1956, 867}], 
       LineBox[{1958, 869}], LineBox[{1959, 870}], LineBox[{1962, 873}], 
       LineBox[{1963, 874}], LineBox[{1964, 875}], LineBox[{1967, 878}], 
       LineBox[{1968, 879}], LineBox[{1969, 880}], LineBox[{1972, 883}], 
       LineBox[{1973, 884}], LineBox[{1977, 888}], LineBox[{1979, 890}], 
       LineBox[{1980, 891}], LineBox[{1981, 892}], LineBox[{1982, 893}], 
       LineBox[{1983, 894}], LineBox[{1984, 895}], LineBox[{1985, 896}], 
       LineBox[{1986, 897}], LineBox[{1988, 899}], LineBox[{1989, 900}], 
       LineBox[{1990, 901}], LineBox[{1992, 903}], LineBox[{1993, 904}], 
       LineBox[{1994, 905}], LineBox[{1995, 906}], LineBox[{1996, 907}], 
       LineBox[{1997, 908}], LineBox[{1998, 909}], LineBox[{2001, 912}], 
       LineBox[{2002, 913}], LineBox[{2003, 914}], LineBox[{2004, 915}], 
       LineBox[{2005, 916}], LineBox[{2006, 917}], LineBox[{2008, 919}], 
       LineBox[{2009, 920}], LineBox[{2013, 924}], LineBox[{2014, 925}], 
       LineBox[{2016, 927}], LineBox[{2017, 928}], LineBox[{2018, 929}], 
       LineBox[{2021, 932}], LineBox[{2022, 933}], LineBox[{2023, 934}], 
       LineBox[{2026, 937}], LineBox[{2027, 938}], LineBox[{2028, 939}], 
       LineBox[{2029, 940}], LineBox[{2038, 949}], LineBox[{2043, 954}], 
       LineBox[{2045, 956}], LineBox[{2050, 961}], LineBox[{2051, 962}], 
       LineBox[{2055, 966}], LineBox[{2056, 967}], LineBox[{2057, 968}], 
       LineBox[{2063, 974}], LineBox[{2064, 975}], LineBox[{2065, 976}], 
       LineBox[{2070, 981}], LineBox[{2071, 982}], LineBox[{2081, 992}], 
       LineBox[{2107, 1018}], LineBox[{2111, 1022}], LineBox[{2122, 1033}], 
       LineBox[{2127, 1038}], LineBox[{2131, 1042}], LineBox[{2134, 1045}], 
       LineBox[{2135, 1046}], LineBox[{2137, 1048}], LineBox[{2138, 1049}], 
       LineBox[{2148, 1059}], LineBox[{2149, 1060}], LineBox[{2150, 1061}], 
       LineBox[{2151, 1062}], LineBox[{2152, 1063}], LineBox[{2153, 1064}], 
       LineBox[{2154, 1065}], LineBox[{2155, 1066}], LineBox[{2158, 1069}], 
       LineBox[{2159, 1070}], LineBox[{2160, 1071}], LineBox[{2161, 1072}], 
       LineBox[{2162, 1073}], LineBox[{2164, 1075}], LineBox[{2165, 1076}], 
       LineBox[{2168, 1079}], LineBox[{2169, 1080}], LineBox[{2170, 1081}], 
       LineBox[{2174, 1085}], LineBox[{2175, 1086}], 
       LineBox[{2177, 1088}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.004583333333333334], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwN00OiGAoCALA3tW3btm3btm392rZt27Zt27Y7WeQISdiofaV2/wsICCgY
JCBgUIiAgMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7z
mM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exhL/vY
zwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu97jP
Ax7yiMc84SnPeM4LXvKK17zhLe94zwc+8onPfOEr3/jOD37yi9/84S//CAgZ
EPA/AhGYIAQlGMEJQUhCEZowhCUc4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJ
QEISkZgkJCUZyUlBSlKRmjSkJR3pyUBGMpGZLGQlG9nJQU5ykZs85CUf+SlA
QQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa1alBTWpRmzrUpR71aUBD
GtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50pRvd6UFPetGbPvSlH//RnwEM
ZBCDGcJQhjGcEYxkFKMZw1jGMZ4JTGQSk5nCVKYxnRnMZBazmcNc5jGfBSxk
EYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb2cJWtrGdHexkF7vZw172sZ8DHOQQ
hznCUY5xnBOc5BSnOcNZznGeC1zkEpe5wlWucZ0b3OQWt7nDXe5xnwc85BGP
ecJTnvGcF7zkFa95w1ve8Z4PfOQTn/nCV77xnR/85Be/+cNf/hEQyn8CEZgg
BCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4xCUe8UlAQhKRmCQk
JRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzkJR/5KUBBClGYIhSl
GMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSlHvVpQEMa0ZgmNKUZ
zWlBS1rRmja0pR3t6UBHOtGZLnSlG93pQU960Zs+9KUf/9GfAQxkEIMZwlCG
MZwRjGQUoxnDWMYxnglMZBKTmcJUpjGdGcxkFrOZw1zmMZ8FLGQRi1nCUpax
nBWsZBWrWcNa1rGeDWxkE5vZwla2sZ0d7GQXu9nDXvaxnwMc5BCHOcJRjnGc
E5zkFKc5w1nOcZ4LXOQSl7nCVa5xnRvc5Ba3ucNd7nGfBzzkEY95wlOe8ZwX
vOQVr3nDW97xng985BOf+cJXvvGdH/zkF7/5w1/+ERDafwIRmCAEJRjBCUFI
QhGaMIQlHOGJQEQiEZkoRCUa0YlBTGIRmzjEJR7xSUBCEpGYJCQlGclJQUpS
kZo0pCUd6clARjKRmSxkJRvZyUFOcpGbPOQlH/kpQEEKUZgiFKUYxSlBSUpR
mjKUpRzlqUBFKlGZKlSlGtWpQU1qUZs61KUe9WlAQxrRmCY0pRnNaUFLWtGa
NrSlHe3pQEc60ZkudKUb3elBT3rRmz70pR//0Z8BDGQQgxnCUIYxnBGMZBSj
GcNYxjGeCUxkEpOZwlSmMZ0ZzGQWs5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZ
w1rWsZ4NbGQTm9nCVraxnR3sZBe72cNe9rGfAxzkEIc5wlGOcZwTnOQUpznD
Wc5xngtc5BKXucJVrnGdG9zkFre5w13ucZ8HPOQRj3nCU57xnBe85BWvecNb
3vGeD3zkE5/5wle+8Z0f/OQXv/nDX/4REMZ/AhGYIAQlGMEJQUhCEZowhCUc
4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJQEISkZgkJCUZyUlBSlKRmjSkJR3p
yUBGMpGZLGQlG9nJQU5ykZs85CUf+SlAQQpRmCIUpRjFKUFJSlGaMpSlHOWp
QEUqUZkqVKUa1alBTWpRmzrUpR71aUBDGtGYJjSlGc1pQUta0Zo2tKUd7elA
RzrRmS50pRvd6UFPetGbPvSlH//RnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4J
TGQSk5nCVKYxnRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1s
ZBOb2cJWtrGdHexkF7vZw172sZ8DHOQQ/wfgGlSS
        "]]}, {}}}], {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"actual value - predicted value\"", TraditionalForm], None}, {
     FormBox["\"predicted value\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.0017291102241136856`, 
   0.0024749407757857235`}, {-4.492422519510232, 4.492422519510232}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.710061836689308*^9, 3.7100694576779785`*^9, 
  3.710070139624318*^9, 3.710070307256833*^9, 3.710070658632082*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"residuals2", "=", 
  RowBox[{"pm", "[", "\"\<Residuals\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.7100706556474867`*^9, 3.7100706730379624`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.5477579542903978`"}], ",", 
   RowBox[{"-", "0.19957893804475002`"}], ",", 
   RowBox[{"-", "0.001025565521031989`"}], ",", "1.0497295722425881`", ",", 
   RowBox[{"-", "0.680106028264537`"}], ",", "2.1093456642332753`", ",", 
   "3.4124412754757185`", ",", "3.7052066833846666`", ",", 
   "3.3308261975067897`", ",", "1.0013669224532125`", ",", 
   RowBox[{"-", "0.5254105786006625`"}], ",", 
   RowBox[{"-", "0.9439933002070685`"}], ",", 
   RowBox[{"-", "0.4944918806452037`"}], ",", "1.4728426534324395`", ",", 
   "1.6997363410487498`", ",", "0.37204925799180305`", ",", 
   "0.5669136263941886`", ",", "1.2948873774777878`", ",", 
   RowBox[{"-", "0.2635557834100815`"}], ",", 
   RowBox[{"-", "0.27339940169808535`"}], ",", "0.1140479017584711`", ",", 
   "0.8562372154891844`", ",", "2.993137840785129`", ",", 
   "2.757818280079817`", ",", "0.6171483032655146`", ",", 
   RowBox[{"-", "0.325403229253994`"}], ",", 
   RowBox[{"-", "0.7533205757722246`"}], ",", "1.5171074350622762`", ",", 
   RowBox[{"-", "0.23162454687379436`"}], ",", "0.09217626683694677`", ",", 
   "0.3061429616721777`", ",", "1.1221406018308504`", ",", 
   "1.0309067640333964`", ",", "0.9154769213407163`", ",", 
   "1.1393373947501486`", ",", "2.037769263916135`", ",", 
   "0.13509464827837095`", ",", 
   RowBox[{"-", "0.32700934705551843`"}], ",", 
   RowBox[{"-", "0.3798975547141771`"}], ",", 
   RowBox[{"-", "0.6004296191504097`"}], ",", "0.1212651039254519`", ",", 
   "0.22642854685613184`", ",", "0.032385411367025475`", ",", 
   "0.6817216979538249`", ",", 
   RowBox[{"-", "0.11269495569439963`"}], ",", "0.03342965916817188`", ",", 
   "1.908823452284959`", ",", "1.7690815420978836`", ",", "0.53913346983241`",
    ",", 
   RowBox[{"-", "0.05633230534960881`"}], ",", "1.9744011804297001`", ",", 
   "0.6416488678593725`", ",", "1.2173817924052628`", ",", 
   "4.143201470866598`", ",", "4.278497637628792`", ",", 
   "2.8807507129575542`", ",", "2.9655181038600653`", ",", 
   "0.30222994509117324`", ",", "0.17648045904760165`", ",", 
   RowBox[{"-", "0.40178166087994743`"}], ",", 
   RowBox[{"-", "0.2996482519734397`"}], ",", 
   RowBox[{"-", "0.01773936655012755`"}], ",", 
   RowBox[{"-", "0.5188583297183529`"}], ",", "0.25895772298811515`", ",", 
   "0.19299571562254345`", ",", "0.6427469184641058`", ",", 
   "1.335284911258011`", ",", "0.8777618115858535`", ",", 
   "0.3887516786230917`", ",", "0.3053258339151072`", ",", 
   "0.010565577732398095`", ",", "0.03309219326899843`", ",", 
   RowBox[{"-", "0.24064339224825235`"}], ",", "0.11408132025683378`", ",", 
   "0.3697716710379233`", ",", 
   RowBox[{"-", "0.017147397408224924`"}], ",", "0.22897504055079823`", ",", 
   "0.24313599138959582`", ",", "0.21827702253118014`", ",", 
   "0.5539764845319229`", ",", "0.4779733176287163`", ",", 
   "0.3082684998301858`", ",", 
   RowBox[{"-", "0.8644450496486262`"}], ",", "0.8145786336532166`", ",", 
   "0.48721333149016205`", ",", 
   RowBox[{"-", "0.13990480234526417`"}], ",", "0.37541809221004374`", ",", 
   RowBox[{"-", "0.6552920864560918`"}], ",", "0.3481333865831382`", ",", 
   "1.3421579296356985`", ",", 
   RowBox[{"-", "0.23145111201997567`"}], ",", 
   RowBox[{"-", "0.6104881010517016`"}], ",", "0.006877376581379931`", ",", 
   "0.2164616419738209`", ",", "0.31194130324573605`", ",", 
   RowBox[{"-", "0.3321044751001288`"}], ",", "0.8957506439964373`", ",", 
   "0.9146683166898975`", ",", "0.46990660796465883`", ",", 
   RowBox[{"-", "0.216734888143217`"}], ",", "1.8815201248066118`", ",", 
   "1.2215905944065693`", ",", 
   RowBox[{"-", "0.565890274931486`"}], ",", "1.3715153949344323`", ",", 
   "1.3091420320844849`", ",", "0.7490008636263861`", ",", 
   "1.4397252849996518`", ",", "1.0204320807841807`", ",", 
   "1.4039554980516196`", ",", "1.745082067276354`", ",", 
   "0.14127186862072294`", ",", 
   RowBox[{"-", "0.5033876018226848`"}], ",", "0.18696760380667427`", ",", 
   "1.014843964800324`", ",", "1.3864011166968473`", ",", 
   "0.8259662438170182`", ",", 
   RowBox[{"-", "0.19351639776613686`"}], ",", "1.1611835205033147`", ",", 
   RowBox[{"-", "0.2818419589505514`"}], ",", 
   RowBox[{"-", "0.5753085086503735`"}], ",", 
   RowBox[{"-", "0.5392731421352762`"}], ",", 
   RowBox[{"-", "0.43831134492886537`"}], ",", 
   RowBox[{"-", "0.017941686158807844`"}], ",", "1.6860913442578271`", ",", 
   "0.8761840271083021`", ",", "1.255099261537637`", ",", 
   "0.6173454631468447`", ",", "0.34135316651556`", ",", 
   "0.6288923765447153`", ",", "0.5614853072134922`", ",", 
   "0.8843399257502128`", ",", "0.2255941598890639`", ",", 
   "1.2777837571487036`", ",", "0.49872387235302446`", ",", 
   "1.2140792551695354`", ",", "1.9584772579742276`", ",", 
   "1.2718987971629485`", ",", "2.447761775806975`", ",", 
   "1.692992099131594`", ",", "1.0488535964870165`", ",", 
   RowBox[{"-", "0.8265240487975526`"}], ",", "1.5071485990703686`", ",", 
   "0.40388919560125564`", ",", "0.03720571287796529`", ",", 
   "0.6245276854969763`", ",", 
   RowBox[{"-", "0.14784372368552498`"}], ",", 
   RowBox[{"-", "0.3972076455135526`"}], ",", 
   RowBox[{"-", "0.8052099410635514`"}], ",", "0.5418744415298428`", ",", 
   RowBox[{"-", "0.4837005307744763`"}], ",", 
   RowBox[{"-", "0.6270767613986946`"}], ",", 
   RowBox[{"-", "0.7258098514704637`"}], ",", "1.807803551187845`", ",", 
   "1.3458319256356785`", ",", "0.2553862301124856`", ",", 
   "0.06135673214086933`", ",", 
   RowBox[{"-", "0.35548316059002444`"}], ",", "0.19776290913228056`", ",", 
   "1.281390856937684`", ",", "0.9725046511632784`", ",", 
   "1.1808596960429927`", ",", "0.5646890910949152`", ",", 
   "0.1368128351672325`", ",", "0.7121334245126469`", ",", 
   "1.571764574473269`", ",", "2.104070759987772`", ",", 
   "1.0576686100193744`", ",", "0.9625478653480218`", ",", 
   "0.393487216030574`", ",", "0.1552673509635654`", ",", 
   RowBox[{"-", "0.023925179134582183`"}], ",", "0.3677348427257254`", ",", 
   RowBox[{"-", "0.12444138202260502`"}], ",", "0.4621985941832777`", ",", 
   "0.49028043059357723`", ",", 
   RowBox[{"-", "0.0701453479266311`"}], ",", 
   RowBox[{"-", "0.3008435192676409`"}], ",", 
   RowBox[{"-", "0.5212570748780689`"}], ",", 
   RowBox[{"-", "0.4052160688561606`"}], ",", "0.2915622824250223`", ",", 
   "0.5089235940732615`", ",", "1.5091994095369448`", ",", 
   RowBox[{"-", "0.10045907965064077`"}], ",", 
   RowBox[{"-", "0.07579081582709449`"}], ",", "1.0737208660466926`", ",", 
   "0.6795214571308842`", ",", "0.7710688313170222`", ",", 
   "1.110752023731507`", ",", "1.154683842938033`", ",", 
   "0.2237331084886681`", ",", "0.2276041830137914`", ",", 
   "0.371983985733816`", ",", "0.6241442529640685`", ",", 
   "0.38736381979442697`", ",", 
   RowBox[{"-", "0.08132227271062416`"}], ",", "1.0460685780361643`", ",", 
   "0.710186719525415`", ",", "0.4268145786426374`", ",", 
   "1.362817715093571`", ",", "0.3666771382963846`", ",", 
   "0.5142837565404478`", ",", "0.48373336668995387`", ",", 
   "0.8004646780826444`", ",", 
   RowBox[{"-", "0.28898544739321036`"}], ",", 
   RowBox[{"-", "0.18943298865867758`"}], ",", "0.8925467014378214`", ",", 
   "0.26475681296940123`", ",", "0.30905858295118616`", ",", 
   "0.2887734452314504`", ",", "0.6267226482050303`", ",", 
   "0.4614858304548714`", ",", "0.41089097004845215`", ",", 
   "0.9699515662625385`", ",", "0.5248589717550587`", ",", 
   "0.771470301617524`", ",", "0.16480270833803662`", ",", 
   RowBox[{"-", "0.9117961173336875`"}], ",", 
   RowBox[{"-", "0.9412732066984535`"}], ",", "0.16907728190496035`", ",", 
   "0.5674940774478929`", ",", "0.41507055485734357`", ",", 
   "0.050822865106533575`", ",", 
   RowBox[{"-", "0.72289575223333`"}], ",", "0.5813962763562961`", ",", 
   "1.472877131850838`", ",", "0.5549359824155354`", ",", 
   "1.014719334602338`", ",", "0.1669154279883182`", ",", 
   "0.287571131101613`", ",", 
   RowBox[{"-", "0.6483078998056923`"}], ",", "0.9762037091975584`", ",", 
   "0.44607318740800866`", ",", "3.292527434738538`", ",", 
   "3.6928776369599903`", ",", "2.3100130092880864`", ",", 
   RowBox[{"-", "0.30909391155787547`"}], ",", 
   RowBox[{"-", "0.8265251188915169`"}], ",", "0.8499444329706758`", ",", 
   "0.3435163174447707`", ",", "0.19760355679817534`", ",", 
   "0.18408607013813727`", ",", 
   RowBox[{"-", "0.12259799085888573`"}], ",", "1.0180082569686488`", ",", 
   "0.6636691779524739`", ",", 
   RowBox[{"-", "0.21362938122323466`"}], ",", 
   RowBox[{"-", "0.9262735858686395`"}], ",", 
   RowBox[{"-", "0.4742818626131399`"}], ",", 
   RowBox[{"-", "1.1516420055790182`"}], ",", 
   RowBox[{"-", "0.6724219393168601`"}], ",", 
   RowBox[{"-", "0.462300398633786`"}], ",", 
   RowBox[{"-", "0.8286633261559245`"}], ",", 
   RowBox[{"-", "0.4990885842340185`"}], ",", 
   RowBox[{"-", "0.40335247193053436`"}], ",", "0.38434788544497483`", ",", 
   "0.027590241924318495`", ",", 
   RowBox[{"-", "0.6213524430708591`"}], ",", 
   RowBox[{"-", "1.228304217279128`"}], ",", 
   RowBox[{"-", "0.7245831939916566`"}], ",", 
   RowBox[{"-", "0.08348453170156346`"}], ",", 
   RowBox[{"-", "1.8925244026933992`"}], ",", 
   RowBox[{"-", "1.0900929338775018`"}], ",", 
   RowBox[{"-", "0.5284545805504722`"}], ",", 
   RowBox[{"-", "0.5603672216138694`"}], ",", 
   RowBox[{"-", "0.6742149565613562`"}], ",", "0.8731969310007582`", ",", 
   "0.3567466108697984`", ",", 
   RowBox[{"-", "1.0048150014901527`"}], ",", 
   RowBox[{"-", "1.0991407382393377`"}], ",", 
   RowBox[{"-", "1.0799241389974172`"}], ",", 
   RowBox[{"-", "0.37712260280745846`"}], ",", 
   RowBox[{"-", "0.538730675161512`"}], ",", 
   RowBox[{"-", "0.641255417009837`"}], ",", 
   RowBox[{"-", "1.5505896674260444`"}], ",", 
   RowBox[{"-", "1.152750351902604`"}], ",", 
   RowBox[{"-", "0.3491749642545557`"}], ",", 
   RowBox[{"-", "0.568013945897169`"}], ",", 
   RowBox[{"-", "1.505048880480597`"}], ",", 
   RowBox[{"-", "1.0026174437243547`"}], ",", 
   RowBox[{"-", "0.25015196181610855`"}], ",", 
   RowBox[{"-", "0.2524714393126802`"}], ",", 
   RowBox[{"-", "2.0468297923433605`"}], ",", 
   RowBox[{"-", "2.1323157104515973`"}], ",", 
   RowBox[{"-", "0.556439451330531`"}], ",", 
   RowBox[{"-", "0.8489601422129496`"}], ",", "0.4736062589824463`", ",", 
   RowBox[{"-", "0.9093293552232432`"}], ",", 
   RowBox[{"-", "0.9859934466705149`"}], ",", 
   RowBox[{"-", "0.7332765142748989`"}], ",", 
   RowBox[{"-", "1.8667540448933773`"}], ",", "0.20028380007955476`", ",", 
   RowBox[{"-", "0.434830650497431`"}], ",", 
   RowBox[{"-", "0.13665317119867512`"}], ",", 
   RowBox[{"-", "0.3663854832211504`"}], ",", 
   RowBox[{"-", "1.5462402248932405`"}], ",", "1.923698886030515`", ",", 
   "0.5995161619257631`", ",", 
   RowBox[{"-", "0.5395692492168047`"}], ",", 
   RowBox[{"-", "0.8021728881688103`"}], ",", 
   RowBox[{"-", "1.0168253925771567`"}], ",", 
   RowBox[{"-", "0.05668662142842565`"}], ",", "0.06935362347262472`", ",", 
   RowBox[{"-", "0.41871622213580206`"}], ",", 
   RowBox[{"-", "1.0578119405411284`"}], ",", 
   RowBox[{"-", "1.774840351858714`"}], ",", 
   RowBox[{"-", "1.1678641551780338`"}], ",", "0.22800635966569222`", ",", 
   RowBox[{"-", "0.5115484352688705`"}], ",", "0.2309496312902402`", ",", 
   "0.12233545113685754`", ",", 
   RowBox[{"-", "1.1472126723273794`"}], ",", 
   RowBox[{"-", "1.5134336567288391`"}], ",", 
   RowBox[{"-", "0.9522105980673656`"}], ",", 
   RowBox[{"-", "0.7329878148219551`"}], ",", 
   RowBox[{"-", "0.7206572816733211`"}], ",", 
   RowBox[{"-", "0.29918242488168345`"}], ",", 
   RowBox[{"-", "0.32203068053030137`"}], ",", 
   RowBox[{"-", "1.6470701830123817`"}], ",", 
   RowBox[{"-", "1.2209702874375226`"}], ",", 
   RowBox[{"-", "0.5096797422322115`"}], ",", 
   RowBox[{"-", "0.7166624071674113`"}], ",", 
   RowBox[{"-", "1.239996660963282`"}], ",", 
   RowBox[{"-", "3.567800100700713`"}], ",", 
   RowBox[{"-", "2.3216729428388416`"}], ",", 
   RowBox[{"-", "1.79098878932707`"}], ",", 
   RowBox[{"-", "0.7766417473700031`"}], ",", 
   RowBox[{"-", "0.6118103465544655`"}], ",", "1.6444178269928469`", ",", 
   RowBox[{"-", "0.13986928957786254`"}], ",", 
   RowBox[{"-", "0.7568287643661903`"}], ",", 
   RowBox[{"-", "0.3673468483074838`"}], ",", 
   RowBox[{"-", "1.291830969250265`"}], ",", 
   RowBox[{"-", "1.3095786519027026`"}], ",", 
   RowBox[{"-", "0.18988712811946185`"}], ",", 
   RowBox[{"-", "0.1927205991053546`"}], ",", 
   RowBox[{"-", "1.1140132323805245`"}], ",", 
   RowBox[{"-", "0.4631531426479898`"}], ",", 
   RowBox[{"-", "1.1761349630469191`"}], ",", 
   RowBox[{"-", "1.241182147501761`"}], ",", 
   RowBox[{"-", "0.8157764641358703`"}], ",", 
   RowBox[{"-", "0.29499776550907947`"}], ",", "0.22814080070964785`", ",", 
   RowBox[{"-", "0.49396954049614167`"}], ",", 
   RowBox[{"-", "0.904172978749813`"}], ",", 
   RowBox[{"-", "1.10659702413865`"}], ",", 
   RowBox[{"-", "0.7500484207872519`"}], ",", 
   RowBox[{"-", "0.46736896380428383`"}], ",", 
   RowBox[{"-", "1.052544268046231`"}], ",", 
   RowBox[{"-", "0.19534771707658935`"}], ",", 
   RowBox[{"-", "0.19251885025137488`"}], ",", 
   RowBox[{"-", "0.8665627616933715`"}], ",", 
   RowBox[{"-", "2.1455770058505537`"}], ",", 
   RowBox[{"-", "1.696839419496757`"}], ",", 
   RowBox[{"-", "0.5950023285330919`"}], ",", 
   RowBox[{"-", "0.016793987782565918`"}], ",", 
   RowBox[{"-", "0.8576664362496013`"}], ",", "0.48214900383029774`", ",", 
   "0.6976869128000194`", ",", "1.0362676785579061`", ",", 
   RowBox[{"-", "0.1103703869134599`"}], ",", 
   RowBox[{"-", "0.6588101096087494`"}], ",", 
   RowBox[{"-", "0.6683443648591803`"}], ",", 
   RowBox[{"-", "0.9052401325174476`"}], ",", 
   RowBox[{"-", "0.3390538820401188`"}], ",", "0.6457446961779971`", ",", 
   "1.4082191966044102`", ",", "2.3419899642435826`", ",", 
   "1.893735907398011`", ",", "1.363685714141053`", ",", 
   "1.0184702629549154`", ",", "0.13017985245498725`", ",", 
   "1.0366906708340158`", ",", "0.11864453865114048`", ",", 
   "0.10304834308243944`", ",", 
   RowBox[{"-", "0.906580342670792`"}], ",", 
   RowBox[{"-", "1.7304207847466526`"}], ",", 
   RowBox[{"-", "0.6858378943189806`"}], ",", 
   RowBox[{"-", "0.41884314777707127`"}], ",", 
   RowBox[{"-", "0.004976207976380803`"}], ",", 
   RowBox[{"-", "0.5582680957093216`"}], ",", 
   RowBox[{"-", "0.9290700700139713`"}], ",", "1.5631940030088671`", ",", 
   "0.22874823894868918`", ",", 
   RowBox[{"-", "1.5871318675731578`"}], ",", 
   RowBox[{"-", "0.8188711068367068`"}], ",", 
   RowBox[{"-", "0.5469433773174431`"}], ",", 
   RowBox[{"-", "0.03489582234038045`"}], ",", "0.2633655989445061`", ",", 
   RowBox[{"-", "0.20269880395246306`"}], ",", 
   RowBox[{"-", "0.9539133253708934`"}], ",", 
   RowBox[{"-", "1.1597046207525303`"}], ",", 
   RowBox[{"-", "0.7072312380837272`"}], ",", 
   RowBox[{"-", "0.43426255333254893`"}], ",", "0.12591711796440258`", ",", 
   RowBox[{"-", "1.6956979066737699`"}], ",", 
   RowBox[{"-", "1.0413367510191383`"}], ",", 
   RowBox[{"-", "1.19216776584822`"}], ",", 
   RowBox[{"-", "1.2207328746052748`"}], ",", 
   RowBox[{"-", "0.48436710199315325`"}], ",", 
   RowBox[{"-", "0.22455391848807638`"}], ",", "1.4152237462896275`", ",", 
   "1.0363986439348833`", ",", 
   RowBox[{"-", "0.3007806693469669`"}], ",", 
   RowBox[{"-", "1.0612018278075588`"}], ",", 
   RowBox[{"-", "0.9867497005845888`"}], ",", 
   RowBox[{"-", "0.4017009991576706`"}], ",", "0.11070247735050286`", ",", 
   RowBox[{"-", "0.18348242408133686`"}], ",", "0.8746688372469343`", ",", 
   "0.34334621905761253`", ",", "0.4153009624321211`", ",", 
   RowBox[{"-", "0.21817941446318326`"}], ",", 
   RowBox[{"-", "0.523311690924731`"}], ",", 
   RowBox[{"-", "0.8534820066188007`"}], ",", 
   RowBox[{"-", "0.5047351940204986`"}], ",", "0.2467047862683677`", ",", 
   "1.5415379466729482`", ",", 
   RowBox[{"-", "0.6957988727403519`"}], ",", 
   RowBox[{"-", "1.1465678333689002`"}], ",", 
   RowBox[{"-", "0.9034075954069659`"}], ",", 
   RowBox[{"-", "0.0863857629088097`"}], ",", 
   RowBox[{"-", "0.724199858343029`"}], ",", 
   RowBox[{"-", "1.1345663601305405`"}], ",", "0.06672379643243262`", ",", 
   "1.1717227788459266`", ",", "1.1609331995078098`", ",", 
   RowBox[{"-", "0.628759186970304`"}], ",", 
   RowBox[{"-", "0.8383401164957675`"}], ",", 
   RowBox[{"-", "0.8944651714852916`"}], ",", 
   RowBox[{"-", "1.2068470160050053`"}], ",", 
   RowBox[{"-", "1.1611878664614153`"}], ",", 
   RowBox[{"-", "0.4534442350679588`"}], ",", "0.16511372039326105`", ",", 
   RowBox[{"-", "0.6890677404512554`"}], ",", 
   RowBox[{"-", "0.6065171986743939`"}], ",", "0.10003349042166937`", ",", 
   "0.23576258753852955`", ",", 
   RowBox[{"-", "0.1742509976629986`"}], ",", 
   RowBox[{"-", "0.606920547813415`"}], ",", "0.04761434873147001`", ",", 
   "0.06222813911918154`", ",", "0.43331935457582915`", ",", 
   "0.5194314639248323`", ",", "0.0689553584491306`", ",", 
   "0.411804385622196`", ",", 
   RowBox[{"-", "0.346796309047571`"}], ",", "0.9316225851139532`", ",", 
   RowBox[{"-", "0.1258416853452582`"}], ",", 
   RowBox[{"-", "0.6968574463921915`"}], ",", 
   RowBox[{"-", "0.4742823413502842`"}], ",", "0.14232872653232867`", ",", 
   RowBox[{"-", "0.5920397547752946`"}], ",", 
   RowBox[{"-", "0.38927703374110534`"}], ",", 
   RowBox[{"-", "0.0008380697374935484`"}], ",", 
   RowBox[{"-", "1.0074071654077512`"}], ",", 
   RowBox[{"-", "1.041307020509347`"}], ",", 
   RowBox[{"-", "0.38197032900232347`"}], ",", 
   RowBox[{"-", "1.346997448357722`"}], ",", 
   RowBox[{"-", "1.1886475845453708`"}], ",", 
   RowBox[{"-", "0.9776491294624757`"}], ",", 
   RowBox[{"-", "1.4918159262917892`"}], ",", 
   RowBox[{"-", "0.692768245260598`"}], ",", 
   RowBox[{"-", "1.11294317104091`"}], ",", 
   RowBox[{"-", "0.9802010186138713`"}], ",", 
   RowBox[{"-", "1.3712801522725409`"}], ",", 
   RowBox[{"-", "0.38078565115641055`"}], ",", 
   RowBox[{"-", "0.5753031574214497`"}], ",", 
   RowBox[{"-", "0.602142172877509`"}], ",", 
   RowBox[{"-", "1.3237038543652424`"}], ",", 
   RowBox[{"-", "0.8753860181821278`"}], ",", "0.08051451453124792`", ",", 
   "0.7040764308564903`", ",", 
   RowBox[{"-", "0.4623685425636869`"}], ",", "0.8273805373720662`", ",", 
   RowBox[{"-", "0.23533554005291213`"}], ",", 
   RowBox[{"-", "0.5960506837708375`"}], ",", 
   RowBox[{"-", "0.2958452471884356`"}], ",", "0.7741078301315023`", ",", 
   RowBox[{"-", "0.7507238809808633`"}], ",", "0.2540895266228165`", ",", 
   "1.4187893979125736`", ",", "2.0880484573518627`", ",", 
   RowBox[{"-", "1.0107668198324398`"}], ",", 
   RowBox[{"-", "0.6611060451979635`"}], ",", 
   RowBox[{"-", "0.30025085856357137`"}], ",", 
   RowBox[{"-", "0.6918799168840694`"}], ",", 
   RowBox[{"-", "0.5915429872045914`"}], ",", 
   RowBox[{"-", "0.7625889197002508`"}], ",", 
   RowBox[{"-", "0.9238571792772055`"}], ",", 
   RowBox[{"-", "0.52510447295416`"}], ",", 
   RowBox[{"-", "1.0710164776191147`"}], ",", 
   RowBox[{"-", "0.07563267356314374`"}], ",", 
   RowBox[{"-", "0.6504028460348222`"}], ",", 
   RowBox[{"-", "1.2984295037556282`"}], ",", 
   RowBox[{"-", "1.6025286105073955`"}], ",", 
   RowBox[{"-", "0.0780212320646561`"}], ",", 
   RowBox[{"-", "0.4429732084829606`"}], ",", "0.6518814051632907`", ",", 
   "1.3033306983512296`", ",", "0.6211377985975333`", ",", 
   "0.6895707207195291`", ",", 
   RowBox[{"-", "0.32181861846718984`"}], ",", 
   RowBox[{"-", "1.3636010331421364`"}], ",", 
   RowBox[{"-", "0.7817323548036798`"}], ",", 
   RowBox[{"-", "1.1883081501020698`"}], ",", 
   RowBox[{"-", "1.1381684653915267`"}], ",", 
   RowBox[{"-", "1.0840367600832905`"}], ",", 
   RowBox[{"-", "1.255623422624692`"}], ",", "0.6144391284166417`", ",", 
   "0.9670968365096785`", ",", 
   RowBox[{"-", "0.3000831100109434`"}], ",", 
   RowBox[{"-", "0.25260291321893297`"}], ",", 
   RowBox[{"-", "0.87601028120025`"}], ",", 
   RowBox[{"-", "1.4337721648832957`"}], ",", 
   RowBox[{"-", "0.6358029378739856`"}], ",", "0.035998968897607814`", ",", 
   "0.8516645075518996`", ",", "0.44945737700507743`", ",", 
   "0.2057943164616024`", ",", 
   RowBox[{"-", "0.433319400778763`"}], ",", 
   RowBox[{"-", "0.9110653299240598`"}], ",", "0.7106579722082114`", ",", 
   RowBox[{"-", "0.385678060116149`"}], ",", 
   RowBox[{"-", "0.35608673533374907`"}], ",", "0.7777198542052431`", ",", 
   RowBox[{"-", "0.9144895579171045`"}], ",", 
   RowBox[{"-", "0.5103116095329244`"}], ",", "0.20545448507071684`", ",", 
   "0.10367161356212368`", ",", "0.3995318266592227`", ",", 
   RowBox[{"-", "0.283221912571001`"}], ",", 
   RowBox[{"-", "0.8198671519161451`"}], ",", "0.15755024578321156`", ",", 
   RowBox[{"-", "0.9066214222419129`"}], ",", "0.3324253123955058`", ",", 
   RowBox[{"-", "0.3231025378138693`"}], ",", 
   RowBox[{"-", "0.7071261147716149`"}], ",", 
   RowBox[{"-", "0.9478416651160382`"}], ",", 
   RowBox[{"-", "0.4012138053294497`"}], ",", "0.06414436974990226`", ",", 
   "1.6828528675455752`", ",", "0.16265992820921565`", ",", 
   RowBox[{"-", "0.44220904510169123`"}], ",", 
   RowBox[{"-", "0.09270918218775326`"}], ",", 
   RowBox[{"-", "0.2781160862908548`"}], ",", "0.9400680491962896`", ",", 
   RowBox[{"-", "0.5105043299121556`"}], ",", "0.4836947917932203`", ",", 
   "1.8589061692893825`", ",", "0.04111006046354551`", ",", 
   "0.7834731484112306`", ",", 
   RowBox[{"-", "0.28077637559896684`"}], ",", "0.4768224688501792`", ",", 
   RowBox[{"-", "0.37309606141307744`"}], ",", "1.3287929731410975`", ",", 
   "0.6278839191572778`", ",", "0.5873968926890317`", ",", 
   "0.09734976267948986`", ",", 
   RowBox[{"-", "1.006878598274293`"}], ",", "0.026990475017462212`", ",", 
   "0.39418561172656597`", ",", "0.32560316112977766`", ",", 
   "0.2974140719457361`", ",", 
   RowBox[{"-", "0.3236665726935279`"}], ",", "0.8665735134944109`", ",", 
   RowBox[{"-", "0.669939638762884`"}], ",", 
   RowBox[{"-", "0.8091705034893957`"}], ",", "1.0698648567001847`", ",", 
   RowBox[{"-", "0.07089225739099053`"}], ",", "0.9628915739314382`", ",", 
   "0.3516782884131388`", ",", 
   RowBox[{"-", "1.3674550332624322`"}], ",", 
   RowBox[{"-", "0.7175904644058261`"}], ",", "0.015617510131377445`", ",", 
   RowBox[{"-", "0.1381902027272688`"}], ",", "0.4208128640897988`", ",", 
   RowBox[{"-", "0.3427414017342608`"}], ",", 
   RowBox[{"-", "0.39154617572883743`"}], ",", 
   RowBox[{"-", "0.47343816668509525`"}], ",", 
   RowBox[{"-", "1.2384547346497026`"}], ",", 
   RowBox[{"-", "0.8350646987338864`"}], ",", 
   RowBox[{"-", "1.4331355452073138`"}], ",", "1.429164774893789`", ",", 
   "0.6487978748503259`", ",", "1.0753573419210132`", ",", 
   "1.1600959559918282`", ",", "1.1099951940109074`", ",", 
   "0.12240414455535291`", ",", "0.31376076372876593`", ",", 
   RowBox[{"-", "0.5193083900531419`"}], ",", 
   RowBox[{"-", "0.18404745457182753`"}], ",", "0.07265853837979812`", ",", 
   "0.6799764594578164`", ",", 
   RowBox[{"-", "0.6637593553141485`"}], ",", 
   RowBox[{"-", "0.6785785472176489`"}], ",", 
   RowBox[{"-", "1.1740910257974289`"}], ",", "1.3494159584687802`", ",", 
   "1.4438176346296998`", ",", 
   RowBox[{"-", "0.08199810537791055`"}], ",", 
   RowBox[{"-", "0.03826823450298617`"}], ",", 
   RowBox[{"-", "0.14870898533124532`"}], ",", "0.27553068487111093`", ",", 
   "0.10364291805142535`", ",", "0.4006937105254451`", ",", 
   RowBox[{"-", "0.06652812572936706`"}], ",", "0.5462988069146393`", ",", 
   RowBox[{"-", "0.41147618166582933`"}], ",", "0.06440394638922958`", ",", 
   RowBox[{"-", "0.18143745457301003`"}], ",", 
   RowBox[{"-", "0.24124713811966578`"}], ",", 
   RowBox[{"-", "0.30724252590132883`"}], ",", 
   RowBox[{"-", "0.135093219405789`"}], ",", "0.6396848553074854`", ",", 
   RowBox[{"-", "0.35736707644914173`"}], ",", 
   RowBox[{"-", "0.455969446545644`"}], ",", 
   RowBox[{"-", "0.26093097956127326`"}], ",", 
   RowBox[{"-", "0.1832227884790102`"}], ",", 
   RowBox[{"-", "0.6947931478903457`"}], ",", 
   RowBox[{"-", "0.837749588846478`"}], ",", 
   RowBox[{"-", "0.43935673276417264`"}], ",", 
   RowBox[{"-", "0.2932603193479063`"}], ",", 
   RowBox[{"-", "0.49378814129225707`"}], ",", "0.3371612223124626`", ",", 
   RowBox[{"-", "0.2311197809431825`"}], ",", 
   RowBox[{"-", "0.7162942488274812`"}], ",", "0.5667192370059158`", ",", 
   RowBox[{"-", "1.2579184891989523`"}], ",", 
   RowBox[{"-", "1.5817994769059467`"}], ",", 
   RowBox[{"-", "0.40768942938371927`"}], ",", 
   RowBox[{"-", "0.356727004610224`"}], ",", 
   RowBox[{"-", "1.5332766977449714`"}], ",", "0.3764553387756537`", ",", 
   RowBox[{"-", "0.19287115863268356`"}], ",", 
   RowBox[{"-", "1.0724369647411487`"}], ",", 
   RowBox[{"-", "0.05900702007829742`"}], ",", 
   RowBox[{"-", "1.3165249323926556`"}], ",", 
   RowBox[{"-", "0.6625986501945347`"}], ",", 
   RowBox[{"-", "0.9849930593422954`"}], ",", 
   RowBox[{"-", "0.21580749546274458`"}], ",", 
   RowBox[{"-", "1.4010231529071457`"}], ",", "0.282175058661254`", ",", 
   RowBox[{"-", "1.4239094388416442`"}], ",", 
   RowBox[{"-", "0.6839374579246593`"}], ",", 
   RowBox[{"-", "0.5293667735555002`"}], ",", 
   RowBox[{"-", "0.1642198403091524`"}], ",", 
   RowBox[{"-", "1.14251793053362`"}], ",", 
   RowBox[{"-", "1.3419922137087519`"}], ",", "2.0717849823398455`", ",", 
   RowBox[{"-", "1.6755143718455814`"}], ",", "0.2902900043847768`", ",", 
   "4.049768973781943`", ",", "3.9338613821616244`", ",", 
   "3.066288830361556`", ",", 
   RowBox[{"-", "0.645261847878453`"}], ",", 
   RowBox[{"-", "0.8959372550659443`"}], ",", 
   RowBox[{"-", "1.133338205292986`"}], ",", 
   RowBox[{"-", "1.019994332066333`"}], ",", 
   RowBox[{"-", "0.5503689742264333`"}], ",", 
   RowBox[{"-", "1.056882168427776`"}], ",", 
   RowBox[{"-", "0.7409232325417282`"}], ",", 
   RowBox[{"-", "0.5628133243922484`"}], ",", 
   RowBox[{"-", "0.09923857526879314`"}], ",", "0.11340367588094746`", ",", 
   RowBox[{"-", "0.6390798480243511`"}], ",", 
   RowBox[{"-", "0.8761218054777024`"}], ",", 
   RowBox[{"-", "0.8032983700991648`"}], ",", 
   RowBox[{"-", "1.5421358915931727`"}], ",", 
   RowBox[{"-", "0.1964169072577115`"}], ",", "0.1361529905582372`", ",", 
   RowBox[{"-", "0.4626850628495189`"}], ",", 
   RowBox[{"-", "0.08963163843461268`"}], ",", 
   RowBox[{"-", "1.4083617305899891`"}], ",", 
   RowBox[{"-", "1.9639067777523744`"}], ",", 
   RowBox[{"-", "0.6584855160771627`"}], ",", 
   RowBox[{"-", "1.3804638209655942`"}], ",", "0.16261642386477917`", ",", 
   RowBox[{"-", "0.9008279612520275`"}], ",", 
   RowBox[{"-", "1.021064738574299`"}], ",", 
   RowBox[{"-", "1.3189133289725319`"}], ",", 
   RowBox[{"-", "0.7358982864841506`"}], ",", 
   RowBox[{"-", "0.2584213878481331`"}], ",", "0.13278559850479957`", ",", 
   RowBox[{"-", "0.22170395477633328`"}], ",", "0.07810720842284523`", ",", 
   RowBox[{"-", "0.793672130121972`"}], ",", 
   RowBox[{"-", "1.242866086145191`"}], ",", 
   RowBox[{"-", "1.253444528283378`"}], ",", 
   RowBox[{"-", "0.3773814747015403`"}], ",", 
   RowBox[{"-", "0.9096108676494021`"}], ",", "1.0491178233552738`", ",", 
   "2.3009049938554273`", ",", "1.7083569876021913`", ",", 
   RowBox[{"-", "0.5485845092234778`"}], ",", 
   RowBox[{"-", "0.09909880752401763`"}], ",", 
   RowBox[{"-", "0.6139331605240409`"}], ",", 
   RowBox[{"-", "1.4505205780346355`"}], ",", "2.2122384600032663`", ",", 
   RowBox[{"-", "0.5072842886789233`"}], ",", "0.17317907275034194`", ",", 
   "1.1402373218129485`", ",", "0.01853091586151661`", ",", 
   "0.17441763092964935`", ",", 
   RowBox[{"-", "0.7995174294458118`"}], ",", "0.6530403530879901`", ",", 
   "1.735119948934998`", ",", "1.4230637982036858`", ",", 
   "2.2741468964519815`", ",", "0.41819457397857407`", ",", 
   RowBox[{"-", "1.128958787679609`"}], ",", 
   RowBox[{"-", "1.352866467278176`"}], ",", 
   RowBox[{"-", "1.222079085498929`"}], ",", 
   RowBox[{"-", "0.8604072211648739`"}], ",", 
   RowBox[{"-", "0.897895224435367`"}], ",", 
   RowBox[{"-", "0.15553541001821725`"}], ",", "0.8917104440155038`", ",", 
   RowBox[{"-", "0.1320369602351745`"}], ",", 
   RowBox[{"-", "0.3113143251841972`"}], ",", 
   RowBox[{"-", "0.07710222488216244`"}], ",", 
   RowBox[{"-", "0.0032800374339481044`"}], ",", 
   RowBox[{"-", "0.5464366119915909`"}], ",", 
   RowBox[{"-", "0.4560744899707052`"}], ",", "0.1277247791250083`", ",", 
   RowBox[{"-", "0.8463396203445468`"}], ",", 
   RowBox[{"-", "0.604974027054456`"}], ",", 
   RowBox[{"-", "0.4352811261275083`"}], ",", "0.6782820951254416`", ",", 
   "1.5190166620045482`", ",", "0.6569397788463551`", ",", 
   "0.09282345575528095`", ",", "0.8467165852409169`", ",", 
   "0.38514952093943133`", ",", "0.12479620592389686`", ",", 
   "1.4818520266172883`", ",", 
   RowBox[{"-", "0.5379721927669342`"}], ",", 
   RowBox[{"-", "0.9252316448601619`"}], ",", "0.4662551752203845`", ",", 
   RowBox[{"-", "0.08324318468140561`"}], ",", "1.685284765955209`", ",", 
   "1.4151948601390236`", ",", "1.575052123637613`", ",", 
   RowBox[{"-", "1.1590082668588855`"}], ",", "0.7834017084990962`", ",", 
   "0.20802768203811972`", ",", "0.8465496821119685`", ",", 
   "0.30639999513471666`", ",", 
   RowBox[{"-", "0.2202758979492051`"}], ",", "1.3646182540478575`", ",", 
   "0.9137245569226635`", ",", 
   RowBox[{"-", "0.28944878036692684`"}], ",", 
   RowBox[{"-", "1.2272345554839788`"}], ",", 
   RowBox[{"-", "0.8998390330438801`"}], ",", 
   RowBox[{"-", "0.3513022405433114`"}], ",", 
   RowBox[{"-", "0.4962520064927036`"}], ",", "0.5547328607921402`", ",", 
   RowBox[{"-", "0.4677136502483806`"}], ",", 
   RowBox[{"-", "0.3392094463153824`"}], ",", 
   RowBox[{"-", "0.86635169412161`"}], ",", 
   RowBox[{"-", "0.22959859464660393`"}], ",", 
   RowBox[{"-", "0.4786493711146915`"}], ",", 
   RowBox[{"-", "0.32394218849896445`"}], ",", 
   RowBox[{"-", "1.0776585150349691`"}], ",", 
   RowBox[{"-", "1.703762096588494`"}], ",", 
   RowBox[{"-", "0.7243376275265136`"}], ",", 
   RowBox[{"-", "0.3356680469373433`"}], ",", 
   RowBox[{"-", "0.8054079903769505`"}], ",", "0.28866556767168006`", ",", 
   "0.5313373856801037`", ",", "2.0065755726818733`", ",", 
   "1.501431341586513`", ",", 
   RowBox[{"-", "0.30275890080875484`"}], ",", "1.6375929159211264`", ",", 
   "1.2420827961591618`", ",", "2.429083500557096`", ",", 
   "0.8926100475314895`", ",", 
   RowBox[{"-", "0.6138479636450768`"}], ",", 
   RowBox[{"-", "0.10918901423625188`"}], ",", 
   RowBox[{"-", "0.06244093662940008`"}], ",", 
   RowBox[{"-", "0.034210291085529886`"}], ",", "0.7122771240077573`", ",", 
   RowBox[{"-", "0.3237541953371008`"}], ",", 
   RowBox[{"-", "0.5086630734189592`"}], ",", "0.7677846407774092`", ",", 
   "2.913269997205785`", ",", "2.8166211875750014`", ",", "1.3374491801101`", 
   ",", "1.17587266365575`", ",", "0.287787662566923`", ",", 
   "1.1681080817729852`", ",", "1.0482540171623589`", ",", 
   RowBox[{"-", "0.6224344839052041`"}], ",", 
   RowBox[{"-", "1.1049115368382347`"}], ",", 
   RowBox[{"-", "0.6526151317879629`"}], ",", 
   RowBox[{"-", "0.5090387342830165`"}], ",", "0.6338580418131249`", ",", 
   RowBox[{"-", "0.8953702937938892`"}], ",", 
   RowBox[{"-", "0.791940686336091`"}], ",", "0.7323985027762225`", ",", 
   RowBox[{"-", "0.864763912193706`"}], ",", "0.8203741593917308`", ",", 
   RowBox[{"-", "1.6874555878480084`"}], ",", 
   RowBox[{"-", "1.1907687931155222`"}], ",", 
   RowBox[{"-", "1.2804343424282019`"}], ",", 
   RowBox[{"-", "1.0600424602365837`"}], ",", 
   RowBox[{"-", "0.4225698773450937`"}], ",", "0.4056604583161562`", ",", 
   "0.10169008485290323`", ",", 
   RowBox[{"-", "0.21633808638677168`"}], ",", 
   RowBox[{"-", "0.12714813869112607`"}], ",", 
   RowBox[{"-", "0.6646589195732004`"}], ",", "0.4463318194582204`", ",", 
   "2.4738121463788225`", ",", "2.4702989491175766`", ",", 
   RowBox[{"-", "0.5256710754035637`"}], ",", 
   RowBox[{"-", "0.3387381697267058`"}], ",", "0.6690149876907208`", ",", 
   "1.3570374645062584`", ",", "1.8275929101364112`", ",", 
   RowBox[{"-", "0.2798160596801724`"}], ",", "2.2066568980359693`", ",", 
   RowBox[{"-", "1.0124421346147308`"}], ",", "2.125430214930316`", ",", 
   "1.1694962431025673`", ",", 
   RowBox[{"-", "0.2613712962576521`"}], ",", "2.4337309842443955`", ",", 
   RowBox[{"-", "0.38016170346166656`"}], ",", "0.07936937446105254`", ",", 
   "0.40928878822162285`", ",", "0.072232135422043`", ",", 
   "0.009011945019276327`", ",", 
   RowBox[{"-", "0.6243239073592849`"}], ",", 
   RowBox[{"-", "1.685914870269361`"}], ",", 
   RowBox[{"-", "1.1497792560069688`"}], ",", 
   RowBox[{"-", "0.8315813374229006`"}], ",", 
   RowBox[{"-", "1.1451239124023604`"}], ",", 
   RowBox[{"-", "1.265626753951955`"}], ",", 
   RowBox[{"-", "0.5180268524753906`"}], ",", 
   RowBox[{"-", "0.8949114968288581`"}], ",", 
   RowBox[{"-", "0.46734024210924247`"}], ",", 
   RowBox[{"-", "1.297991410622668`"}], ",", 
   RowBox[{"-", "2.1952722385854546`"}], ",", "2.2729131069927333`", ",", 
   "1.6108766990312886`", ",", "0.8036634096117972`", ",", 
   RowBox[{"-", "1.037895414397446`"}], ",", 
   RowBox[{"-", "1.5483286016852953`"}], ",", "0.3739229643601657`", ",", 
   "1.341890847032155`", ",", 
   RowBox[{"-", "0.7948971978271945`"}], ",", 
   RowBox[{"-", "0.2977654991160244`"}], ",", 
   RowBox[{"-", "0.6648217105528565`"}], ",", 
   RowBox[{"-", "0.5716000844174345`"}], ",", "0.8657789490675766`", ",", 
   RowBox[{"-", "0.7539189028179608`"}], ",", "0.1751974892990699`", ",", 
   "0.712812023098758`", ",", 
   RowBox[{"-", "1.6883407560026789`"}], ",", "0.5152691497472712`", ",", 
   "0.0651578086314283`", ",", "0.2744545245059231`", ",", 
   "1.5636660654373398`", ",", 
   RowBox[{"-", "0.7853391737659109`"}], ",", 
   RowBox[{"-", "1.950051215823448`"}], ",", "0.13646343016459483`", ",", 
   RowBox[{"-", "1.2421930540432216`"}], ",", 
   RowBox[{"-", "0.27756896401350817`"}], ",", 
   RowBox[{"-", "1.3168392033438974`"}], ",", "1.2985384143702383`", ",", 
   "0.12806154761977484`", ",", 
   RowBox[{"-", "0.13713835745445044`"}], ",", "0.3796803369860337`", ",", 
   "0.8769110504697794`", ",", 
   RowBox[{"-", "0.7584397100994299`"}], ",", 
   RowBox[{"-", "0.10736153298687746`"}], ",", "0.3767829373224648`", ",", 
   "0.5868685706527503`", ",", "0.2573391896129072`", ",", 
   RowBox[{"-", "1.0712610494078472`"}], ",", 
   RowBox[{"-", "1.2370869100788202`"}], ",", "1.5918878392435933`", ",", 
   "0.17613130649223888`", ",", "1.3737464407852025`", ",", 
   RowBox[{"-", "0.5165565004518331`"}], ",", 
   RowBox[{"-", "0.7034932951213813`"}], ",", "0.8783254250532819`", ",", 
   "1.254194862317469`", ",", 
   RowBox[{"-", "0.10970574421748154`"}], ",", 
   RowBox[{"-", "0.9127542972987881`"}], ",", 
   RowBox[{"-", "0.19636668437679528`"}], ",", "0.1854739734018586`", ",", 
   RowBox[{"-", "0.6269690043025593`"}], ",", "0.23676643333438865`", ",", 
   "1.0391639488207087`", ",", "1.476212337933165`", ",", 
   "1.4672387123269663`", ",", "1.3011760282066904`", ",", 
   "1.8777461615908597`", ",", "0.22029938198510782`", ",", 
   "0.09727186376920698`", ",", 
   RowBox[{"-", "0.8087242237630969`"}], ",", "0.11072080355399347`", ",", 
   "0.9581201141913185`", ",", "0.40757390233071245`", ",", 
   RowBox[{"-", "0.48201665398644766`"}], ",", "0.14284785563292654`", ",", 
   "0.7572347869995252`", ",", "0.8814263540722936`", ",", 
   "0.7929565984404108`", ",", "0.3167641150669064`", ",", 
   "1.501332903261571`", ",", "0.6392448976271807`", ",", 
   RowBox[{"-", "0.12543181985698923`"}], ",", 
   RowBox[{"-", "0.13524028563505935`"}], ",", "0.24069017118396158`", ",", 
   "0.5235046714067351`", ",", "0.536530811026331`", ",", 
   "1.2321230123167084`", ",", "0.22495667778669784`", ",", 
   "1.0746179859748408`", ",", 
   RowBox[{"-", "0.15938540830817283`"}], ",", "0.4892574934591995`", ",", 
   "0.14496504221201442`", ",", 
   RowBox[{"-", "0.03507206015207268`"}], ",", 
   RowBox[{"-", "0.22701551033561715`"}], ",", 
   RowBox[{"-", "0.3574010570589525`"}], ",", "0.3962983537054931`", ",", 
   "0.8040187852585924`", ",", 
   RowBox[{"-", "0.8028749288044212`"}], ",", "0.8189011460412129`", ",", 
   "1.9762576306912982`", ",", "0.15900861625790552`", ",", 
   RowBox[{"-", "0.49559180425315186`"}], ",", 
   RowBox[{"-", "0.5661009280288926`"}], ",", "1.3046497392308072`", ",", 
   "1.4315962274528595`", ",", "1.0261357290623643`", ",", 
   RowBox[{"-", "0.41237624689338503`"}], ",", 
   RowBox[{"-", "0.3301830002419388`"}], ",", "1.1818482512185196`", ",", 
   "0.22231799141057107`", ",", "0.09923846483451323`", ",", 
   "1.1882251451606891`", ",", 
   RowBox[{"-", "0.47555828396685457`"}], ",", 
   RowBox[{"-", "0.3442145411905273`"}], ",", 
   RowBox[{"-", "0.3239381622719893`"}], ",", 
   RowBox[{"-", "0.7110466214383357`"}], ",", 
   RowBox[{"-", "0.3373153887022604`"}], ",", 
   RowBox[{"-", "0.6891019564108122`"}], ",", 
   RowBox[{"-", "0.7047843736019916`"}], ",", 
   RowBox[{"-", "0.3877821126387289`"}], ",", "0.7054169663381226`", ",", 
   RowBox[{"-", "1.3718527699886427`"}], ",", 
   RowBox[{"-", "0.7559915912174472`"}], ",", 
   RowBox[{"-", "0.7398562687779224`"}], ",", 
   RowBox[{"-", "0.6737401993038171`"}], ",", "0.25684338211829394`", ",", 
   RowBox[{"-", "0.6064821587738959`"}], ",", "0.133690712688673`", ",", 
   RowBox[{"-", "0.4787931309297864`"}], ",", 
   RowBox[{"-", "0.2184512528872329`"}], ",", 
   RowBox[{"-", "0.19658977956082926`"}], ",", 
   RowBox[{"-", "0.13085459797992577`"}], ",", "0.4597204066388921`", ",", 
   "0.3657414147691331`", ",", 
   RowBox[{"-", "0.09801968790246599`"}], ",", 
   RowBox[{"-", "0.6189769535563587`"}], ",", 
   RowBox[{"-", "0.4684907862581601`"}], ",", "0.6527151456594203`", ",", 
   "0.3870566110498085`", ",", "0.2692701203701818`", ",", 
   RowBox[{"-", "0.702028616922392`"}], ",", 
   RowBox[{"-", "1.33657310856637`"}], ",", 
   RowBox[{"-", "1.3586964705042457`"}], ",", 
   RowBox[{"-", "0.7958848807965461`"}], ",", 
   RowBox[{"-", "0.9485694445215277`"}], ",", "0.15919949255392`", ",", 
   "1.780171304658432`", ",", "0.22081445679098355`", ",", 
   RowBox[{"-", "0.7917389439187656`"}], ",", 
   RowBox[{"-", "0.6865361672489517`"}], ",", 
   RowBox[{"-", "0.7382935918765214`"}], ",", 
   RowBox[{"-", "0.5607888519110907`"}], ",", "1.4939693321934928`", ",", 
   "0.8151650722852622`", ",", 
   RowBox[{"-", "0.9919174048319139`"}], ",", 
   RowBox[{"-", "1.1288921226260185`"}], ",", 
   RowBox[{"-", "0.9462441957023876`"}], ",", 
   RowBox[{"-", "0.43754884415196554`"}], ",", 
   RowBox[{"-", "1.3811983250379944`"}], ",", 
   RowBox[{"-", "0.8954921197713387`"}], ",", 
   RowBox[{"-", "0.8488637315484004`"}], ",", 
   RowBox[{"-", "0.520719681904264`"}], ",", 
   RowBox[{"-", "1.8199561635626194`"}], ",", "0.21649241945096184`", ",", 
   RowBox[{"-", "0.7581327478015754`"}], ",", 
   RowBox[{"-", "0.8007431646661141`"}], ",", 
   RowBox[{"-", "2.0456915361077113`"}], ",", 
   RowBox[{"-", "0.9554469729060205`"}], ",", 
   RowBox[{"-", "0.9939148077677841`"}], ",", 
   RowBox[{"-", "0.23802484491527268`"}], ",", 
   RowBox[{"-", "0.6241735483076638`"}], ",", 
   RowBox[{"-", "1.1248153285727986`"}], ",", 
   RowBox[{"-", "1.1450314535653754`"}], ",", 
   RowBox[{"-", "1.3608991747968906`"}], ",", 
   RowBox[{"-", "1.3111941164718526`"}], ",", 
   RowBox[{"-", "1.302632738074042`"}], ",", 
   RowBox[{"-", "0.6709778507953953`"}], ",", 
   RowBox[{"-", "0.6238918739252118`"}], ",", 
   RowBox[{"-", "0.8208500906165771`"}], ",", 
   RowBox[{"-", "0.383253825780914`"}], ",", 
   RowBox[{"-", "1.1901675439014934`"}], ",", 
   RowBox[{"-", "1.1907033327874124`"}], ",", 
   RowBox[{"-", "0.5232272045325007`"}], ",", 
   RowBox[{"-", "0.723901967050725`"}], ",", 
   RowBox[{"-", "0.5377173525668415`"}], ",", 
   RowBox[{"-", "0.5291679738862289`"}], ",", 
   RowBox[{"-", "0.45357550361226096`"}], ",", 
   RowBox[{"-", "0.9070494339805861`"}], ",", 
   RowBox[{"-", "1.0684968284864196`"}], ",", "0.24300208576838256`", ",", 
   RowBox[{"-", "0.24943143833670867`"}], ",", 
   RowBox[{"-", "0.3885653522701573`"}], ",", 
   RowBox[{"-", "0.13764048624225664`"}], ",", "0.41946030266714485`", ",", 
   RowBox[{"-", "0.6835978706993895`"}], ",", 
   RowBox[{"-", "0.7077841520421707`"}], ",", 
   RowBox[{"-", "0.5894842455392163`"}], ",", 
   RowBox[{"-", "0.018657421514999644`"}], ",", 
   RowBox[{"-", "1.951532911384714`"}], ",", 
   RowBox[{"-", "1.6280345521269943`"}], ",", 
   RowBox[{"-", "0.9674058504749244`"}], ",", 
   RowBox[{"-", "0.20182265414855413`"}], ",", 
   RowBox[{"-", "0.7510187324853596`"}], ",", 
   RowBox[{"-", "1.523149254557538`"}], ",", "1.5541079556840895`", ",", 
   RowBox[{"-", "0.595931148976784`"}], ",", 
   RowBox[{"-", "0.4637715310788336`"}], ",", 
   RowBox[{"-", "1.5489078451791398`"}], ",", 
   RowBox[{"-", "0.30761538886773476`"}], ",", "0.7730964828687875`", ",", 
   RowBox[{"-", "0.4232430586869181`"}], ",", 
   RowBox[{"-", "2.574590743439896`"}], ",", 
   RowBox[{"-", "0.19517101363546008`"}], ",", "1.0711297612999116`", ",", 
   RowBox[{"-", "1.7343976093568123`"}], ",", 
   RowBox[{"-", "0.6941534611476436`"}], ",", "0.2272117979712796`", ",", 
   "1.8393604868028681`", ",", 
   RowBox[{"-", "1.0962100153271956`"}], ",", "0.055538021129542536`", ",", 
   "1.1045759208210209`", ",", 
   RowBox[{"-", "0.4140453012224324`"}], ",", 
   RowBox[{"-", "0.7530686557285478`"}], ",", 
   RowBox[{"-", "0.8432539601160204`"}], ",", 
   RowBox[{"-", "0.8977213279274935`"}], ",", 
   RowBox[{"-", "0.5072370365699648`"}], ",", 
   RowBox[{"-", "1.2498896526546421`"}], ",", 
   RowBox[{"-", "0.5907240543022605`"}], ",", 
   RowBox[{"-", "0.5271325752297827`"}], ",", 
   RowBox[{"-", "0.9751904316283935`"}], ",", "1.2527909809038682`", ",", 
   "1.141592583927798`", ",", "0.9189047121449313`", ",", 
   "0.3776511923013481`", ",", "0.45879844415590115`", ",", 
   "2.0622267576491935`", ",", "0.7500217616361975`", ",", 
   "0.1582790131476496`", ",", 
   RowBox[{"-", "0.3431724486203869`"}], ",", 
   RowBox[{"-", "0.6820792538323768`"}], ",", "2.2419897879766597`", ",", 
   "2.943258071141268`", ",", "2.5598472127787995`", ",", 
   "2.5497805329104954`", ",", "3.115762259718217`", ",", 
   RowBox[{"-", "0.532844999147534`"}], ",", "0.15628304241543314`", ",", 
   "0.7859642653686877`", ",", 
   RowBox[{"-", "0.46573128475940273`"}], ",", 
   RowBox[{"-", "0.6267479951749804`"}], ",", "0.3534529322806426`", ",", 
   "0.21362401058234937`", ",", "0.8195963739094992`", ",", 
   RowBox[{"-", "0.07583913253788321`"}], ",", 
   RowBox[{"-", "0.3039320190418394`"}], ",", 
   RowBox[{"-", "0.2008533120712921`"}], ",", "0.4805606608956962`", ",", 
   "1.2390468181853247`", ",", 
   RowBox[{"-", "0.9013092796637411`"}], ",", "1.9762663609549511`", ",", 
   RowBox[{"-", "0.3202595835937019`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.710070675363427*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"{", 
   RowBox[{"residuals1", ",", "residuals2"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.710070744629275*^9, 3.7100708168047056`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.567], Thickness[Small]}], {{}, 
     {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{Opacity[
      0.567], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-3.5, 0.}, {-3., 1}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{75.45140465313426, 108.97036334950316`}, {
           156.79793017286556`, 159.01629535428268`}}],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-2.5, 0.}, {-2., 7}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{140.78932204587198`, 174.30828074224084`}, {
           148.58773908436277`, 159.01629535428268`}}],
         StatusArea[#, 7]& ,
         TagBoxNote->"7"],
        StyleBox["7", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[7, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-2., 0.}, {-1.5, 32}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{173.45828074224085`, 206.9772394386097}, {
           114.37860954893448`, 159.01629535428268`}}],
         StatusArea[#, 32]& ,
         TagBoxNote->"32"],
        StyleBox["32", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[32, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-1.5, 0.}, {-1., 133}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{206.1272394386097, 
           239.64619813497856`}, {-23.8262737741957, 159.01629535428268`}}],
         StatusArea[#, 133]& ,
         TagBoxNote->"133"],
        StyleBox["133", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[133, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-1., 0.}, {-0.5, 233}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{238.79619813497857`, 
           272.31515683134745`}, {-160.6627919159088, 159.01629535428268`}}],
         StatusArea[#, 233]& ,
         TagBoxNote->"233"],
        StyleBox["233", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[233, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.5, 0.}, {0., 243}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{271.46515683134743`, 
           304.9841155277163}, {-174.3464437300801, 159.01629535428268`}}],
         StatusArea[#, 243]& ,
         TagBoxNote->"243"],
        StyleBox["243", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[243, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0., 0.}, {0.5, 189}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{304.1341155277163, 
           337.6530742240852}, {-100.4547239335551, 159.01629535428265`}}],
         StatusArea[#, 189]& ,
         TagBoxNote->"189"],
        StyleBox["189", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[189, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.5, 0.}, {1., 115}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{336.80307422408515`, 370.32203292045403`}, {
           0.804299491312662, 159.01629535428268`}}],
         StatusArea[#, 115]& ,
         TagBoxNote->"115"],
        StyleBox["115", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[115, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1., 0.}, {1.5, 68}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{369.472032920454, 402.9909916168229}, {
           65.11746301791779, 159.01629535428268`}}],
         StatusArea[#, 68]& ,
         TagBoxNote->"68"],
        StyleBox["68", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[68, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.5, 0.}, {2., 29}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{402.1409916168229, 435.65995031319176`}, {
           118.48370509318586`, 159.01629535428268`}}],
         StatusArea[#, 29]& ,
         TagBoxNote->"29"],
        StyleBox["29", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[29, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2., 0.}, {2.5, 19}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{434.80995031319173`, 468.3289090095606}, {
           132.1673569073572, 159.01629535428268`}}],
         StatusArea[#, 19]& ,
         TagBoxNote->"19"],
        StyleBox["19", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[19, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.5, 0.}, {3., 8}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{467.4789090095606, 500.9978677059295}, {
           147.21937390294565`, 159.01629535428268`}}],
         StatusArea[#, 8]& ,
         TagBoxNote->"8"],
        StyleBox["8", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[8, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3., 0.}, {3.5, 6}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{500.14786770592946`, 533.6668264022983}, {
           149.95610426577989`, 159.01629535428268`}}],
         StatusArea[#, 6]& ,
         TagBoxNote->"6"],
        StyleBox["6", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[6, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3.5, 0.}, {4., 3}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{532.8168264022984, 566.3357850986674}, {
           154.0611998100313, 159.01629535428268`}}],
         StatusArea[#, 3]& ,
         TagBoxNote->"3"],
        StyleBox["3", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4., 0.}, {4.5, 3}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{565.4857850986673, 599.0047437950362}, {
           154.0611998100313, 159.01629535428268`}}],
         StatusArea[#, 3]& ,
         TagBoxNote->"3"],
        StyleBox["3", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3, {}], "Tooltip"]& ]}, {}, {}}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{Opacity[
      0.567], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-4., 0.}, {-3.5, 1}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{42.7824459567654, 76.3014046531343}, {
           156.79793017286556`, 159.01629535428268`}}],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-3., 0.}, {-2.5, 1}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{108.12036334950312`, 141.639322045872}, {
           156.79793017286556`, 159.01629535428268`}}],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-2.5, 0.}, {-2., 6}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{140.78932204587198`, 174.30828074224084`}, {
           149.95610426577989`, 159.01629535428268`}}],
         StatusArea[#, 6]& ,
         TagBoxNote->"6"],
        StyleBox["6", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[6, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-2., 0.}, {-1.5, 31}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{173.45828074224085`, 206.9772394386097}, {
           115.74697473035162`, 159.01629535428268`}}],
         StatusArea[#, 31]& ,
         TagBoxNote->"31"],
        StyleBox["31", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[31, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-1.5, 0.}, {-1., 104}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{206.1272394386097, 239.64619813497856`}, {
           15.856316486901079`, 159.01629535428268`}}],
         StatusArea[#, 104]& ,
         TagBoxNote->"104"],
        StyleBox["104", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[104, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-1., 0.}, {-0.5, 229}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{238.79619813497857`, 
           272.31515683134745`}, {-155.18933119024027`, 159.01629535428268`}}],
         StatusArea[#, 229]& ,
         TagBoxNote->"229"],
        StyleBox["229", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[229, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.5, 0.}, {0., 228}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{271.46515683134743`, 
           304.9841155277163}, {-153.82096600882315`, 159.01629535428268`}}],
         StatusArea[#, 228]& ,
         TagBoxNote->"228"],
        StyleBox["228", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[228, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0., 0.}, {0.5, 206}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{304.1341155277163, 
           337.6530742240852}, {-123.71693201764629`, 159.01629535428265`}}],
         StatusArea[#, 206]& ,
         TagBoxNote->"206"],
        StyleBox["206", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[206, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.5, 0.}, {1., 114}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{336.80307422408515`, 370.32203292045403`}, {
           2.1726646727297805`, 159.01629535428268`}}],
         StatusArea[#, 114]& ,
         TagBoxNote->"114"],
        StyleBox["114", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[114, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1., 0.}, {1.5, 89}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{369.472032920454, 402.9909916168229}, {
           36.38179420815804, 159.01629535428268`}}],
         StatusArea[#, 89]& ,
         TagBoxNote->"89"],
        StyleBox["89", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[89, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.5, 0.}, {2., 39}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{402.1409916168229, 435.65995031319176`}, {
           104.80005327901456`, 159.01629535428268`}}],
         StatusArea[#, 39]& ,
         TagBoxNote->"39"],
        StyleBox["39", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[39, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2., 0.}, {2.5, 21}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{434.80995031319173`, 468.3289090095606}, {
           129.43062654452294`, 159.01629535428268`}}],
         StatusArea[#, 21]& ,
         TagBoxNote->"21"],
        StyleBox["21", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[21, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.5, 0.}, {3., 9}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{467.4789090095606, 500.9978677059295}, {
           145.8510087215285, 159.01629535428268`}}],
         StatusArea[#, 9]& ,
         TagBoxNote->"9"],
        StyleBox["9", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[9, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3., 0.}, {3.5, 5}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{500.14786770592946`, 533.6668264022983}, {
           151.32446944719703`, 159.01629535428268`}}],
         StatusArea[#, 5]& ,
         TagBoxNote->"5"],
        StyleBox["5", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3.5, 0.}, {4., 3}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{532.8168264022984, 566.3357850986674}, {
           154.0611998100313, 159.01629535428268`}}],
         StatusArea[#, 3]& ,
         TagBoxNote->"3"],
        StyleBox["3", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4., 0.}, {4.5, 3}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{565.4857850986673, 599.0047437950362}, {
           154.0611998100313, 159.01629535428268`}}],
         StatusArea[#, 3]& ,
         TagBoxNote->"3"],
        StyleBox["3", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3, {}], 
        "Tooltip"]& ]}, {}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}, {}}, {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-4.17, 0.},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-4., 4.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7100707742381945`*^9, 3.710070817442833*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LocationEquivalenceTest", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"residuals1", ",", "residuals2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<TestDataTable\>\"", ",", "All"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7100706865756693`*^9, 3.710070688559066*^9}, {
  3.7100707192171946`*^9, 3.710070730386428*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"\<\"Friedman Rank\"\>", "408.5691379790294`", 
      "2.1769819819396316`*^-77"},
     {"\<\"Kruskal\[Hyphen]Wallis\"\>", "5.512966702161975`", 
      "0.018841617393436684`"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.710070731214593*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LocationTest", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"residuals1", ",", "residuals2"}], "}"}], ",", "Automatic", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<TestDataTable\>\"", ",", "All"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.710070940109357*^9, 3.7100709612695875`*^9}, 
   3.7100709925818477`*^9}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"\<\"Mann\[Hyphen]Whitney\"\>", "558505.`", "0.01887427629069524`"},
     {"\<\"Sign\"\>", "260", "1.1046152399772143`*^-69"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{{3.7100709408265095`*^9, 3.7100709619287186`*^9}, 
   3.7100709938571033`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"IndependenceTest", "[", 
   RowBox[{"residuals1", ",", "residuals2", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<TestDataTable\>\"", ",", "All"}], "}"}]}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.710071328668231*^9, 3.7100713383341627`*^9}, 
   3.7100714060837083`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{
    RowBox[{"trainingset", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "7", ",", "8"}], "}"}]}], "]"}], "]"}], "\[Rule]", 
    RowBox[{"Standardize", "[", 
     RowBox[{"trainingset", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "9"}], "]"}], "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.709938311722932*^9, 3.709938323528329*^9}, {
   3.7099383939406323`*^9, 3.709938396706202*^9}, {3.7099384786168337`*^9, 
   3.7099384822875795`*^9}, {3.7099385224777436`*^9, 3.7099385275187683`*^9}, 
   3.709947964195163*^9, 3.7099482788205357`*^9, 3.709955593590539*^9, 
   3.7099827434228754`*^9, {3.7100627825516663`*^9, 3.7100627970178366`*^9}, {
   3.710069332541961*^9, 3.7100693405155554`*^9}, 3.710070167476887*^9}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{}, {{}, {
                  PointSize[0.125], 
                  GrayLevel[0.55], 
                  
                  PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                    4, 4.}}]}, {
                  GrayLevel[0.7], 
                  AbsoluteThickness[1.5], 
                  
                  BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                   5, 4}}]}}, {}}, Axes -> {False, False}, 
               AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
               BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {All, All}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of features: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{}, {{}, {
                  PointSize[0.125], 
                  GrayLevel[0.55], 
                  
                  PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                    4, 4.}}]}, {
                  GrayLevel[0.7], 
                  AbsoluteThickness[1.5], 
                  
                  BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                   5, 4}}]}}, {}}, Axes -> {False, False}, 
               AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
               BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {All, All}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of features: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["8073", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.709938338273324*^9, 3.7099384107090387`*^9, 
  3.7099384945470705`*^9, 3.7099479350071907`*^9, 3.709948259435571*^9, 
  3.7099482929864345`*^9, 3.7099827580537987`*^9, 3.71006181961294*^9, 
  3.7100628099104404`*^9, 3.710069353211093*^9, 3.7100701817327375`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "=", 
  RowBox[{"PredictorMeasurements", "[", 
   RowBox[{"p", ",", 
    RowBox[{
     RowBox[{"testset", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"6", ",", "7", ",", "8"}], "}"}]}], "]"}], "]"}], "\[Rule]", 
     RowBox[{"Standardize", "[", 
      RowBox[{"testset", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "9"}], "]"}], "]"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7099479414545097`*^9, 3.7099479532639265`*^9}, 
   3.709955600397936*^9, 3.709982751837556*^9, {3.7100693469498415`*^9, 
   3.710069352682988*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorMeasurementsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  GrayLevel[0.6], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  Dashing[{Small, Small}], 
                  
                  LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                   11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                   GrayLevel[0.4], 
                   PointSize[0.09], 
                   AbsoluteThickness[1.6], 
                   
                   PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                    2.227816320451859, 2.584653237430766}, {3.043099335090081,
                     4.798822972025658}, {3.5728355469237116`, 
                    5.9507424155697155`}, {4.158566334344331, 
                    5.2097676165465385`}, {4.824808988689111, 
                    7.23346088027902}, {6.88649660338492, 
                    5.297021421229134}, {7.819072150835878, 
                    6.533166043611269}, {8.437306856915493, 
                    8.81724006216815}, {8.604907881861761, 
                    11.302704526196452`}}]}, {}}, {}}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1089", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  GrayLevel[0.6], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  Dashing[{Small, Small}], 
                  
                  LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                   11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                   GrayLevel[0.4], 
                   PointSize[0.09], 
                   AbsoluteThickness[1.6], 
                   
                   PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                    2.227816320451859, 2.584653237430766}, {3.043099335090081,
                     4.798822972025658}, {3.5728355469237116`, 
                    5.9507424155697155`}, {4.158566334344331, 
                    5.2097676165465385`}, {4.824808988689111, 
                    7.23346088027902}, {6.88649660338492, 
                    5.297021421229134}, {7.819072150835878, 
                    6.533166043611269}, {8.437306856915493, 
                    8.81724006216815}, {8.604907881861761, 
                    11.302704526196452`}}]}, {}}, {}}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1089", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"StandardDeviation: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["0.9931747751281856`", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorMeasurementsObject[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7099482935415487`*^9, 3.709982758532893*^9, 
  3.7100618201475816`*^9, 3.7100628105709667`*^9, 3.710069353801211*^9, 
  3.7100701822248354`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ComparisonPlot\>\"", "]"}]], "Input"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.004583333333333334], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1: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
fNGe/OIN1pd30rZNuWhhvW7z0G/t/aPNeJ/w+073whn02zkZ47OXz6G/DqdN
0c2tnILx9s+KnW2lRJ/bLKuovZ5Xjufp4JdXn4fQZ3o5/DFV3cD94K2job7n
g/XRIqkdkrpqqVgfXSRw/1xWE/CpYr6/E9SYn+jmXKULB3A9p7Je5V3m2wM+
EJrollNZBO05Byi/DbYtQfyrvsIqTxie996Tgs3R5Oirs05J6y41ov+O2Lpq
apRRCCzLqRIRe7EI2oeW7T6ReNkJcY1sTuZZHqwXP/7uGPmf05gvrpGbxF1d
2cA2CTVtxZexv4m05fRoD9afC/6WM6/51IjrH31mWcCKfrzWcdV2vXAJfNd5
xcF3Tk5Yj2yu9rzGp7cc+HDpoV8EpKtYP8xdJaBlgb7z0PQFynxT9GtyKqlS
b4WwnpTPIbpGnR3rqeXGx+7YWuRA+4Hka4JE3Oijr3v8aTVrwvrUYpaekgzq
SqznDjbe6N7C+vBbUS1sllH16Kvn1Ty9vmP99EGahZ2f8WvAIxvxlovOyJPd
GpxFPTi/9cjd33qM+O8zbpVoWPU5478POfn7UTKhRxawz/WeqzW1eL7W7yxY
GGzmQjyK+kLHmTys35aZznL4T7Ib/WpyS1ZDCta/dx5fX58LKYZ4/dzjcs9r
6O/FrRS0pxQwv6RvhjsEX0wA37zwJrr2bCuwoqa5txkh1lczuTF6fDMeBrYO
tWKSP4X14FJGtyyTnqEP7XpiVV6fVI/1rxY6qkK5WK8r8r6VdeQ4+jSFoPj2
oPQl4DeBVDxTWVhf7cjE3GUhhL6yfZxhVcS6FHyN+YKJh5z8X6xn3k38VvgK
88F/Tmbe5mU0tJ+5efWB6uE6YNHs8Xr9cfRL/Ny8X8/fQB+4o+O4/8Qv9O3K
p6Svv82YgPVSU7c4/FKYhOeFKZ+XyA3dg/bRr5V/zirgfUaH+TMKce+/0D84
pe7+hX2DeF9R4uqzNYHn63rPZtjyAr5PrLdFLU+/xPOaLMac0izRDf1Ncp0u
CGygT39afDqqbRj9766CqMQLfczvO/KV+NJLWcDudQmBVQS4Hx9tpXjkrdFX
K86qemnSYr5UH12QOVLaij4t6fAT2TL0f3mXcp6oRqEPP0ZYx/6aDuOjCUYu
Kz7Ig5ILp3m7sb70nRP1fsMPWP/OG9ufoLSCvm5gaX+H+dlxrEedLY24lIr1
2DrZ0gJf/dA3H1MNZn34uBHGG8hMbftuPATxF126OWqURRAnmsuik/+B65+y
sDqZSF4L/Jdts1NNogqYhfTZSdWmQuBKryXiG/pY376YXOflp4P1+RnDkxt5
4vjvF2KtPqqTteB8xLbuj9mR4POF7rle+9GHvv+1kcdaXS76T4rDZyJ3hNF3
B4Q2yevZYX5dFfvlqh5i/gKVPyk9LkA2kq3jlnmF9yu8S+V9lDpYLy+/Qjok
dK0UxtfRmeZ6ZLON91eVZxKEhPF8VUYMWSvdxfGKSiVkrbdxPzq3d82sYnC/
Spruk91ZRf8zrmAfRDW4Bn7osfmo9U3KSeCPh2NPKFain30/x7t1mhF95OX4
s2+4NWaB9+1WUtYyou/mmIs9+4UT/WwQ39QP7TT0h+czw3r1RbEeuMT7yYRE
Ot6HZP74fiTr8A7w/UtJ1d4xNfi9YMkR2LmC59N6lTn1QAzm49JD/snv2gSF
/zgu8BezfhDO991VIZLYTlyfh0mLTdDnemDlH8QG2cToPz3aGXntSXD9h1Ya
ryprItOcIiCyr0F/bLZEYDu6h/Wfzmqvz7f1Ig/5+XEfd0ZfLXZTIsmIEJ9H
zB63N6qK9wkLCVkS4uHoAxNK6icFabH+XfGrZ442PXLDQ22f8kr030RHeajS
RdFnqg1phdtK4XlQO/1ZzmwD27Pl385+wIH3IcrkeVxUdOgf39xum244hPXz
H8NpB9Pm6+H8GBffeplEifcnD3/90Zdewvn/fUtjJlyJ9zMUTumdz0u6of+r
TQEJ90nMDwMHi+f3FLxvYXZ6FOc1hj7bcFPrwsBTf+AYLkPtbMk9zP9mS+EP
OvT3ETfY01/tYT0z1wL3a/U99NVlpNlknfRYH5yefuw93UP0276n1JwedK6j
f2O7UX2fA/1p9YjNmkkJ5u/vD359vzqsL6e2dIpeK8X66B6COcmMtHEYz0cg
TMJQAH2dBUf7jF4YCdQz/94YsdM6hvPdE7HiZ+VcgP63uoMdNMu20PdZxYwT
yGD9tNPpC3cUpmqhfYqCv1XZkx1g5pwK1eveWH9sdvObhmNFAuyPj8Z7Qpa4
BeCNwuz9mf5Yvx4rN0T2hQfzR9PmoP6MDN93EbG5759L0aeSVV4rqryM52+8
S4WplgTfF4on335nLOB+1y1ezSodx/ab8kq8slJY33jXJs/iDgn+/xAcDDTt
Bi6iD3Gk6vvq8P/+fwGZRsz27DT4e0zi5bXcKOk/kA9xm2udja8IpCG/PCpU
SStjEPcaJ/jPnqUU+M7d9EJ3ynZY35EDSy+Z+/C+IrKkyWx9mhDGi2Bw3OH3
IAfOUhKVX7AiAb5ZqfL8uj7y2mrJnxeTFMDsu+7vPjKjL/7mYt/M1FEC83G8
SrPAyYG/T9sVThD+ncTfv418BSSvOND3sEr+Fx3jhPWdASciZHS4aoDtZgrW
1gTQ1wSt9fE59/yE/vkllmlL3ujnGgyl3c7P4nkNGq3RcErsg/mtPxVZHaxD
X0cuvlSSMoLnw4P1VpJHyB60F80Wk+D2by34H4ZSH7A=
          "]]}, {}}}, {}, {}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           GrayLevel[0.5], 
           Dashing[{Small, Small}], 
           Thickness[0.002]], 
          LineBox[CompressedData["
1:eJxFxXswE3AcAPANsxmbR5JTdulWEs3RnUMOvTzOtTMmcVOzmi7uOPpnp0hm
t7z6ozy3CzujNJpXmeYx5hxJs5Iyzh8s1yZbt26Xck71x76/Pz738eMUpHDt
MBjM5X/+P3xTkBfT56qynV9t+aqRoan919nsTvSj/Yi0B2I0R2SKVgvQxIV0
j/hMNOvsqWG6PXrfXeN4LY0MH5zkiCNWXeAabkvigXvO8NoVEuvTMSKMSZq+
xewmwPxQ/1otHQ8vHfkgc17EwQ5pvTQa2wF+UhY2R8fZw5aXjtlBtVi4f6HU
jUDDwOIyZkKTbG/cdiE3hiNS/YGdQorlTfgd+JxdotnN0woHF5T+yqBZ4HEB
PifaaoLZ4ZGTI94GWKBwEZxp24AXheTMKO4KbPGJauwq18ANisEAXv0ArMh9
36cuV8bYLp7x9NKsaeE84WHKi45V2HTI0EMP1MPtLdRNTasB9vYJj8iqNMOu
weMlUpkFZuQ+DmxhW+GfrdpN3+Qd+KNJlS8h7cJ7kkQac3QPVvu3lkynYmJt
n6gufKuXY+Hhrd++cQH28NZVXXpXpQN8nic8Td3AwbN1Rqf1DDxsHu14Jxki
wJf0Xg3SUCKsGmHujnU6wzqJMW4FS4KpFWHNkcVkmHRHpxUvu6KrjqcSm93g
oGVF7LdUd1hM4/nF23nALAFWycChKatVTBYBLal8Kiwko5/pJ7fFPugBEenN
j1D0nGN7iugGuiYr6Ls0B00ffCWQ30Zrs2cUUwXozyPbFPNd9EZR+NaFOrR0
dqKC3ojOOZpEyRChDfNZjPw2tPkkf6ipG91734XRLkcXLdUbe/rRVv5zX7UC
/VoXMjSvRPNClMlfxtCRDy8a1yfQu2vz/O0p9F/DyD+p
           "]]}, 
         Annotation[#, "Charting`Private`Tag$474739#1"]& ]}}, {}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, 
     PlotRange -> {{-3.961546921917627, 
      4.692312473896715}, {-3.961546921917627, 4.692312473896715}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"actual value\"", TraditionalForm], None}, {
        FormBox["\"predicted value\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-3.961546921917627, 
      4.692312473896715}, {-3.961546921917627, 4.692312473896715}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"predictions\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"perfect prediction line\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}], 
                    Thickness[0.018000000000000002`]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}], 
                    Thickness[0.018000000000000002`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7099482937986*^9, 3.709982758638915*^9, 
  3.710061763935313*^9, 3.7100618202659273`*^9, 3.710061861765993*^9, 
  3.710062810795169*^9, 3.7100693557185965`*^9, 3.7100701823558617`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<StandardDeviation\>\"", "]"}]], "Input"],

Cell[BoxData["0.9931747751281856`"], "Output",
 CellChangeTimes->{3.709948293897621*^9, 3.7099827586749215`*^9, 
  3.710061768714899*^9, 3.7100618310333576`*^9, 3.7100628108533545`*^9, 
  3.7100693581650834`*^9, 3.7100701824178734`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ResidualHistogram\>\"", "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.574], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.574], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-3.5, 0}, {-3., 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{69.7940000000001, 103.70100000000012`}, {
          137.61586457819095`, 139.78082610175463`}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-2.5, 0}, {-2., 5}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{135.90800000000007`, 169.81500000000008`}, {
          132.3560184839362, 139.78082610175463`}}],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-2., 0}, {-1.5, 24}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{168.9650000000001, 202.8720000000001}, {
          107.37174953622615`, 139.78082610175463`}}],
        StatusArea[#, 24]& ,
        TagBoxNote->"24"],
       StyleBox["24", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[24, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-1.5, 0}, {-1., 116}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{202.0220000000001, 
          235.9290000000001}, {-13.604710631632969`, 139.78082610175463`}}],
        StatusArea[#, 116]& ,
        TagBoxNote->"116"],
       StyleBox["116", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[116, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-1., 0}, {-0.5, 203}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{235.0790000000001, 
          268.9860000000001}, {-128.00636318167375`, 139.7808261017546}}],
        StatusArea[#, 203]& ,
        TagBoxNote->"203"],
       StyleBox["203", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[203, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-0.5, 0}, {0., 246}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{268.1360000000001, 
          302.0430000000001}, {-184.5497086949122, 139.78082610175463`}}],
        StatusArea[#, 246]& ,
        TagBoxNote->"246"],
       StyleBox["246", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[246, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {0.5, 195}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{301.1930000000001, 
          335.10000000000014`}, {-117.48667099316424`, 139.7808261017546}}],
        StatusArea[#, 195]& ,
        TagBoxNote->"195"],
       StyleBox["195", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[195, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.5, 0}, {1., 132}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{334.2500000000001, 
          368.1570000000001}, {-34.64409500865196, 139.78082610175466`}}],
        StatusArea[#, 132]& ,
        TagBoxNote->"132"],
       StyleBox["132", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[132, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1., 0}, {1.5, 87}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{367.3070000000001, 401.2140000000001}, {
          24.52917355171391, 139.78082610175463`}}],
        StatusArea[#, 87]& ,
        TagBoxNote->"87"],
       StyleBox["87", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[87, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.5, 0}, {2., 37}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{400.3640000000001, 434.27100000000013`}, {
          90.27724972989823, 139.78082610175463`}}],
        StatusArea[#, 37]& ,
        TagBoxNote->"37"],
       StyleBox["37", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[37, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2., 0}, {2.5, 21}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{433.4210000000001, 467.32800000000015`}, {
          111.31663410691719`, 139.78082610175463`}}],
        StatusArea[#, 21]& ,
        TagBoxNote->"21"],
       StyleBox["21", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[21, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2.5, 0}, {3., 10}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{466.4780000000001, 500.38500000000016`}, {
          125.78121086611776`, 139.78082610175463`}}],
        StatusArea[#, 10]& ,
        TagBoxNote->"10"],
       StyleBox["10", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[10, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3., 0}, {3.5, 6}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{499.53500000000014`, 533.442}, {
          131.04105696037252`, 139.78082610175463`}}],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3.5, 0}, {4., 3}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{532.5920000000001, 566.4990000000003}, {
          134.98594153106356`, 139.78082610175463`}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4., 0}, {4.5, 3}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{565.6490000000001, 599.5560000000003}, {
          134.98594153106356`, 139.78082610175463`}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{-3.66, 0},
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"count\"", TraditionalForm], None}, {
     FormBox["\"actual value - predicted value\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-3.5, 4.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7099495571940966`*^9, 3.7099827596071095`*^9, 
  3.7100618419464912`*^9, 3.7100628109411106`*^9, 3.71006936078961*^9, 
  3.7100701825258956`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ResidualPlot\>\"", "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
3AL2X3hJI3m/JP77kZ00lbvD3uK/79Bqj0jUO4DnfaL08ZUWfvRX+XRplh82
+Ps8ryJUy8cf9Z9KqxvZ3EGoRyvGv7MacUB97qWuAG2tL/4eC70e4ds6Vwv7
kyfiyitVSQj7k0rh9SXtJZ7XTe2lsoLb3cC2SfMZ/ATxsL59x22l41Q7gA+6
E5SZixFDf+z1ieohreTAEqTGb6+WkAB3ermUFH1Bdvk6Jzh8ghKYnv9kl/ij
OuifgCuFhvoSzqeKZZh9hhv1o4j7TZnkHfj7l+TJlgQ9Af4+1vnlotfnWID6
6G66dotCK7DLPnfPMZBHvUbdZUmCLrcR7HQFzrSBn1Gf05xnSVfNRf+7Oszm
SujzA+ZHNOQXXmSO+n6Y0j63qCHU2xUqdI6KMOL+y3+hfr4gEwH9E/zf//3h
P/yH//Af/nsY4p//8H8J/znPP/yv5N/61h/+9+B/t/P6raf84f8c/nNef/h/
Ev/WZ/638p/9/MN/J4Me+If/U/jvPp+/+/f+/3T+V/vL372eP/yH//Af/sP/
7/x3629/t378r7b/s3r1v1rv/rv39w//99Kz/9nn/9302b97/H83Pfp/mh76
z+7H360f/9Gz//B/pf75310//Vev99+d/+79/sP/u/Tm/6/5/kft/+568z97
fv9P+9/9+/xfref+V+vD/9V68x99+g//4T/8h/9n8n9U3/2fzv+sfv2fvf9/
9Os//O+kF/934z/7/e+lh/5nz+e/Wu/+734ef/gP/0/SX/+3r/8P//fWr//u
8f/d9Oj/qN7+z/J/tn78353/bv3in53f/9/2DVHfWAnuYH7p6d7rITc+Yf2q
rQKm2rgfVcCR7/zJ30VhflzBL/2cgimYT+b+Qtj2X3JbYC8rYBkV9yOX/M3P
U7YpNo5SAqt3lzPsHSMDvnIjTsRmH9ZrlNqWc266APPB3id599M5APNfH1M4
QhNVjPmYz7XEne7fi/mPiR8d9RLPwPzX8Z96Ik+3Y75xI4mqk2UmrcAxDSRv
VyUw/8t4ya65iIJe6J/sSTrNmNF3YCuhUIFhPawH2B38hOuRPebDJt8o4fAQ
IYH1ba3a+ETpYr5iM/H1nBvNHdCeVLF/8fAZzHfLLLcc/2kG80U3x1rdvdSF
67PzHo1wSsX81LcGVbTkFjH/+PEztixnGjAft1fXd+f9tJjfJz/niFQmF54n
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
    "], {{{}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{1090, 1}], LineBox[{1091, 2}], LineBox[{1092, 3}], 
       LineBox[{1094, 5}], LineBox[{1100, 11}], LineBox[{1101, 12}], 
       LineBox[{1102, 13}], LineBox[{1108, 19}], LineBox[{1109, 20}], 
       LineBox[{1110, 21}], LineBox[{1115, 26}], LineBox[{1116, 27}], 
       LineBox[{1118, 29}], LineBox[{1119, 30}], LineBox[{1126, 37}], 
       LineBox[{1127, 38}], LineBox[{1128, 39}], LineBox[{1129, 40}], 
       LineBox[{1130, 41}], LineBox[{1132, 43}], LineBox[{1134, 45}], 
       LineBox[{1135, 46}], LineBox[{1139, 50}], LineBox[{1148, 59}], 
       LineBox[{1149, 60}], LineBox[{1150, 61}], LineBox[{1151, 62}], 
       LineBox[{1152, 63}], LineBox[{1154, 65}], LineBox[{1160, 71}], 
       LineBox[{1161, 72}], LineBox[{1162, 73}], LineBox[{1163, 74}], 
       LineBox[{1165, 76}], LineBox[{1172, 83}], LineBox[{1175, 86}], 
       LineBox[{1177, 88}], LineBox[{1180, 91}], LineBox[{1181, 92}], 
       LineBox[{1185, 96}], LineBox[{1189, 100}], LineBox[{1192, 103}], 
       LineBox[{1201, 112}], LineBox[{1202, 113}], LineBox[{1206, 117}], 
       LineBox[{1208, 119}], LineBox[{1209, 120}], LineBox[{1210, 121}], 
       LineBox[{1211, 122}], LineBox[{1230, 141}], LineBox[{1235, 146}], 
       LineBox[{1236, 147}], LineBox[{1237, 148}], LineBox[{1239, 150}], 
       LineBox[{1240, 151}], LineBox[{1241, 152}], LineBox[{1246, 157}], 
       LineBox[{1262, 173}], LineBox[{1265, 176}], LineBox[{1266, 177}], 
       LineBox[{1267, 178}], LineBox[{1268, 179}], LineBox[{1272, 183}], 
       LineBox[{1293, 204}], LineBox[{1306, 217}], LineBox[{1307, 218}], 
       LineBox[{1312, 223}], LineBox[{1319, 230}], LineBox[{1325, 236}], 
       LineBox[{1326, 237}], LineBox[{1335, 246}], LineBox[{1336, 247}], 
       LineBox[{1337, 248}], LineBox[{1338, 249}], LineBox[{1339, 250}], 
       LineBox[{1340, 251}], LineBox[{1341, 252}], LineBox[{1342, 253}], 
       LineBox[{1345, 256}], LineBox[{1346, 257}], LineBox[{1347, 258}], 
       LineBox[{1349, 260}], LineBox[{1350, 261}], LineBox[{1351, 262}], 
       LineBox[{1352, 263}], LineBox[{1353, 264}], LineBox[{1356, 267}], 
       LineBox[{1357, 268}], LineBox[{1358, 269}], LineBox[{1359, 270}], 
       LineBox[{1360, 271}], LineBox[{1361, 272}], LineBox[{1362, 273}], 
       LineBox[{1363, 274}], LineBox[{1364, 275}], LineBox[{1365, 276}], 
       LineBox[{1366, 277}], LineBox[{1367, 278}], LineBox[{1368, 279}], 
       LineBox[{1369, 280}], LineBox[{1370, 281}], LineBox[{1371, 282}], 
       LineBox[{1372, 283}], LineBox[{1373, 284}], LineBox[{1375, 286}], 
       LineBox[{1376, 287}], LineBox[{1377, 288}], LineBox[{1378, 289}], 
       LineBox[{1380, 291}], LineBox[{1381, 292}], LineBox[{1382, 293}], 
       LineBox[{1383, 294}], LineBox[{1386, 297}], LineBox[{1387, 298}], 
       LineBox[{1388, 299}], LineBox[{1391, 302}], LineBox[{1392, 303}], 
       LineBox[{1393, 304}], LineBox[{1394, 305}], LineBox[{1396, 307}], 
       LineBox[{1399, 310}], LineBox[{1400, 311}], LineBox[{1401, 312}], 
       LineBox[{1402, 313}], LineBox[{1403, 314}], LineBox[{1404, 315}], 
       LineBox[{1405, 316}], LineBox[{1406, 317}], LineBox[{1407, 318}], 
       LineBox[{1408, 319}], LineBox[{1409, 320}], LineBox[{1410, 321}], 
       LineBox[{1411, 322}], LineBox[{1412, 323}], LineBox[{1413, 324}], 
       LineBox[{1414, 325}], LineBox[{1415, 326}], LineBox[{1418, 329}], 
       LineBox[{1419, 330}], LineBox[{1420, 331}], LineBox[{1421, 332}], 
       LineBox[{1424, 335}], LineBox[{1425, 336}], LineBox[{1426, 337}], 
       LineBox[{1427, 338}], LineBox[{1428, 339}], LineBox[{1429, 340}], 
       LineBox[{1431, 342}], LineBox[{1432, 343}], LineBox[{1433, 344}], 
       LineBox[{1434, 345}], LineBox[{1435, 346}], LineBox[{1436, 347}], 
       LineBox[{1437, 348}], LineBox[{1438, 349}], LineBox[{1439, 350}], 
       LineBox[{1440, 351}], LineBox[{1441, 352}], LineBox[{1442, 353}], 
       LineBox[{1443, 354}], LineBox[{1444, 355}], LineBox[{1449, 360}], 
       LineBox[{1450, 361}], LineBox[{1451, 362}], LineBox[{1452, 363}], 
       LineBox[{1459, 370}], LineBox[{1461, 372}], LineBox[{1462, 373}], 
       LineBox[{1463, 374}], LineBox[{1464, 375}], LineBox[{1465, 376}], 
       LineBox[{1466, 377}], LineBox[{1467, 378}], LineBox[{1468, 379}], 
       LineBox[{1469, 380}], LineBox[{1472, 383}], LineBox[{1473, 384}], 
       LineBox[{1474, 385}], LineBox[{1475, 386}], LineBox[{1477, 388}], 
       LineBox[{1478, 389}], LineBox[{1479, 390}], LineBox[{1480, 391}], 
       LineBox[{1481, 392}], LineBox[{1482, 393}], LineBox[{1483, 394}], 
       LineBox[{1484, 395}], LineBox[{1485, 396}], LineBox[{1486, 397}], 
       LineBox[{1487, 398}], LineBox[{1488, 399}], LineBox[{1491, 402}], 
       LineBox[{1492, 403}], LineBox[{1493, 404}], LineBox[{1494, 405}], 
       LineBox[{1495, 406}], LineBox[{1496, 407}], LineBox[{1500, 411}], 
       LineBox[{1501, 412}], LineBox[{1502, 413}], LineBox[{1503, 414}], 
       LineBox[{1506, 417}], LineBox[{1507, 418}], LineBox[{1508, 419}], 
       LineBox[{1509, 420}], LineBox[{1510, 421}], LineBox[{1511, 422}], 
       LineBox[{1512, 423}], LineBox[{1515, 426}], LineBox[{1516, 427}], 
       LineBox[{1517, 428}], LineBox[{1518, 429}], LineBox[{1519, 430}], 
       LineBox[{1520, 431}], LineBox[{1521, 432}], LineBox[{1522, 433}], 
       LineBox[{1523, 434}], LineBox[{1524, 435}], LineBox[{1526, 437}], 
       LineBox[{1527, 438}], LineBox[{1528, 439}], LineBox[{1529, 440}], 
       LineBox[{1532, 443}], LineBox[{1534, 445}], LineBox[{1536, 447}], 
       LineBox[{1537, 448}], LineBox[{1538, 449}], LineBox[{1539, 450}], 
       LineBox[{1540, 451}], LineBox[{1541, 452}], LineBox[{1542, 453}], 
       LineBox[{1543, 454}], LineBox[{1544, 455}], LineBox[{1545, 456}], 
       LineBox[{1546, 457}], LineBox[{1547, 458}], LineBox[{1548, 459}], 
       LineBox[{1549, 460}], LineBox[{1550, 461}], LineBox[{1551, 462}], 
       LineBox[{1552, 463}], LineBox[{1553, 464}], LineBox[{1554, 465}], 
       LineBox[{1555, 466}], LineBox[{1556, 467}], LineBox[{1557, 468}], 
       LineBox[{1558, 469}], LineBox[{1561, 472}], LineBox[{1563, 474}], 
       LineBox[{1564, 475}], LineBox[{1565, 476}], LineBox[{1567, 478}], 
       LineBox[{1571, 482}], LineBox[{1572, 483}], LineBox[{1573, 484}], 
       LineBox[{1574, 485}], LineBox[{1575, 486}], LineBox[{1576, 487}], 
       LineBox[{1577, 488}], LineBox[{1578, 489}], LineBox[{1579, 490}], 
       LineBox[{1580, 491}], LineBox[{1581, 492}], LineBox[{1582, 493}], 
       LineBox[{1583, 494}], LineBox[{1584, 495}], LineBox[{1585, 496}], 
       LineBox[{1590, 501}], LineBox[{1591, 502}], LineBox[{1592, 503}], 
       LineBox[{1593, 504}], LineBox[{1594, 505}], LineBox[{1595, 506}], 
       LineBox[{1596, 507}], LineBox[{1599, 510}], LineBox[{1600, 511}], 
       LineBox[{1601, 512}], LineBox[{1602, 513}], LineBox[{1603, 514}], 
       LineBox[{1608, 519}], LineBox[{1609, 520}], LineBox[{1611, 522}], 
       LineBox[{1612, 523}], LineBox[{1614, 525}], LineBox[{1615, 526}], 
       LineBox[{1619, 530}], LineBox[{1620, 531}], LineBox[{1622, 533}], 
       LineBox[{1624, 535}], LineBox[{1625, 536}], LineBox[{1626, 537}], 
       LineBox[{1627, 538}], LineBox[{1631, 542}], LineBox[{1632, 543}], 
       LineBox[{1633, 544}], LineBox[{1635, 546}], LineBox[{1640, 551}], 
       LineBox[{1642, 553}], LineBox[{1647, 558}], LineBox[{1652, 563}], 
       LineBox[{1654, 565}], LineBox[{1655, 566}], LineBox[{1660, 571}], 
       LineBox[{1661, 572}], LineBox[{1663, 574}], LineBox[{1665, 576}], 
       LineBox[{1666, 577}], LineBox[{1667, 578}], LineBox[{1668, 579}], 
       LineBox[{1669, 580}], LineBox[{1670, 581}], LineBox[{1678, 589}], 
       LineBox[{1682, 593}], LineBox[{1683, 594}], LineBox[{1684, 595}], 
       LineBox[{1695, 606}], LineBox[{1697, 608}], LineBox[{1698, 609}], 
       LineBox[{1699, 610}], LineBox[{1702, 613}], LineBox[{1703, 614}], 
       LineBox[{1704, 615}], LineBox[{1705, 616}], LineBox[{1706, 617}], 
       LineBox[{1707, 618}], LineBox[{1708, 619}], LineBox[{1709, 620}], 
       LineBox[{1710, 621}], LineBox[{1712, 623}], LineBox[{1713, 624}], 
       LineBox[{1715, 626}], LineBox[{1716, 627}], LineBox[{1717, 628}], 
       LineBox[{1718, 629}], LineBox[{1719, 630}], LineBox[{1722, 633}], 
       LineBox[{1724, 635}], LineBox[{1725, 636}], LineBox[{1726, 637}], 
       LineBox[{1727, 638}], LineBox[{1728, 639}], LineBox[{1730, 641}], 
       LineBox[{1731, 642}], LineBox[{1732, 643}], LineBox[{1733, 644}], 
       LineBox[{1734, 645}], LineBox[{1735, 646}], LineBox[{1737, 648}], 
       LineBox[{1742, 653}], LineBox[{1743, 654}], LineBox[{1744, 655}], 
       LineBox[{1745, 656}], LineBox[{1746, 657}], LineBox[{1747, 658}], 
       LineBox[{1748, 659}], LineBox[{1749, 660}], LineBox[{1750, 661}], 
       LineBox[{1752, 663}], LineBox[{1753, 664}], LineBox[{1754, 665}], 
       LineBox[{1755, 666}], LineBox[{1758, 669}], LineBox[{1760, 671}], 
       LineBox[{1761, 672}], LineBox[{1762, 673}], LineBox[{1763, 674}], 
       LineBox[{1765, 676}], LineBox[{1766, 677}], LineBox[{1767, 678}], 
       LineBox[{1768, 679}], LineBox[{1769, 680}], LineBox[{1773, 684}], 
       LineBox[{1774, 685}], LineBox[{1775, 686}], LineBox[{1776, 687}], 
       LineBox[{1777, 688}], LineBox[{1781, 692}], LineBox[{1782, 693}], 
       LineBox[{1783, 694}], LineBox[{1784, 695}], LineBox[{1786, 697}], 
       LineBox[{1787, 698}], LineBox[{1789, 700}], LineBox[{1790, 701}], 
       LineBox[{1791, 702}], LineBox[{1797, 708}], LineBox[{1798, 709}], 
       LineBox[{1799, 710}], LineBox[{1800, 711}], LineBox[{1801, 712}], 
       LineBox[{1805, 716}], LineBox[{1806, 717}], LineBox[{1808, 719}], 
       LineBox[{1809, 720}], LineBox[{1811, 722}], LineBox[{1812, 723}], 
       LineBox[{1813, 724}], LineBox[{1817, 728}], LineBox[{1820, 731}], 
       LineBox[{1822, 733}], LineBox[{1823, 734}], LineBox[{1825, 736}], 
       LineBox[{1829, 740}], LineBox[{1831, 742}], LineBox[{1834, 745}], 
       LineBox[{1837, 748}], LineBox[{1838, 749}], LineBox[{1839, 750}], 
       LineBox[{1840, 751}], LineBox[{1841, 752}], LineBox[{1843, 754}], 
       LineBox[{1844, 755}], LineBox[{1845, 756}], LineBox[{1846, 757}], 
       LineBox[{1847, 758}], LineBox[{1848, 759}], LineBox[{1849, 760}], 
       LineBox[{1850, 761}], LineBox[{1851, 762}], LineBox[{1852, 763}], 
       LineBox[{1853, 764}], LineBox[{1858, 769}], LineBox[{1863, 774}], 
       LineBox[{1864, 775}], LineBox[{1865, 776}], LineBox[{1866, 777}], 
       LineBox[{1868, 779}], LineBox[{1869, 780}], LineBox[{1878, 789}], 
       LineBox[{1879, 790}], LineBox[{1880, 791}], LineBox[{1881, 792}], 
       LineBox[{1883, 794}], LineBox[{1884, 795}], LineBox[{1886, 797}], 
       LineBox[{1888, 799}], LineBox[{1889, 800}], LineBox[{1890, 801}], 
       LineBox[{1891, 802}], LineBox[{1892, 803}], LineBox[{1894, 805}], 
       LineBox[{1895, 806}], LineBox[{1896, 807}], LineBox[{1897, 808}], 
       LineBox[{1901, 812}], LineBox[{1902, 813}], LineBox[{1906, 817}], 
       LineBox[{1908, 819}], LineBox[{1911, 822}], LineBox[{1913, 824}], 
       LineBox[{1918, 829}], LineBox[{1919, 830}], LineBox[{1920, 831}], 
       LineBox[{1921, 832}], LineBox[{1922, 833}], LineBox[{1923, 834}], 
       LineBox[{1924, 835}], LineBox[{1925, 836}], LineBox[{1926, 837}], 
       LineBox[{1927, 838}], LineBox[{1928, 839}], LineBox[{1932, 843}], 
       LineBox[{1933, 844}], LineBox[{1936, 847}], LineBox[{1937, 848}], 
       LineBox[{1938, 849}], LineBox[{1939, 850}], LineBox[{1941, 852}], 
       LineBox[{1944, 855}], LineBox[{1949, 860}], LineBox[{1950, 861}], 
       LineBox[{1952, 863}], LineBox[{1953, 864}], LineBox[{1954, 865}], 
       LineBox[{1957, 868}], LineBox[{1960, 871}], LineBox[{1961, 872}], 
       LineBox[{1965, 876}], LineBox[{1966, 877}], LineBox[{1970, 881}], 
       LineBox[{1971, 882}], LineBox[{1974, 885}], LineBox[{1975, 886}], 
       LineBox[{1976, 887}], LineBox[{1978, 889}], LineBox[{1987, 898}], 
       LineBox[{1991, 902}], LineBox[{1999, 910}], LineBox[{2000, 911}], 
       LineBox[{2010, 921}], LineBox[{2012, 923}], LineBox[{2015, 926}], 
       LineBox[{2019, 930}], LineBox[{2020, 931}], LineBox[{2024, 935}], 
       LineBox[{2025, 936}], LineBox[{2030, 941}], LineBox[{2031, 942}], 
       LineBox[{2032, 943}], LineBox[{2033, 944}], LineBox[{2034, 945}], 
       LineBox[{2035, 946}], LineBox[{2036, 947}], LineBox[{2037, 948}], 
       LineBox[{2039, 950}], LineBox[{2040, 951}], LineBox[{2041, 952}], 
       LineBox[{2042, 953}], LineBox[{2044, 955}], LineBox[{2046, 957}], 
       LineBox[{2053, 964}], LineBox[{2054, 965}], LineBox[{2058, 969}], 
       LineBox[{2059, 970}], LineBox[{2060, 971}], LineBox[{2061, 972}], 
       LineBox[{2062, 973}], LineBox[{2066, 977}], LineBox[{2067, 978}], 
       LineBox[{2068, 979}], LineBox[{2069, 980}], LineBox[{2072, 983}], 
       LineBox[{2073, 984}], LineBox[{2074, 985}], LineBox[{2075, 986}], 
       LineBox[{2076, 987}], LineBox[{2077, 988}], LineBox[{2078, 989}], 
       LineBox[{2079, 990}], LineBox[{2080, 991}], LineBox[{2082, 993}], 
       LineBox[{2083, 994}], LineBox[{2084, 995}], LineBox[{2085, 996}], 
       LineBox[{2086, 997}], LineBox[{2087, 998}], LineBox[{2088, 999}], 
       LineBox[{2089, 1000}], LineBox[{2090, 1001}], LineBox[{2091, 1002}], 
       LineBox[{2092, 1003}], LineBox[{2093, 1004}], LineBox[{2094, 1005}], 
       LineBox[{2095, 1006}], LineBox[{2096, 1007}], LineBox[{2097, 1008}], 
       LineBox[{2098, 1009}], LineBox[{2099, 1010}], LineBox[{2100, 1011}], 
       LineBox[{2101, 1012}], LineBox[{2102, 1013}], LineBox[{2103, 1014}], 
       LineBox[{2104, 1015}], LineBox[{2105, 1016}], LineBox[{2106, 1017}], 
       LineBox[{2108, 1019}], LineBox[{2109, 1020}], LineBox[{2110, 1021}], 
       LineBox[{2112, 1023}], LineBox[{2113, 1024}], LineBox[{2114, 1025}], 
       LineBox[{2116, 1027}], LineBox[{2117, 1028}], LineBox[{2118, 1029}], 
       LineBox[{2120, 1031}], LineBox[{2121, 1032}], LineBox[{2123, 1034}], 
       LineBox[{2124, 1035}], LineBox[{2125, 1036}], LineBox[{2126, 1037}], 
       LineBox[{2128, 1039}], LineBox[{2129, 1040}], LineBox[{2132, 1043}], 
       LineBox[{2133, 1044}], LineBox[{2136, 1047}], LineBox[{2139, 1050}], 
       LineBox[{2140, 1051}], LineBox[{2141, 1052}], LineBox[{2142, 1053}], 
       LineBox[{2143, 1054}], LineBox[{2144, 1055}], LineBox[{2145, 1056}], 
       LineBox[{2146, 1057}], LineBox[{2147, 1058}], LineBox[{2156, 1067}], 
       LineBox[{2157, 1068}], LineBox[{2163, 1074}], LineBox[{2166, 1077}], 
       LineBox[{2167, 1078}], LineBox[{2169, 1080}], LineBox[{2171, 1082}], 
       LineBox[{2172, 1083}], LineBox[{2173, 1084}], LineBox[{2176, 1087}], 
       LineBox[{2178, 1089}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{1093, 4}], LineBox[{1095, 6}], LineBox[{1096, 7}], 
       LineBox[{1097, 8}], LineBox[{1098, 9}], LineBox[{1099, 10}], 
       LineBox[{1103, 14}], LineBox[{1104, 15}], LineBox[{1105, 16}], 
       LineBox[{1106, 17}], LineBox[{1107, 18}], LineBox[{1111, 22}], 
       LineBox[{1112, 23}], LineBox[{1113, 24}], LineBox[{1114, 25}], 
       LineBox[{1117, 28}], LineBox[{1120, 31}], LineBox[{1121, 32}], 
       LineBox[{1122, 33}], LineBox[{1123, 34}], LineBox[{1124, 35}], 
       LineBox[{1125, 36}], LineBox[{1131, 42}], LineBox[{1133, 44}], 
       LineBox[{1136, 47}], LineBox[{1137, 48}], LineBox[{1138, 49}], 
       LineBox[{1140, 51}], LineBox[{1141, 52}], LineBox[{1142, 53}], 
       LineBox[{1143, 54}], LineBox[{1144, 55}], LineBox[{1145, 56}], 
       LineBox[{1146, 57}], LineBox[{1147, 58}], LineBox[{1153, 64}], 
       LineBox[{1155, 66}], LineBox[{1156, 67}], LineBox[{1157, 68}], 
       LineBox[{1158, 69}], LineBox[{1159, 70}], LineBox[{1164, 75}], 
       LineBox[{1166, 77}], LineBox[{1167, 78}], LineBox[{1168, 79}], 
       LineBox[{1169, 80}], LineBox[{1170, 81}], LineBox[{1171, 82}], 
       LineBox[{1173, 84}], LineBox[{1174, 85}], LineBox[{1176, 87}], 
       LineBox[{1178, 89}], LineBox[{1179, 90}], LineBox[{1182, 93}], 
       LineBox[{1183, 94}], LineBox[{1184, 95}], LineBox[{1186, 97}], 
       LineBox[{1187, 98}], LineBox[{1188, 99}], LineBox[{1190, 101}], 
       LineBox[{1191, 102}], LineBox[{1193, 104}], LineBox[{1194, 105}], 
       LineBox[{1195, 106}], LineBox[{1196, 107}], LineBox[{1197, 108}], 
       LineBox[{1198, 109}], LineBox[{1199, 110}], LineBox[{1200, 111}], 
       LineBox[{1203, 114}], LineBox[{1204, 115}], LineBox[{1205, 116}], 
       LineBox[{1207, 118}], LineBox[{1212, 123}], LineBox[{1213, 124}], 
       LineBox[{1214, 125}], LineBox[{1215, 126}], LineBox[{1216, 127}], 
       LineBox[{1217, 128}], LineBox[{1218, 129}], LineBox[{1219, 130}], 
       LineBox[{1220, 131}], LineBox[{1221, 132}], LineBox[{1222, 133}], 
       LineBox[{1223, 134}], LineBox[{1224, 135}], LineBox[{1225, 136}], 
       LineBox[{1226, 137}], LineBox[{1227, 138}], LineBox[{1228, 139}], 
       LineBox[{1229, 140}], LineBox[{1231, 142}], LineBox[{1232, 143}], 
       LineBox[{1233, 144}], LineBox[{1234, 145}], LineBox[{1238, 149}], 
       LineBox[{1242, 153}], LineBox[{1243, 154}], LineBox[{1244, 155}], 
       LineBox[{1245, 156}], LineBox[{1247, 158}], LineBox[{1248, 159}], 
       LineBox[{1249, 160}], LineBox[{1250, 161}], LineBox[{1251, 162}], 
       LineBox[{1252, 163}], LineBox[{1253, 164}], LineBox[{1254, 165}], 
       LineBox[{1255, 166}], LineBox[{1256, 167}], LineBox[{1257, 168}], 
       LineBox[{1258, 169}], LineBox[{1259, 170}], LineBox[{1260, 171}], 
       LineBox[{1261, 172}], LineBox[{1263, 174}], LineBox[{1264, 175}], 
       LineBox[{1269, 180}], LineBox[{1270, 181}], LineBox[{1271, 182}], 
       LineBox[{1273, 184}], LineBox[{1274, 185}], LineBox[{1275, 186}], 
       LineBox[{1276, 187}], LineBox[{1277, 188}], LineBox[{1278, 189}], 
       LineBox[{1279, 190}], LineBox[{1280, 191}], LineBox[{1281, 192}], 
       LineBox[{1282, 193}], LineBox[{1283, 194}], LineBox[{1284, 195}], 
       LineBox[{1285, 196}], LineBox[{1286, 197}], LineBox[{1287, 198}], 
       LineBox[{1288, 199}], LineBox[{1289, 200}], LineBox[{1290, 201}], 
       LineBox[{1291, 202}], LineBox[{1292, 203}], LineBox[{1294, 205}], 
       LineBox[{1295, 206}], LineBox[{1296, 207}], LineBox[{1297, 208}], 
       LineBox[{1298, 209}], LineBox[{1299, 210}], LineBox[{1300, 211}], 
       LineBox[{1301, 212}], LineBox[{1302, 213}], LineBox[{1303, 214}], 
       LineBox[{1304, 215}], LineBox[{1305, 216}], LineBox[{1308, 219}], 
       LineBox[{1309, 220}], LineBox[{1310, 221}], LineBox[{1311, 222}], 
       LineBox[{1313, 224}], LineBox[{1314, 225}], LineBox[{1315, 226}], 
       LineBox[{1316, 227}], LineBox[{1317, 228}], LineBox[{1318, 229}], 
       LineBox[{1320, 231}], LineBox[{1321, 232}], LineBox[{1322, 233}], 
       LineBox[{1323, 234}], LineBox[{1324, 235}], LineBox[{1327, 238}], 
       LineBox[{1328, 239}], LineBox[{1329, 240}], LineBox[{1330, 241}], 
       LineBox[{1331, 242}], LineBox[{1332, 243}], LineBox[{1333, 244}], 
       LineBox[{1334, 245}], LineBox[{1343, 254}], LineBox[{1344, 255}], 
       LineBox[{1348, 259}], LineBox[{1354, 265}], LineBox[{1355, 266}], 
       LineBox[{1374, 285}], LineBox[{1379, 290}], LineBox[{1384, 295}], 
       LineBox[{1385, 296}], LineBox[{1389, 300}], LineBox[{1390, 301}], 
       LineBox[{1395, 306}], LineBox[{1397, 308}], LineBox[{1398, 309}], 
       LineBox[{1416, 327}], LineBox[{1417, 328}], LineBox[{1422, 333}], 
       LineBox[{1423, 334}], LineBox[{1430, 341}], LineBox[{1445, 356}], 
       LineBox[{1446, 357}], LineBox[{1447, 358}], LineBox[{1448, 359}], 
       LineBox[{1453, 364}], LineBox[{1454, 365}], LineBox[{1455, 366}], 
       LineBox[{1456, 367}], LineBox[{1457, 368}], LineBox[{1458, 369}], 
       LineBox[{1460, 371}], LineBox[{1470, 381}], LineBox[{1471, 382}], 
       LineBox[{1476, 387}], LineBox[{1489, 400}], LineBox[{1490, 401}], 
       LineBox[{1497, 408}], LineBox[{1498, 409}], LineBox[{1499, 410}], 
       LineBox[{1504, 415}], LineBox[{1505, 416}], LineBox[{1513, 424}], 
       LineBox[{1514, 425}], LineBox[{1525, 436}], LineBox[{1530, 441}], 
       LineBox[{1531, 442}], LineBox[{1533, 444}], LineBox[{1535, 446}], 
       LineBox[{1559, 470}], LineBox[{1560, 471}], LineBox[{1562, 473}], 
       LineBox[{1566, 477}], LineBox[{1568, 479}], LineBox[{1569, 480}], 
       LineBox[{1570, 481}], LineBox[{1586, 497}], LineBox[{1587, 498}], 
       LineBox[{1588, 499}], LineBox[{1589, 500}], LineBox[{1597, 508}], 
       LineBox[{1598, 509}], LineBox[{1604, 515}], LineBox[{1605, 516}], 
       LineBox[{1606, 517}], LineBox[{1607, 518}], LineBox[{1610, 521}], 
       LineBox[{1613, 524}], LineBox[{1616, 527}], LineBox[{1617, 528}], 
       LineBox[{1618, 529}], LineBox[{1621, 532}], LineBox[{1623, 534}], 
       LineBox[{1628, 539}], LineBox[{1629, 540}], LineBox[{1630, 541}], 
       LineBox[{1634, 545}], LineBox[{1636, 547}], LineBox[{1637, 548}], 
       LineBox[{1638, 549}], LineBox[{1639, 550}], LineBox[{1641, 552}], 
       LineBox[{1643, 554}], LineBox[{1644, 555}], LineBox[{1645, 556}], 
       LineBox[{1646, 557}], LineBox[{1648, 559}], LineBox[{1649, 560}], 
       LineBox[{1650, 561}], LineBox[{1651, 562}], LineBox[{1653, 564}], 
       LineBox[{1656, 567}], LineBox[{1657, 568}], LineBox[{1658, 569}], 
       LineBox[{1659, 570}], LineBox[{1662, 573}], LineBox[{1664, 575}], 
       LineBox[{1671, 582}], LineBox[{1672, 583}], LineBox[{1673, 584}], 
       LineBox[{1674, 585}], LineBox[{1675, 586}], LineBox[{1676, 587}], 
       LineBox[{1677, 588}], LineBox[{1679, 590}], LineBox[{1680, 591}], 
       LineBox[{1681, 592}], LineBox[{1685, 596}], LineBox[{1686, 597}], 
       LineBox[{1687, 598}], LineBox[{1688, 599}], LineBox[{1689, 600}], 
       LineBox[{1690, 601}], LineBox[{1691, 602}], LineBox[{1692, 603}], 
       LineBox[{1693, 604}], LineBox[{1694, 605}], LineBox[{1696, 607}], 
       LineBox[{1700, 611}], LineBox[{1701, 612}], LineBox[{1711, 622}], 
       LineBox[{1714, 625}], LineBox[{1720, 631}], LineBox[{1721, 632}], 
       LineBox[{1723, 634}], LineBox[{1729, 640}], LineBox[{1736, 647}], 
       LineBox[{1738, 649}], LineBox[{1739, 650}], LineBox[{1740, 651}], 
       LineBox[{1741, 652}], LineBox[{1751, 662}], LineBox[{1756, 667}], 
       LineBox[{1757, 668}], LineBox[{1759, 670}], LineBox[{1764, 675}], 
       LineBox[{1770, 681}], LineBox[{1771, 682}], LineBox[{1772, 683}], 
       LineBox[{1778, 689}], LineBox[{1779, 690}], LineBox[{1780, 691}], 
       LineBox[{1785, 696}], LineBox[{1788, 699}], LineBox[{1792, 703}], 
       LineBox[{1793, 704}], LineBox[{1794, 705}], LineBox[{1795, 706}], 
       LineBox[{1796, 707}], LineBox[{1802, 713}], LineBox[{1803, 714}], 
       LineBox[{1804, 715}], LineBox[{1807, 718}], LineBox[{1810, 721}], 
       LineBox[{1814, 725}], LineBox[{1815, 726}], LineBox[{1816, 727}], 
       LineBox[{1818, 729}], LineBox[{1819, 730}], LineBox[{1821, 732}], 
       LineBox[{1824, 735}], LineBox[{1826, 737}], LineBox[{1827, 738}], 
       LineBox[{1828, 739}], LineBox[{1830, 741}], LineBox[{1832, 743}], 
       LineBox[{1833, 744}], LineBox[{1835, 746}], LineBox[{1836, 747}], 
       LineBox[{1842, 753}], LineBox[{1854, 765}], LineBox[{1855, 766}], 
       LineBox[{1856, 767}], LineBox[{1857, 768}], LineBox[{1859, 770}], 
       LineBox[{1860, 771}], LineBox[{1861, 772}], LineBox[{1862, 773}], 
       LineBox[{1867, 778}], LineBox[{1870, 781}], LineBox[{1871, 782}], 
       LineBox[{1872, 783}], LineBox[{1873, 784}], LineBox[{1874, 785}], 
       LineBox[{1875, 786}], LineBox[{1876, 787}], LineBox[{1877, 788}], 
       LineBox[{1882, 793}], LineBox[{1885, 796}], LineBox[{1887, 798}], 
       LineBox[{1893, 804}], LineBox[{1898, 809}], LineBox[{1899, 810}], 
       LineBox[{1900, 811}], LineBox[{1903, 814}], LineBox[{1904, 815}], 
       LineBox[{1905, 816}], LineBox[{1907, 818}], LineBox[{1909, 820}], 
       LineBox[{1910, 821}], LineBox[{1912, 823}], LineBox[{1914, 825}], 
       LineBox[{1915, 826}], LineBox[{1916, 827}], LineBox[{1917, 828}], 
       LineBox[{1929, 840}], LineBox[{1930, 841}], LineBox[{1931, 842}], 
       LineBox[{1934, 845}], LineBox[{1935, 846}], LineBox[{1940, 851}], 
       LineBox[{1942, 853}], LineBox[{1943, 854}], LineBox[{1945, 856}], 
       LineBox[{1946, 857}], LineBox[{1947, 858}], LineBox[{1948, 859}], 
       LineBox[{1951, 862}], LineBox[{1955, 866}], LineBox[{1956, 867}], 
       LineBox[{1958, 869}], LineBox[{1959, 870}], LineBox[{1962, 873}], 
       LineBox[{1963, 874}], LineBox[{1964, 875}], LineBox[{1967, 878}], 
       LineBox[{1968, 879}], LineBox[{1969, 880}], LineBox[{1972, 883}], 
       LineBox[{1973, 884}], LineBox[{1977, 888}], LineBox[{1979, 890}], 
       LineBox[{1980, 891}], LineBox[{1981, 892}], LineBox[{1982, 893}], 
       LineBox[{1983, 894}], LineBox[{1984, 895}], LineBox[{1985, 896}], 
       LineBox[{1986, 897}], LineBox[{1988, 899}], LineBox[{1989, 900}], 
       LineBox[{1990, 901}], LineBox[{1992, 903}], LineBox[{1993, 904}], 
       LineBox[{1994, 905}], LineBox[{1995, 906}], LineBox[{1996, 907}], 
       LineBox[{1997, 908}], LineBox[{1998, 909}], LineBox[{2001, 912}], 
       LineBox[{2002, 913}], LineBox[{2003, 914}], LineBox[{2004, 915}], 
       LineBox[{2005, 916}], LineBox[{2006, 917}], LineBox[{2007, 918}], 
       LineBox[{2008, 919}], LineBox[{2009, 920}], LineBox[{2011, 922}], 
       LineBox[{2013, 924}], LineBox[{2014, 925}], LineBox[{2016, 927}], 
       LineBox[{2017, 928}], LineBox[{2018, 929}], LineBox[{2021, 932}], 
       LineBox[{2022, 933}], LineBox[{2023, 934}], LineBox[{2026, 937}], 
       LineBox[{2027, 938}], LineBox[{2028, 939}], LineBox[{2029, 940}], 
       LineBox[{2038, 949}], LineBox[{2043, 954}], LineBox[{2045, 956}], 
       LineBox[{2047, 958}], LineBox[{2048, 959}], LineBox[{2049, 960}], 
       LineBox[{2050, 961}], LineBox[{2051, 962}], LineBox[{2052, 963}], 
       LineBox[{2055, 966}], LineBox[{2056, 967}], LineBox[{2057, 968}], 
       LineBox[{2063, 974}], LineBox[{2064, 975}], LineBox[{2065, 976}], 
       LineBox[{2070, 981}], LineBox[{2071, 982}], LineBox[{2081, 992}], 
       LineBox[{2107, 1018}], LineBox[{2111, 1022}], LineBox[{2115, 1026}], 
       LineBox[{2119, 1030}], LineBox[{2122, 1033}], LineBox[{2127, 1038}], 
       LineBox[{2130, 1041}], LineBox[{2131, 1042}], LineBox[{2134, 1045}], 
       LineBox[{2135, 1046}], LineBox[{2137, 1048}], LineBox[{2138, 1049}], 
       LineBox[{2148, 1059}], LineBox[{2149, 1060}], LineBox[{2150, 1061}], 
       LineBox[{2151, 1062}], LineBox[{2152, 1063}], LineBox[{2153, 1064}], 
       LineBox[{2154, 1065}], LineBox[{2155, 1066}], LineBox[{2158, 1069}], 
       LineBox[{2159, 1070}], LineBox[{2160, 1071}], LineBox[{2161, 1072}], 
       LineBox[{2162, 1073}], LineBox[{2164, 1075}], LineBox[{2165, 1076}], 
       LineBox[{2168, 1079}], LineBox[{2170, 1081}], LineBox[{2174, 1085}], 
       LineBox[{2175, 1086}], LineBox[{2177, 1088}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.004583333333333334], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwN00OiGAoCALA3tW3btm3btm392rZt27Zt27Y7WeQISdiofaV2/wsICCgY
JCBgUIiAgMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7z
mM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exhL/vY
zwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu97jP
Ax7yiMc84SnPeM4LXvKK17zhLe94zwc+8onPfOEr3/jOD37yi9/84S//CAgZ
EPA/AhGYIAQlGMEJQUhCEZowhCUc4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJ
QEISkZgkJCUZyUlBSlKRmjSkJR3pyUBGMpGZLGQlG9nJQU5ykZs85CUf+SlA
QQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa1alBTWpRmzrUpR71aUBD
GtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50pRvd6UFPetGbPvSlH//RnwEM
ZBCDGcJQhjGcEYxkFKMZw1jGMZ4JTGQSk5nCVKYxnRnMZBazmcNc5jGfBSxk
EYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb2cJWtrGdHexkF7vZw172sZ8DHOQQ
hznCUY5xnBOc5BSnOcNZznGeC1zkEpe5wlWucZ0b3OQWt7nDXe5xnwc85BGP
ecJTnvGcF7zkFa95w1ve8Z4PfOQTn/nCV77xnR/85Be/+cNf/hEQyn8CEZgg
BCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4xCUe8UlAQhKRmCQk
JRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzkJR/5KUBBClGYIhSl
GMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSlHvVpQEMa0ZgmNKUZ
zWlBS1rRmja0pR3t6UBHOtGZLnSlG93pQU960Zs+9KUf/9GfAQxkEIMZwlCG
MZwRjGQUoxnDWMYxnglMZBKTmcJUpjGdGcxkFrOZw1zmMZ8FLGQRi1nCUpax
nBWsZBWrWcNa1rGeDWxkE5vZwla2sZ0d7GQXu9nDXvaxnwMc5BCHOcJRjnGc
E5zkFKc5w1nOcZ4LXOQSl7nCVa5xnRvc5Ba3ucNd7nGfBzzkEY95wlOe8ZwX
vOQVr3nDW97xng985BOf+cJXvvGdH/zkF7/5w1/+ERDafwIRmCAEJRjBCUFI
QhGaMIQlHOGJQEQiEZkoRCUa0YlBTGIRmzjEJR7xSUBCEpGYJCQlGclJQUpS
kZo0pCUd6clARjKRmSxkJRvZyUFOcpGbPOQlH/kpQEEKUZgiFKUYxSlBSUpR
mjKUpRzlqUBFKlGZKlSlGtWpQU1qUZs61KUe9WlAQxrRmCY0pRnNaUFLWtGa
NrSlHe3pQEc60ZkudKUb3elBT3rRmz70pR//0Z8BDGQQgxnCUIYxnBGMZBSj
GcNYxjGeCUxkEpOZwlSmMZ0ZzGQWs5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZ
w1rWsZ4NbGQTm9nCVraxnR3sZBe72cNe9rGfAxzkEIc5wlGOcZwTnOQUpznD
Wc5xngtc5BKXucJVrnGdG9zkFre5w13ucZ8HPOQRj3nCU57xnBe85BWvecNb
3vGeD3zkE5/5wle+8Z0f/OQXv/nDX/4REMZ/AhGYIAQlGMEJQUhCEZowhCUc
4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJQEISkZgkJCUZyUlBSlKRmjSkJR3p
yUBGMpGZLGQlG9nJQU5ykZs85CUf+SlAQQpRmCIUpRjFKUFJSlGaMpSlHOWp
QEUqUZkqVKUa1alBTWpRmzrUpR71aUBDGtGYJjSlGc1pQUta0Zo2tKUd7elA
RzrRmS50pRvd6UFPetGbPvSlH//RnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4J
TGQSk5nCVKYxnRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1s
ZBOb2cJWtrGdHexkF7vZw172sZ8DHOQQ/wfgGlSS
        "]]}, {}}}], {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"actual value - predicted value\"", TraditionalForm], None}, {
     FormBox["\"predicted value\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.2878119139564343, 
   0.21528350235437335`}, {-4.3432420378723195`, 4.3432420378723195`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.710061836689308*^9, 3.7100628110815926`*^9, 
  3.710069389700388*^9, 3.7100701826829276`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"RandomSample", "[", 
      RowBox[{"trainingset", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "6", ",", "8"}], "}"}]}], "]"}], "]"}], "]"}], 
     "\[Rule]", 
     RowBox[{"Standardize", "[", 
      RowBox[{"trainingset", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "9"}], "]"}], "]"}], "]"}]}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<NearestNeighbors\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.709938311722932*^9, 3.709938323528329*^9}, {
   3.7099383939406323`*^9, 3.709938396706202*^9}, {3.7099384786168337`*^9, 
   3.7099384822875795`*^9}, {3.7099385224777436`*^9, 3.7099385275187683`*^9}, 
   3.709947964195163*^9, 3.7099482788205357`*^9, 3.709955593590539*^9, 
   3.7099827434228754`*^9, {3.7100627825516663`*^9, 3.7100627970178366`*^9}, {
   3.710069332541961*^9, 3.7100693405155554`*^9}, {3.710069523890217*^9, 
   3.710069537005839*^9}, {3.7100697111716595`*^9, 3.710069714192263*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{}, {{}, {
                  PointSize[0.125], 
                  GrayLevel[0.55], 
                  
                  PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                    4, 4.}}]}, {
                  GrayLevel[0.7], 
                  AbsoluteThickness[1.5], 
                  
                  BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                   5, 4}}]}}, {}}, Axes -> {False, False}, 
               AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
               BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {All, All}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of features: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{}, {{}, {
                  PointSize[0.125], 
                  GrayLevel[0.55], 
                  
                  PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                    4, 4.}}]}, {
                  GrayLevel[0.7], 
                  AbsoluteThickness[1.5], 
                  
                  BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                   5, 4}}]}}, {}}, Axes -> {False, False}, 
               AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
               BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {All, All}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of features: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["8073", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.709938338273324*^9, 3.7099384107090387`*^9, 
  3.7099384945470705`*^9, 3.7099479350071907`*^9, 3.709948259435571*^9, 
  3.7099482929864345`*^9, 3.7099827580537987`*^9, 3.71006181961294*^9, 
  3.7100628099104404`*^9, 3.710069353211093*^9, 3.7100695676009555`*^9, 
  3.710069726961816*^9, 3.7100702018757644`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "=", 
  RowBox[{"PredictorMeasurements", "[", 
   RowBox[{"p", ",", 
    RowBox[{
     RowBox[{"testset", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "6", ",", "8"}], "}"}]}], "]"}], "]"}], "\[Rule]", 
     RowBox[{"Standardize", "[", 
      RowBox[{"testset", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "9"}], "]"}], "]"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7099479414545097`*^9, 3.7099479532639265`*^9}, 
   3.709955600397936*^9, 3.709982751837556*^9, {3.7100693469498415`*^9, 
   3.710069352682988*^9}, {3.7100697216947627`*^9, 3.710069725434511*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorMeasurementsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  GrayLevel[0.6], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  Dashing[{Small, Small}], 
                  
                  LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                   11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                   GrayLevel[0.4], 
                   PointSize[0.09], 
                   AbsoluteThickness[1.6], 
                   
                   PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                    2.227816320451859, 2.584653237430766}, {3.043099335090081,
                     4.798822972025658}, {3.5728355469237116`, 
                    5.9507424155697155`}, {4.158566334344331, 
                    5.2097676165465385`}, {4.824808988689111, 
                    7.23346088027902}, {6.88649660338492, 
                    5.297021421229134}, {7.819072150835878, 
                    6.533166043611269}, {8.437306856915493, 
                    8.81724006216815}, {8.604907881861761, 
                    11.302704526196452`}}]}, {}}, {}}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1089", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  GrayLevel[0.6], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  Dashing[{Small, Small}], 
                  
                  LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                   11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                   GrayLevel[0.4], 
                   PointSize[0.09], 
                   AbsoluteThickness[1.6], 
                   
                   PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                    2.227816320451859, 2.584653237430766}, {3.043099335090081,
                     4.798822972025658}, {3.5728355469237116`, 
                    5.9507424155697155`}, {4.158566334344331, 
                    5.2097676165465385`}, {4.824808988689111, 
                    7.23346088027902}, {6.88649660338492, 
                    5.297021421229134}, {7.819072150835878, 
                    6.533166043611269}, {8.437306856915493, 
                    8.81724006216815}, {8.604907881861761, 
                    11.302704526196452`}}]}, {}}, {}}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1089", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"StandardDeviation: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["1.0013488810475701`", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorMeasurementsObject[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7099482935415487`*^9, 3.709982758532893*^9, 
  3.7100618201475816`*^9, 3.7100628105709667`*^9, 3.710069353801211*^9, 
  3.710069568165069*^9, 3.7100697275399323`*^9, 3.710070202650919*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ComparisonPlot\>\"", "]"}]], "Input"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.004583333333333334], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1: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
qxHe5+EvPN6l+hjXlU3w0dspAO6bvWwj/hDHe5t/nvDqJczH3VTGZUKnOeDn
F99ZHn2D5/Gfy8IzTlbkk9EPL9SLtQJHxNIVHU9tAz5UykAdo70FPBuoMq/+
EX/PRNGzdrUauH6O06SB+pvjuH9rb7erfdieRELoh50nJdw/te7LvEb+RMDc
8nWx3D8wf0WfmHULRyeBbXjCh55F4PflTXjdFQXFLcgPmXzlnhhtCcTH7ne+
fyqD/a9sZLqFBuJ96p0uLAhIWQGupdvvIb+JvO8rzwFRmyrgq+GlU9TtyNo9
1rclu/D7pKKxIn09ux98WYxq+J5r1xJwosilqbXhZeA9ryuWhLxTwN4+lVk+
Oy3Au1/2TVNt14Fv+730sN0lG31kW2LKwxM7M8DHJa4KpucuAt9cTy3yopoE
FtKLnv1JOgA8YEZRqjSwAJzESy7VdBH9rIJC5e7h/ipgGf+T+ymrp9GP3rrQ
lnSKsOgfZ8S2nL1zahviAV8KXE2YR4DvH/5Kk7XuA6zUVc/I74DjceZ0HRIu
HID9fkg/fV3hyjhwD5u6io3nApz3Y+O77hf88yD/t8suu9pw4vf/kbPfDV9T
5AfGRgUXifD7VX3SSZyqqh3mDzm56VMROgrzTZqkFW7/79////jMdlFSTxYR
+OTugnvTcVd2IV5zg4zIt2YVWDJiXcvnMvrsxhinGTqLImCXv1Y9wl4Yz5t9
pc8/lw9cQecfS7WQDVwdfO/vAM0srFczY6ph+Bfm+7dczbsPBOPAI/RmE7FT
PXgebIwn9lvbA1/Oi5d5M41+PuBd1X22ahzfut45rGQbfXAsZ5bdGlU9sJod
86tN401oL5o3raspg/f5VGBFSPZHHD/hLl+jQ1EU3vevkRsxBU0w3pr3SFQq
Xw3EDcIWLSL90MfflD7jLu6Pvydi37Kw+mTc79JLej+FiV7cT1UdeXUN+t9w
bcMtR9Zt8ClyJkK+ElELwJ77LTQpKZeBv+aYUxx0RL7MPHclYGQAmMGlMCjc
uQ44co2xoTUBfQ558u7oyTD0PR27g2vp3OhTq6KPRYQt4/yue50NN5zngbNf
jDgKBqOP1S8wrOCqwnpApbv6KlFGJcT1lgTqTSnQnxYQ8pEmMHQAE7z0YvRN
6QFOEwzUyUuvhf7awou9rSnor2J+WQj5S6OfbHVk44xhxnpJg43V1H3NRljP
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
WztHiv+bL/rm48pBLI8Mm2C8oczU9niTEYg/79bJVaEohjjRfDat3A/c/7Sl
9alE8jrg36xbXSri1cDMpOanlJuLgKs8l4lv6eH79qXkek9fbXyfnzE6tZkv
hn+/EGP9SZWsFdcjuv1gwp4E5xe873LjxwD6/lfG7uv1eeg/9x05G7EjhL7b
P6RZTtce8+uiMChb/QjzF3D9s6JhIbKxTD2X9Eusr/AsVwxQaON7eblV0hHB
G2Uwvrb2DKeB7V+sX1WdTRAUwvtVFT5io3gPxysuE5ex+Yvn0fV318I6Gs+r
tPkBmcYa+oRJ+deBlMPr4A8Mn43b3KaYAv50JOakQhX62Q/zPNtnGNBHXok7
94ZLDd+D7t+toqhjQN/NPh9z7isH+rhA3ukfWmnoTy5khvbpiaCvKPV6/Ec8
HeshmT/ij2Yf2QF+cDmpxiu6Fr8XzLn8O1fxftqsMaUejMZ8XH7ENxWvRVD0
j2MDfjHpBeJ6318TJInpwv25m7baBn5pAL7+g1g/hxj9p3sHA89rEtz/4dWm
a9fVkalPExC9rkV/aLFMYDe+hz7PSeXVhfY+5BFfX64TTugvRW+LJxkT4nzE
bLF748pYT1hMyBYXC0MfmFDaMCVAg/5Q4ZtHrhYdcuMjLe+KKvTfRMe4KdNF
0GeqjGiG2UnifVA580XWYhPbsxbczXnIjr7pOnk+JyUt+sc3d9tnGg/j+9RP
YTTDaQsNcH9MSu68SKJAX/roV7+e1DKu//c7aguhKqzP7Hub3vW0FH3dyy1+
cbcpzA89O7NHfArWW5jeGsR6TqDPNtrSvDj0xA84mtNIK0cCfbHTVmvRD1r0
9+G32NJf7uF94FzkeqW6h766nDSHrIsO3/empx//QPsI/bbPaZW3D7s20L+x
3qp5wI6+rWbMdt20FPP3+wefnm899qeyehu1Xobvo3sJ5iUy0iZhPG/+UHEj
fvR1luwds7qhJPCeOWtzzF7zOK53T9iaj4VjEfrf6QlyUC/fRt9nHT1JII35
e3vmoob8dB20T5H3sy5/vAPMlFupfNMLz9fi9nc1x8oEXJ/aB0LmWJxvsyjn
QKYfvl+PkR0h+8qN+aNud1A1J8Pfu7DofPyXMvwekFXdKK66gvdvsluJsY7k
/7yXfvw9K2MRz7t+6Vp22SS235JT5JGRnEffYptvqUGC/z8EB311+6FL6KMd
KQe+OWign8s0ZnrNRo3+UvzFjbxIqX7Yn5jtja6ml1gPusOtRJm0OgFxz0mC
/14zY71B4156kRsF1hePHlx+wTSA9zmitNliY4YQxgund9zhcycHzlYUkVu0
JgG+XaX09KYe8vpaaf/zKawnse26vf/EhL/n786vWxg7S2E9jteoFznY0Xd2
yJ8k/D2F78mbeAtJXrKPArNI/BcV/bYD2vufDJfW5qwFtp8tXF/nnwIOXB/g
der9Cf0LSq3Slr1agRuNpFwvzOF9DRyvVXubiH//sfFEeG24fhnGIxdbLk0Z
w/vhznInyT14D9qL5IiKc/m1Ff4/KOowHw==
          "]]}, {}}}, {}, {}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           GrayLevel[0.5], 
           Dashing[{Small, Small}], 
           Thickness[0.002]], 
          LineBox[CompressedData["
1:eJxFxXswE3AcAPANsxmbR5JTdulWEs3RnUMOvTzOtTMmcVOzmi7uOPpnp0hm
t7z6ozy3CzujNJpXmeYx5hxJs5Iyzh8s1yZbt26Xck71x76/Pz738eMUpHDt
MBjM5X/+P3xTkBfT56qynV9t+aqRoan919nsTvSj/Yi0B2I0R2SKVgvQxIV0
j/hMNOvsqWG6PXrfXeN4LY0MH5zkiCNWXeAabkvigXvO8NoVEuvTMSKMSZq+
xewmwPxQ/1otHQ8vHfkgc17EwQ5pvTQa2wF+UhY2R8fZw5aXjtlBtVi4f6HU
jUDDwOIyZkKTbG/cdiE3hiNS/YGdQorlTfgd+JxdotnN0woHF5T+yqBZ4HEB
PifaaoLZ4ZGTI94GWKBwEZxp24AXheTMKO4KbPGJauwq18ANisEAXv0ArMh9
36cuV8bYLp7x9NKsaeE84WHKi45V2HTI0EMP1MPtLdRNTasB9vYJj8iqNMOu
weMlUpkFZuQ+DmxhW+GfrdpN3+Qd+KNJlS8h7cJ7kkQac3QPVvu3lkynYmJt
n6gufKuXY+Hhrd++cQH28NZVXXpXpQN8nic8Td3AwbN1Rqf1DDxsHu14Jxki
wJf0Xg3SUCKsGmHujnU6wzqJMW4FS4KpFWHNkcVkmHRHpxUvu6KrjqcSm93g
oGVF7LdUd1hM4/nF23nALAFWycChKatVTBYBLal8Kiwko5/pJ7fFPugBEenN
j1D0nGN7iugGuiYr6Ls0B00ffCWQ30Zrs2cUUwXozyPbFPNd9EZR+NaFOrR0
dqKC3ojOOZpEyRChDfNZjPw2tPkkf6ipG91734XRLkcXLdUbe/rRVv5zX7UC
/VoXMjSvRPNClMlfxtCRDy8a1yfQu2vz/O0p9F/DyD+p
           "]]}, 
         Annotation[#, "Charting`Private`Tag$483571#1"]& ]}}, {}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, 
     PlotRange -> {{-3.961546921917627, 
      4.692312473896715}, {-3.961546921917627, 4.692312473896715}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"actual value\"", TraditionalForm], None}, {
        FormBox["\"predicted value\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-3.961546921917627, 
      4.692312473896715}, {-3.961546921917627, 4.692312473896715}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"predictions\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"perfect prediction line\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}], 
                    Thickness[0.018000000000000002`]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}], 
                    Thickness[0.018000000000000002`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7099482937986*^9, 3.709982758638915*^9, 
  3.710061763935313*^9, 3.7100618202659273`*^9, 3.710061861765993*^9, 
  3.710062810795169*^9, 3.7100693557185965`*^9, 3.710069568284092*^9, 
  3.710069729406307*^9, 3.710070202848959*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<StandardDeviation\>\"", "]"}]], "Input"],

Cell[BoxData["1.0013488810475701`"], "Output",
 CellChangeTimes->{3.709948293897621*^9, 3.7099827586749215`*^9, 
  3.710061768714899*^9, 3.7100618310333576`*^9, 3.7100628108533545`*^9, 
  3.7100693581650834`*^9, 3.710069568332102*^9, 3.7100697311646557`*^9, 
  3.710070202950979*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ResidualHistogram\>\"", "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.567], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.567], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-4., 0}, {-3.5, 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{69.79399999999998, 101.7564705882353}, {
          137.5484306539056, 139.7808261017546}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-3., 0}, {-2.5, 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{132.01894117647055`, 163.98141176470585`}, {
          137.5484306539056, 139.7808261017546}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-2.5, 0}, {-2., 5}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{163.13141176470586`, 195.09388235294114`}, {
          132.0188488625096, 139.7808261017546}}],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-2., 0}, {-1.5, 29}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{194.24388235294114`, 226.20635294117642`}, {
          98.84135811413348, 139.7808261017546}}],
        StatusArea[#, 29]& ,
        TagBoxNote->"29"],
       StyleBox["29", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[29, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-1.5, 0}, {-1., 100}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{225.35635294117643`, 257.31882352941176`}, {
          0.6912813168542584, 139.7808261017546}}],
        StatusArea[#, 100]& ,
        TagBoxNote->"100"],
       StyleBox["100", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[100, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-1., 0}, {-0.5, 234}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{256.46882352941174`, 
          288.43129411764704`}, {-184.54970869491223`, 139.7808261017546}}],
        StatusArea[#, 234]& ,
        TagBoxNote->"234"],
       StyleBox["234", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[234, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-0.5, 0}, {0., 219}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{287.581294117647, 
          319.5437647058823}, {-163.8137769771772, 139.7808261017546}}],
        StatusArea[#, 219]& ,
        TagBoxNote->"219"],
       StyleBox["219", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[219, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {0.5, 200}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{318.6937647058823, 
          350.6562352941176}, {-137.54826346804612`, 139.7808261017546}}],
        StatusArea[#, 200]& ,
        TagBoxNote->"200"],
       StyleBox["200", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[200, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.5, 0}, {1., 130}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{349.8062352941176, 
          381.7687058823529}, {-40.78058211861588, 139.7808261017546}}],
        StatusArea[#, 130]& ,
        TagBoxNote->"130"],
       StyleBox["130", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[130, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1., 0}, {1.5, 88}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{380.91870588235287`, 412.8811764705882}, {
          17.28002669104228, 139.7808261017546}}],
        StatusArea[#, 88]& ,
        TagBoxNote->"88"],
       StyleBox["88", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[88, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.5, 0}, {2., 40}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{412.03117647058815`, 443.99364705882346`}, {
          83.63500818779444, 139.7808261017546}}],
        StatusArea[#, 40]& ,
        TagBoxNote->"40"],
       StyleBox["40", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[40, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2., 0}, {2.5, 22}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{443.14364705882343`, 475.10611764705874`}, {
          108.5181262490765, 139.7808261017546}}],
        StatusArea[#, 22]& ,
        TagBoxNote->"22"],
       StyleBox["22", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[22, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2.5, 0}, {3., 9}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{474.2561176470587, 506.2185882352941}, {
          126.48926707111356`, 139.7808261017546}}],
        StatusArea[#, 9]& ,
        TagBoxNote->"9"],
       StyleBox["9", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[9, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3., 0}, {3.5, 5}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{505.36858823529406`, 537.3310588235292}, {
          132.0188488625096, 139.7808261017546}}],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3.5, 0}, {4., 3}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{536.4810588235293, 568.4435294117648}, {
          134.78363975820758`, 139.7808261017546}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4., 0}, {4.5, 3}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{567.5935294117646, 599.556}, {134.78363975820758`, 
          139.7808261017546}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{-4.17, 0},
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"count\"", TraditionalForm], None}, {
     FormBox["\"actual value - predicted value\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-4., 4.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7099495571940966`*^9, 3.7099827596071095`*^9, 
  3.7100618419464912`*^9, 3.7100628109411106`*^9, 3.71006936078961*^9, 
  3.710069568400115*^9, 3.7100697328299904`*^9, 3.7100702030770044`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ResidualPlot\>\"", "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
3/dUGO8t0/ZdXzMS9fDUa4nSOSJoX6dpHZkqPvTXKAXtOOV7qB8evEzccc5r
HvQSLbV3fT15qEfva7t5x/Uy6nNrREKMu1lQv3SjNNELUe+E/VE7UR3zj8P7
oGgeRa+olFFo71js5b1Gj/cNSTrFlcFP8fcXddvX19g40P42xf71aayo19+h
P3FxLIMM2E9tLjIhahswf8WOOtpA5Orl+1KizNuBy9ee0bzUR3ssBRjmbjSU
wnqaNMgsmDrHYH+BiTSmQ92oFwoZioq7MwxhPG+zruR7vyboz3Ku2kb7WBkw
a6Za8cJhHM/39b2St7HZ8LyzwOU9a56od6tI0uoptuD3IHTpUoTE7l5YX7hF
QvJlQdS3bliZLCf34N8XUZYGc9JV/D3G0+RTiocYMJ8Fwf//3x/+1zLoW/8k
/qvn/8N/+A//8/j3v5f/8L+H/5znH/6fxBD/+4f/Kfb8Z9sX9Lg//C/hf7b/
/NX7+cP/3fz73+v/rfzHnn/4D//hfxX/1Xrg/3T+c15/+L9Zn/6r9/fnvP7w
H/3636cf/7Pb/1G9+p+td//V9v3D/2/pyX/1ev/wP3Z+/6ie+lfrYf9qffif
rSf/0bP/8H8S/9/qrX+1XvOPrv/frS//p53nH/7Df/g/h/9qfe2fref+u/Xh
f7fe/N92vn/4/y3+q/W+v1p//m+z5x/+9+rV/+166D+qX/+r7f9Hv/7Df/i/
h//V8eF/tX7zr17P/86e/7v+/+7z/avP4w//4f9J+ut/+/7/8B/+w/85euZf
vZ//dPv8s+35f9p/zWmM6aY/5pd2pUtg8YzD+pMu53Oq5LZ/AM4dPOT9+hTW
S7zwkGHvmyqsd7hc7KEw9I5AFsbz/f45nGIHsMK9FErxq1TA5FHOHS7GFMDH
Xt+VIiHGeo1mLbOy59owH/Chfus2Q2msR3iOw2jHzk7Mx5xsRlcQR4n5s61Z
A8jI4zH/9SN+kl71vGZg8krhj2ssfcD0JhYcJaKYX0XC2mnQ5mcDjK8vuo8k
2x/zqWjvz9nWOJMC/ZOLdQ+xG2I+7LxSh+HhBDLZ33pF75NTIYJ7SIGzhi7T
6Q8OQH5TArKtB7t8mjAf71aQ0+MlrL/3qpY12EQf83UXimkFqQ5gfurgYbr8
gfh4aHe9LtLs6vUdxn9Ey9n6nhTzHUcQnZKYeob5jr8Mh3vJWmN9OTYS+o2d
p7F/Gamyz4OzmG/a8c7C/ttdBZh/9107zbUIXP9Gm6nKGCnWkxP0lx+hosN8
ytuJQjyVmPLh+dqwzzcV/WqA7b4V2Nr3hAPLbMWq6S4OAesK3rY8mZIN4+0j
oQ3RM/0I7Yl231/1vN0CfnnmVrCr0QYwh38Iy4nrmE975e3mvjnfGBiPjVmw
ySn6F7S78DQ7UX3BfM4KO5/ezfLF/NndomVfxV/SgH12KzUXF3HSAlfxs4fM
0qM/8KRnc/gWIsu/tKqn+dAI4w2otzoH8JUBT5A799lZYj3KvYWpZ1gGsV5c
ZfPi+jLfE+C+qDSPBjvMp8zKkLvI+KMexiOWOOWeq1SB+Z455OUo03B/Kbyk
7Z9vYX7lO6wKR1UlMR94G9FNhY/87cB8kbljFY24/oo4Ft3VGj+sx1hOw8Es
heczPUe49U2iFtZ3fVZpf4FBLrQTid/Rj51vBaa4yiH5Zv4x9G9Wl5hP60N/
cWZ99e5bYh1w7rS9A59nNe5Pwpq/tRvP23uzfvZ2bzfw52NHDQi2NaG/JB67
1v0A82/HEo86J4ph/u0vFw5cbr7bA7w6fNfmm14B9FfPIT5w6AzmL/4yy97i
0oj5wtMsLWu4n2N9MtljnpJq6Zh/k/d1SHFz23fIr9nprkzjSoX5P817T9O7
5kdgflyH7FXvjyXw/Jc+z6MsP+uB1+fkA2ZU2rA+25Cd93vuCWiPJooqfpmP
rFb5M0OMohNZ2tsmc6Qeng/w0XZ5qI/5Z2fqh4/ZVMwB891MjuAKw/yiNK1M
xT5CmJ938tGvp9TCuN/lF9tnbttg/tjn5yhIfiph/lEj4/12RPsx/2j0mZUv
Zik43hOhffWxfOvAGoYTfVZkmJ/27r4X2znC+sD+HgmZZMful+P3pNqab58m
fg9PR87QkZ/EeopWjv7k6wF4/iFn11hcRMphvIcutRo+n3D/McTu6tZ0WG9u
t6olq/rf1Z+0dzznwFSK+Ylrn1x3IGfA+oW9SjNnKrK+AhPuuue3Qxzrw9nU
EF7SfYj5dRmFZF4na2P+4pe5rE8npbCe4Pl6CY/NOswHW7m2XejBG2w/5yx7
RsumF1iqJO8hVzmO31X3nqGyFvMLp73iJ3mfgPOdTl9kON//A1jrx16ihBi0
B/+k7UBO4BbwpaIThz1f4vNsqTvvTIpiPvXju8sfaurifhVamAwmSGaA9UkC
lU8uYz7jVIY9rkwXlqE91Ik/LKge3y/x6anJg0MPoL8Bj1FR4V3cv4DB8BTJ
Vjn669uj1C9tsV5fVTfbxU/KOJ+5c32ibmQPPE96rvpk2xbmR05jdCO8Gozv
K8G716eP5GL+6bNfFXYG8W+g/btOJ50rxfehekieYVso5seeTJEnmnjmC+zp
GdO/Wt4O+XaNDM1z5143QD7gJe/RWaXNReDOPFNlespZ4FvCg1fuXVkAJmDh
NdDbMQRs4RsllmBaA6xsNvpIpGgMOO6uUGdk+BowW/zNOJdAQtnfrMLiwz9m
Ogft9k9pW9QGZoA3wlM3EjmxXh8Fnf/ojZI67B/2mVwmNhHYuNAipdi5C+v3
qU6RGu3FfNDRuW9Esoswv3iBo0kWsT7646DzkgUhUy7Y3zjS632hCuaLt1vq
2+4hgu+j85x6Q/XyDxjfK+dFU8GbNpjf5fVY6D25AWAVrjeProRj/up8ddfZ
7DI3zO/rq0u7mh0D+VlDpii4lSQwv3SB0JiYQivWrzO0PrQiXjKJ9csWvu1d
+I796wei14YeYn5lh/1bj4Y8MP+rr8S7Ta1CZL8hvdKWX5j/V02ttuodLebz
ra1LkRpzxXy+YcH3BBaGsd7dW9V774n+9n3/za/C1accGzA/MumLF46MBX3A
2bZP+Mw6sJ4eVaOKzOBnnL9xfCj841PMz30wRarRMBDzaWvqyniRp2H+6wc7
qieXXxeDPfP9hdz0bBLgfFjvWr7kejwN9s/lmPQJHGxBf/kgEW6W1Q48xmsb
QmOF58l89zG3J9kIzHfy+MGL7F2YP1llROtEpAzub8M9h1vqOdZ3FCjQc1Ac
xP20GI+OeZTj+Z25GOl55RvmL77YGBBaSz8G+6F4aOGvTIr5jks9aYzMiBuh
v7f+zeLHJ7GeHc9Go0O/Ea6nkze/pnugFO25oNymtx3zG+cqva+0SMbnXfsV
Go+9w/qGB9ydvKM7MD86lc0Ov9fKeN7MlUwjWz24/gzL5pDvr7C+pmLgVJnm
p16Yb59j4FZrDNqHIcw6pdMQ7Wk2TpEte2mH7G9manjx+ODzncBbnzjFaO4T
A7+eKp3rE8T6pt/Ne4wUzmO9P6LDRkyX1aZh/L1k8hkWgt3AXHT3ZCpbmoCn
69OrtFbRvs+ClvlHeOyBm13MpXedxf0/KtQNMNHD99Mht6X9xkQqzO9wWHOX
6RM8T+GRk3ZX+DB/d94Y/0KdEdab/LWi+aLDHPNR79+n6LfrOtZbLG0PoJ6u
w/zGp0Pe2rN5dwNrRRcxB5q0YX23wqwoFqIOrLcmXs0zZRIN7KKcEhYhiPmT
nTM+GA2pY/7Yi8tMRzSdMf/xRQWHii77BOCm3o0Mn6lN4OcGeefKGTD/LXmS
19fQI5hfdWZV2oBKAuvpbdfyPp/YjfmcFc6XB6VETsL6DHwbHgxIY370axa5
F7/vxHqvP1N2lnjvmgaWejP0kdUe6ytuBTat7BjAerPVx6sNNVUw33bdLUfh
r/W4/2u3TfjXbDHf8Fi0jqklI+aHnpPp4P85jflp5ZboExMdcD8rJm7Ct7OW
MX9yiJbKshHmy9bWPCy0SxTzuT6QFL5M7478KFizsUKEIP83W/0kpu3qQ75X
EHasdw/Ol+mT8fyIPeYHZl5+bPogowfz677m38i7hvmCR351SpW3Yf5mg8F+
s0eFeL5f/KWfbHjieQ4Oz7fX2FbDeEw+4QfOmKP95qV8IwbPYT7q3Uf6zoxu
x/p7dW71t/mM0Z4Gy+mWqZyYj/anYqJp2sAA8IWrzS1x/ugv2wZWgieXsP7f
1Fip54VmtOeUNQnnzdwPwLQZWu3L19JhPL2hn+fUjDG/sndBkIJ/AObffqy/
n8pjxwbm65YmuKKnh+d9gz2u+A0B5ud+M1jRdVIX8y2/avXMbRLG9q14sdSX
ToXAIpPlWbkEOF5bdpZ8xQ/0D5J4dgfyYszXy3nUd4U3H89j3GNlmfsC8v13
1nIdOVgPdTlsX6WIaCOwWUGIFh8B1tuUf9F0uPMQvs+XTk78+iiG66/ip2K1
kMDxV+12V1W4YH8haVuNnEuU4H+ubY8qY64TATsqnRn/dBrtZ/l070gJN54X
N1fkDccezD/NF6pMXBq9Bva5bVd7IIY/F9oDDHpo7npi/uv3s2UBn/egPx0e
lydk1sJ88Jy0T6urQpCzgk+xa7mU4PvoP7DF146c2rb+stABv0/R2tvUDSR/
gF7WbH4u5LEe1rvr1FjyXLmM9eYMizM/bds/AayxnsARMov16R7UH2Mj2lUB
elvtF673pS2oR4r2cQXxLWO9Ol19gopU8TngpIM8CwHkY1hfrspXN2sV801T
PS65qHkB68nxrrdSdXGiPlvE/Kqav6Qa+EPFWynqIqxft/3q7g9CFoT5v3mw
wLfqXAzWo1tsFsm+RTcI/LIp6AQ1azRwHKWc6iEnHO+q1swXgaofsF/Be1lM
SmpYzy2W8F2aPc0MnHfNmVeJFu/SwP5EBeqU7kb4/af1eNsUEo9MYXpbXlYe
v1/79gUqsqiivSUXHlwu+oD1FjO1V7jXiLGeIdPPgT4DJyLQk2MiwrSiyjeh
/Y2Yuunz01h/kIPc2YfTH/XmmJjr0pR0mcDn+nNkRehQ7y5X/VFBy54G3HBr
fsciRxIwb22tUD8F5lf3qYswHRTdwPp+LjIZ/muol4e5nNWI70Z/vLid9CI9
9UfgjzPs9h5DqM8vZkg9Yy/C8ZWTq4gK3FAPFtQYiRvjQX+8H9TAsD66Cv1f
zFx+YSiF/uxbJVGb443jq9YdJT4vjPX6PttZ7T8ZXIN6unGKdS5dLbSX1F+P
DPdDPd7jwvg+aTp8n66WidfXR48AJwytr2l2dgGHcx+0SFhLBz3FdqJ5U4Z6
HfQU9pWwF+svsD7YteAewwqCeWAnpe6dlXbI4ac+6/ikdQPXD4qmPDxYDVxu
9rmSIR31HOH9z/rMo1DvOXLozbboJdRTQ4UDPxiM4vxHGVObK6ymgRkj3/nv
t0A9dprA3V/L5RvY6+QF3iLqd1gvL6VDs3SeE/VTo4Zby2lyLcDh6s3koV1Y
f8/Sb4drxHl8fqdabf/p16jn6tVqHKc+iPqkR8gK914i/P7oRkWynrGpgvXc
5rTepORBfwlRqjfhU8fzyb9ocszqB36feiUZbQdn8Pu1pkrWXWWYC/ORC9iN
rpHh/QSDqfxEOz3WH8zVk8zmlEjC+m2rFg9Tv+N9Qunn0kbPSOT9FIJnONfw
fkA7dc5oWwLWwxwiNeWpcsL6ibuldsePSeH53zK2fTl4H+f/IsBhMZz9AziA
08aQJbUE9ege5QeCo1iv8JpnuPOkPM4vxecXzVaQhetvvUbCmV8LfLtQWVwk
uwT6m9PsNJQ4hc+/cA+t9o2Ngf4aE0zs93clAu+Uo//UvA3rIz7RziBsL+oF
PlzNynmlGu1nr0WnqxeB/hFY4hESNIr1Ec0Je6wfLOD9Dfmjc/MttFif8eOJ
72mbB4aB3+QYlmrS4vtyJT5tw6WyEJ5Xpdu7W6emH9pjtnTigsPwPoeT3zQp
rdoS9BX6c4JnH/ViPcU9BtJjRuZYz03FX5hj1gnrI7aohvu5aC4BbxvM/tpf
ivUKjVwlSsNv/N14YVU50WErwBZM+uReCSPAXHKrndXP5oBtowtCGW7j89VU
et/nknA+tZ7tx71NcD1uG/cHZP9On73hcvQqe8Ug8I4mFttdM1g/0XN0Rd69
G/VAVwEJuVPzYWA/emXP53ZxqGeTCzQ3M57B93dX8AeS5+9RXzVdsZZ2YmqA
8USDhl8fe4n3Bd8umF2ojsTvU/T31J2846PwPIWaQZ26D9bjE3iW6fvIthLW
c/zgWmRiCX7/yJqNtVy/4X1e5pJYYvEetNenLvYXPHFYP/FZ+ex3SlnUywIS
vtDJfkb7t89mn1K9g/YyrLwf4j6B61FRZ456Qz8NfI/z1ztSbdTbsihGvWmH
0F/ojrM5hrrnAdfTNxo46OJ6xhhPGT31xvqGmYsxN7hurAHzfOgzo9+ZD8xa
oJh78yrq635R1bGt5wbwvkB6beokE+qvKqdTojYvoD78qYx46KXvIHCAf42/
2YdWPP/3Ll/cAtG/GuRXVLW9sZ5jsL9bsVsJ+rfBk0vuHCvorxemL6neYEZm
/2w4d6wd6x/e2vB+xMaN6/HZO3KOwQrr9XnmakielsbzMVYQ7bgqivVKFTLU
bkX6TgELt0neHk9aBuaLrefo/jEEetpDNYMjx+7ngz5Gw51mJiXxE1imPmPq
/AXUW4XcwpY2FIuBaTcEv8kUd8P4kxJKot9jsX7i8Y15mnPHsZ5mxEdex6/p
+D6W5LPadzW0A+97mEyaZjgC/Y/siNfpLsPxnKInslvbsL5d1FtF2Q4JXE+q
sMyzR7VxwERjA27Cj/F+gKP/pgwlH97XTCgoFWbk4/tN026fLSuSA/3bae9/
uumF8xdU/ricLo33K3VyKak2aegfM6WtMdzcqP/veTpQxNCO70Nxgj+rRBre
N4Q7v0gS3/8cxvPfeFRcxo/3IWbORmvs978Bh80xvB3U64HzI+g3ZBtvPATn
taAp9yMlGfUzqi9HiJoZUJ8zM7nk3u6E9ftm+xo2G21Qrzv8bOnNtcpfwHkP
Xg+GRJag/njjaGoLP+q17I/PS68+LcJ6fFRHQwvOo75LyUs2xHwZ9ZoAE4tw
Sk3Ui0WO196WFUZ9ervU+lbQIOqXujTOqfZt1cDDDU3bMzlQL/Jp+3b8Z0sR
7J+0xEhxvyDeNxiEl4U6V6B+mdzMMLBbohP14jfL5BreNWCPTWHdbsMU9P8O
YtKiXPt+aFciM6DUmUA9slHfrNGJH/X6OfHBm9tlsB4ke56jmJYt2j/XoPM+
T3I3jC+qfU/5+rUFGF/ITqZiz+YA8IHdHYppldnQf5+8+5AdfxS0Z5HMkyVb
o57/aV/W09suWD/xesBYc0sX1jvsZY765seCemVqXHzS9eJZ4O2UgwLHw3B/
Y9kt2nV9C8B8w1VMAuMr6B/hisJBnXh+bcnCbGuyaI+X60mbNG/x/kIiqM67
oxbblfRvUWaSYj3E9rff+kYVfwDLPl+8wbSjHeYPI/q4YJ0YBxynRpl6JaEC
+jc0WphvdaB+26Q00zTAhfrrtSqinyrvkfv9uO2KclCvtewcvPHwI/rn9o99
2cI8qJ/zXGTaMvTD+xLT02c2aFbT8L4mw+8qm2gw1hsc36fp24j1Ei+75Dz8
8gnrYVqUqe9gncDzO29hdpnKKQGYPlmYZjQQ9fqRsZazl7kaYHxKsayDQ2Hl
8O/xiOX77NYmxVj/ymecRZm6GvrzuJ2/cWy2FFiWwvGIGpkr1g/b+iZfKjAE
47nlnjPisUe9+s0L6sRPJVgP70y6z37loFrgtIe9wTMfcP4rE71zCl5Y74ue
OE3PkBn1Tfcv9hN3U1F/JK6k4Gm8gHqY8ODZKsXDWD+T5EPDg9MlXbC+Gzbr
XyyLKqE/wzFfUtNj6L/eg2x1wpL4PVl85zHJ/rd/v/zmd0H7CnLkloHHXR/7
6g5/By6cFFPLVML6rWE/yn9uOC8B64Q+dfPlwvNzcfgas/n6Kz5/sXGoVBz1
66tqHsNT0YnQf/eJekmBbVgfc1Kf4/MVFtSDe30IlF7Uo75bG6M+EVdTjvZ0
6tU4T7OE+tiQXiGLQyPYx0nHSYvJCttjv6eMnz30d/UDY82TmKRQn7XlND8t
K1oI3H/7w7TnFOprOl5Vff7sWN9RlPWk0758rAf37OmNo7G2qFcK6i9q0Gzi
eoICa3oeqtBA/9yjBJUxkdTAq8zHx3pTyIGNBGOVPWZRz39ymCudYhnrZ5Lp
DquNl+H69kyKyWtNo5582I3yPvco7s8rokw33w/14pk1tzx+QtQn5ydiRRg1
0P71leH9A0XJeF9gMvxkXK8A6691FX/tysX16Yt9SknTxfV1P3Ee5CLA+53M
IslvBtqonxPIHOlV1sb6hSlHBT5cOlEM4+tu5yOLF8X6iXtPs0uqaiQCUzdp
X7p5CM/3NbPx80naX3hf4+Co03IJ9bcbNyVVuHLw/Hgm7/56EI71+tq4yRVZ
OFCfS+DXpWVYQXuy1raNk+WjPvs9gCOOoA315rCfl3kp5fB7ICJSM0TyvQjG
j4k5STjoV4H631GT8IjwTGifEjtxRCUR9eZPbj6vfbxRv84ccxrpTkY2Y2lq
o8lFPdmu7deFnSa4fttUg3SL/VgPMuzzR4PLwUTgX0/Ct+2OTViH9tS1RDGv
dvQXieO5K1lZeP47H6fLd82g/m21rYidqXMJ9WWjisz31oSgTw5Fc8W2y2N8
668O3kwSikLQZ6YnxCq0s7Ae48Yt6YR6Rl/oH1v86t4bEezPcW92veHdOLT3
P3V39OpCvXR9t6vVksw6xtcGGbaWyaJ+KublEGg6jevb3Vd6QT+5Dfav6TXN
tZaKenTIogKxFR/uj8S85l4mLernu90XOMOfoX5sn2cnkFOE9x8aV41I4hkK
gD2Eb0gaSk/BfPtfWzpe4suB508SSuVMbWC9xDnG+lnjrWz8e0DsO3lNNBCe
t5Tnyf1ZhuelYhqkdLkM/z6Zss/ECB9E/5u4XjCdY4R/f+Ls/EMcovA8lbp4
XyTewb9H9513P1kyHQb7Jamxp9VUYPzx6mQhn+Mm2j+E6mltOnEC8F2qgRUO
GowX1gyTvTgdjPU1Xwy9/Xg8MR3rcd5QLA48jOP/KBbpljmB+u3h1xY1cR9R
Hy5KMuMsKe2E/ls0Wgfann3D84ozt225g/HRgxrXon33oj9oXKnn0UlAvbCA
r3XhKjXqu2l3FKhsto9C+6+Mwh2z7qXY/4vNfMFO3N/Wy9LR5CffgY8Jag+d
58P45YWPdCeMtVCfX1Qs6KESw/qjHrfltuJf4H2AOfs3k1Ye9LeuT4XhnxtR
r2xdMRVj9G0Dng/KVXMcQ300fcEm43BGL4zPwFxDafQL718C3ZzOL5W04vv0
NuCVbgH6s6XVF/Y9hbj+6d7mQUUDHP891/HmhqoWYANxNn/BQnx/uNm885JK
8T6m3YnDc15sFNiktj1y5gnOLyNddJW+FvXQmIf0iY2FDRjP6lLpfYUb41sF
XcapwxlQ3zkzUEcowrQC7ctt9tp0jI0w3s00luIxxTWMV+0t0B+Zxfjmjfid
w1N3iTH++6q0+FQK6tlxkqxH19wHYL0Edhcd3jEXAt8hlNX3lc4Arh4aTLEg
xvuG3sbMjapCvE9SUWXWyy1H+2VefybMrYnfS2On3gTPxyPQP/7yMrceJRl8
v8L7tM9eVyIFtpLSNmXux/j+HzF3eFTUUX/Ob/rkejsF7fnw2XOpkUJsn2qh
51pvxfsClXw6G61S1HufUcsGX30zC6zWRdrp9w31O7H7fjpXuFH/m4ud+ylh
ifHW7v0yumIeqG+7dflnjImMAYcwMMk5Bo1gvLmwDJOzF+r/C3pMwQevY3yq
AsdxNZepNWhPtdi03rmO+vhe6zfBOmYLwPyGR+dCBvC+I5lubo2qsAM4eNvF
ptgTqD9X1tmlxAtmA7MpsWpqsON9Rb5NToidCerPJKMXPMT3ot7er9nZR9aB
+rdKnNJL70b0L4LZieiz1ciTw8k9H76g/cKN1c/4XUP9W+zik2tST4dgvBnK
QKrCcoxfjyETET1wBuOVPw2mU5+YbQK9Re7EASouJUKYL+/gHuMPe1EPfSil
1lsRSgDxqSWnF3TpFmZhvHLJajbKItTbbB8yKgozYjzrW/fTIpqXUN/imJ/M
PnQpDJ5vO/OKl5KvFbj7bqP9FfMQ1HeNKNpTPn/E+OAOyY4mN4wvFS/VlUzM
Xgde3iutFn8A9UYxpmyhhL2TwMSvFure0mO7/G5B0cNEqG/v8S0uJbqF8ax2
NAd5XQ78hPYKf9p7AaFdwHFlR+9LJ6E/6dSnaec/Isz/zds2PoUzihOBPbbE
x5SXiVdR35qZfy0tOoq/L6Dq2j3gjf44xSe7KzR5BVg3L5Uz4RjG14+NmsSl
+2A8uASF7Ar/AuqvL1v87uoyoj5amVg8/KIS9WS2BJ318VrU/yUYFfUYhVGf
txgJP+kYgXq28qV3Atcu5EO7O4u49YYq6pkym3SLYSV4Ho+jVIitZrug3e3V
L8sBgQCMP34f691GXQPsqrig/1JuBXhb9YFz3ZG4nx6xJPlXi7+ASW8SxmlU
p6H+eOmkkFg46sdmZ9mprarR35/GXNFfbET9nDyJojNsG+rfPAKyjvGRKRiP
TLxaKxFaBv2bG3jPzMo3Q/tMfjKFyhO0l/eDZ7s8KtBee9rOJt+rKwJOyVjM
caDH53ec2tF7Uh715FqfziSiHox/1jGO3KAdxvsB162DhGpPcX9e1XEkwmlo
r1Gz4pBNRzyfW6dGheLF0T+8mI+IE1Di/YP7UASjMRnqs306SqI9L3A/DsSW
ir80MF49tj3UUIu1GN+f6CzxqEzUg7usHpOSHqnD91NUKIAzrgCe3xXQSnIv
CN/f6swDY31S5dDuNHKU3D4Hf+9gHJB998oP/D3EEVebmdB05OOGbK+sqPH8
Tu2rEKFRwe9dddcnRVVOjN8X7WB7leQVDTyvrqRvfR317kG/EBppsa/QLr27
ttKXC+8bXFYHTOYp8Xt16rvuGOUsfi/eerzyS7fC319YLG1kDqXhfViba5eW
0le078eHjlVenSOgZwa4nl2LFu8A1uc1HeL1wPjqI3yEYkxW2H/tFNebw+EY
D87wJJS5LioS48NX6LIVzjdj/OrhHjXBdozXjVbVZRyQRz3N0960maFoEeN7
yx/6zr7AeOqcxZbWOWnUK1eydQhmaMJArxFKP1oYmo96t/5Gs+ZFh++w3pwJ
h1rrD6gH82e8aorTz4Tnnzk1RNVdRH1ph+auM8xlqCfZsBOS8zSi3t5yK1/v
0Sv0pzh6U1var6MwX/POl+WZTwkgnvZbdqSujSHeV9QmhdPIGeH9yd+Mb9b9
Ab+HpKe0dkSzoX+FG5bsDudG/6tP2+zJ1kJ/teWfKme17ILnRRL0te348X7B
MZBn0fc66r/mH0KY0szRvu9dHVXPM6AeWhRnHqxMjecRsXmCV00G9eqs/vdc
6XGobxc32Piq01cAd0yHmSl87sf7CP+7nRGVlcAJcqfZ3RdQ/7WemvBatsX+
SwWzYgfDUC8nPOlHZhKL8e+TpXu/VA2jXmcu9qTdlmkQeFhIMUwpCOOxx9bz
BaPscT7aqpf0Rh8w/rVlzvirQSjqm59uftWPyEM9nOFOFoOaDe6fZ2HGyvRA
OvBOuaWSRL9EYIJ6oh9P9UyAzz90/BVVi/c73QI13v4hGJ8/KaleXpbyHtjo
DudnGoseeF7NzXDSvbIZOJKZ9HTsOur9R2wVVq85o78uvBUOWbVAvZvjh5bq
NUO0r5rZXkXVs2i/C5a9aqNfkRc9T3PJXx4CTjxyqo9KDuPln931mAy8gvHp
r2Xi2Ie8toBNrryq36WD/qXdY+ysLo3jqZHmKDj14HlclXG3dfTC83rNk0Ob
loT6QYDqmu7jkyugH2TZdc9rVI4DS7PFf9HcjvpY/1SsdEoq6pFzEdLbeANR
D7m63La7/SXqC3em+B148lCPU+CZF7k+j/rhUPLHK2Z2qFf0MPX9eDCO5+NS
O75fgm4dmDn0bK88Je6/xUDy0C8+9E8i8VfJ1F5oj9NjQc0t8VvAh9uOMl93
wvnElY89jtuD+5Mymn+aGFmF8aXRO8bzFVD/7GkKuUkYifu3mdf1q1tGvi7w
QIHQAvdbNvsg52YY6ontGoTO+q7Iz569+SRQjPrloJa86B05nO8rY8KDKX/U
V1UjKxRPsbcCExZqC379ivG6oR93bvUlIbtcucFQsx31o4S9B59n2aGeudlj
zHn/HrZvCkSX35VAtkk3LbZ8j/6ySlwSQaeN+mPzWQMhnVzUm6d1V26oL2F8
sc/dmi17FowX/5YwZXnaDte/f9qQIuQVxmMneEfUGp/8Ac/zLYvm+x1EPT+f
aS914uzf6ftuVgJBvKhvMd3bL3g73ByeX2ObCpPu2UL7r5wjPpy0ivbU2n/c
UxbvHxoGTj43Jy5D/yUqfNKtg/o5RXJ0bdA21LelhKtPdB1bRf2N4aLmtUu4
nv09jwmdFVHfFouLj2SwwudNbgXEbTvVAHxo20hm/O0xGG+cK1bR/gvGg79n
YfKPMN8G8cxmkyTP7PhQX48Wmx8JdkU9OK6Ntajj+jq0d9rEWZJ5oP3qpfco
Hhqpg/7nVWnE5Mo3UX/MVHveIoT+rVtCf9+3MxnaJXXJ84JI54C1syrpixlw
vTqyE0+ir6H9cr57t9idwvevV3RZ6DMJ+tP1xwm+76kw3lum7bu+ZiTq4anX
EqVzRNC+TtM6MlV86K9RCtpxyvdQPzx4mbjjnNc86CVaau/6evJQj97XdvOO
62XU59aIhBh3s6B+6UZpohei3gn7o3aiOuYfh/dB0TyKXlEpo9DesdjLe40e
7xuSdIorg5/i7y/qtq+vsXGg/W2K/evTWFGvv0N/4uJYBhmwn9pcZELUNmD+
ih11tIHI1cv3pUSZtwOXrz2jeamP9lgKMMzdaCiF9TRpkFkwdY7B/gITaUyH
ulEvFDIUFXdnGMJ43mZdyfd+TdCf5Vy1jfaxMmDWTLXihcM4nu/reyVvY7Ph
eWeBy3vWPFHvVpGk1VNswe9B6NKlCIndvbC+cIuE5MuCqG/dsDJZTu7Bvy+i
LA3mpKv4e4ynyacUDzE05v0vxL257w==
    "], {{{}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{1090, 1}], LineBox[{1091, 2}], LineBox[{1092, 3}], 
       LineBox[{1094, 5}], LineBox[{1100, 11}], LineBox[{1101, 12}], 
       LineBox[{1102, 13}], LineBox[{1108, 19}], LineBox[{1109, 20}], 
       LineBox[{1115, 26}], LineBox[{1116, 27}], LineBox[{1118, 29}], 
       LineBox[{1127, 38}], LineBox[{1128, 39}], LineBox[{1129, 40}], 
       LineBox[{1134, 45}], LineBox[{1139, 50}], LineBox[{1149, 60}], 
       LineBox[{1150, 61}], LineBox[{1151, 62}], LineBox[{1152, 63}], 
       LineBox[{1162, 73}], LineBox[{1165, 76}], LineBox[{1172, 83}], 
       LineBox[{1175, 86}], LineBox[{1177, 88}], LineBox[{1180, 91}], 
       LineBox[{1181, 92}], LineBox[{1182, 93}], LineBox[{1185, 96}], 
       LineBox[{1189, 100}], LineBox[{1192, 103}], LineBox[{1201, 112}], 
       LineBox[{1206, 117}], LineBox[{1208, 119}], LineBox[{1209, 120}], 
       LineBox[{1210, 121}], LineBox[{1211, 122}], LineBox[{1212, 123}], 
       LineBox[{1230, 141}], LineBox[{1233, 144}], LineBox[{1235, 146}], 
       LineBox[{1236, 147}], LineBox[{1237, 148}], LineBox[{1239, 150}], 
       LineBox[{1240, 151}], LineBox[{1241, 152}], LineBox[{1246, 157}], 
       LineBox[{1262, 173}], LineBox[{1265, 176}], LineBox[{1266, 177}], 
       LineBox[{1267, 178}], LineBox[{1268, 179}], LineBox[{1272, 183}], 
       LineBox[{1293, 204}], LineBox[{1294, 205}], LineBox[{1306, 217}], 
       LineBox[{1307, 218}], LineBox[{1312, 223}], LineBox[{1319, 230}], 
       LineBox[{1325, 236}], LineBox[{1326, 237}], LineBox[{1334, 245}], 
       LineBox[{1335, 246}], LineBox[{1336, 247}], LineBox[{1337, 248}], 
       LineBox[{1338, 249}], LineBox[{1339, 250}], LineBox[{1340, 251}], 
       LineBox[{1341, 252}], LineBox[{1342, 253}], LineBox[{1345, 256}], 
       LineBox[{1346, 257}], LineBox[{1347, 258}], LineBox[{1348, 259}], 
       LineBox[{1349, 260}], LineBox[{1350, 261}], LineBox[{1351, 262}], 
       LineBox[{1352, 263}], LineBox[{1353, 264}], LineBox[{1356, 267}], 
       LineBox[{1357, 268}], LineBox[{1358, 269}], LineBox[{1359, 270}], 
       LineBox[{1360, 271}], LineBox[{1361, 272}], LineBox[{1362, 273}], 
       LineBox[{1363, 274}], LineBox[{1364, 275}], LineBox[{1365, 276}], 
       LineBox[{1366, 277}], LineBox[{1367, 278}], LineBox[{1368, 279}], 
       LineBox[{1369, 280}], LineBox[{1370, 281}], LineBox[{1371, 282}], 
       LineBox[{1372, 283}], LineBox[{1373, 284}], LineBox[{1375, 286}], 
       LineBox[{1376, 287}], LineBox[{1377, 288}], LineBox[{1378, 289}], 
       LineBox[{1380, 291}], LineBox[{1381, 292}], LineBox[{1382, 293}], 
       LineBox[{1383, 294}], LineBox[{1386, 297}], LineBox[{1387, 298}], 
       LineBox[{1388, 299}], LineBox[{1389, 300}], LineBox[{1391, 302}], 
       LineBox[{1392, 303}], LineBox[{1393, 304}], LineBox[{1394, 305}], 
       LineBox[{1396, 307}], LineBox[{1399, 310}], LineBox[{1400, 311}], 
       LineBox[{1401, 312}], LineBox[{1402, 313}], LineBox[{1403, 314}], 
       LineBox[{1404, 315}], LineBox[{1405, 316}], LineBox[{1406, 317}], 
       LineBox[{1407, 318}], LineBox[{1408, 319}], LineBox[{1409, 320}], 
       LineBox[{1410, 321}], LineBox[{1411, 322}], LineBox[{1412, 323}], 
       LineBox[{1413, 324}], LineBox[{1414, 325}], LineBox[{1415, 326}], 
       LineBox[{1417, 328}], LineBox[{1418, 329}], LineBox[{1419, 330}], 
       LineBox[{1420, 331}], LineBox[{1421, 332}], LineBox[{1422, 333}], 
       LineBox[{1423, 334}], LineBox[{1424, 335}], LineBox[{1425, 336}], 
       LineBox[{1426, 337}], LineBox[{1427, 338}], LineBox[{1428, 339}], 
       LineBox[{1429, 340}], LineBox[{1431, 342}], LineBox[{1432, 343}], 
       LineBox[{1433, 344}], LineBox[{1434, 345}], LineBox[{1435, 346}], 
       LineBox[{1436, 347}], LineBox[{1437, 348}], LineBox[{1438, 349}], 
       LineBox[{1439, 350}], LineBox[{1440, 351}], LineBox[{1441, 352}], 
       LineBox[{1442, 353}], LineBox[{1443, 354}], LineBox[{1444, 355}], 
       LineBox[{1448, 359}], LineBox[{1449, 360}], LineBox[{1450, 361}], 
       LineBox[{1451, 362}], LineBox[{1452, 363}], LineBox[{1463, 374}], 
       LineBox[{1464, 375}], LineBox[{1465, 376}], LineBox[{1466, 377}], 
       LineBox[{1467, 378}], LineBox[{1468, 379}], LineBox[{1469, 380}], 
       LineBox[{1472, 383}], LineBox[{1473, 384}], LineBox[{1474, 385}], 
       LineBox[{1475, 386}], LineBox[{1477, 388}], LineBox[{1478, 389}], 
       LineBox[{1479, 390}], LineBox[{1480, 391}], LineBox[{1481, 392}], 
       LineBox[{1483, 394}], LineBox[{1484, 395}], LineBox[{1485, 396}], 
       LineBox[{1486, 397}], LineBox[{1487, 398}], LineBox[{1488, 399}], 
       LineBox[{1491, 402}], LineBox[{1492, 403}], LineBox[{1493, 404}], 
       LineBox[{1494, 405}], LineBox[{1496, 407}], LineBox[{1500, 411}], 
       LineBox[{1501, 412}], LineBox[{1502, 413}], LineBox[{1503, 414}], 
       LineBox[{1506, 417}], LineBox[{1507, 418}], LineBox[{1508, 419}], 
       LineBox[{1509, 420}], LineBox[{1510, 421}], LineBox[{1511, 422}], 
       LineBox[{1515, 426}], LineBox[{1516, 427}], LineBox[{1517, 428}], 
       LineBox[{1518, 429}], LineBox[{1519, 430}], LineBox[{1520, 431}], 
       LineBox[{1522, 433}], LineBox[{1523, 434}], LineBox[{1526, 437}], 
       LineBox[{1527, 438}], LineBox[{1534, 445}], LineBox[{1536, 447}], 
       LineBox[{1537, 448}], LineBox[{1538, 449}], LineBox[{1540, 451}], 
       LineBox[{1541, 452}], LineBox[{1543, 454}], LineBox[{1544, 455}], 
       LineBox[{1545, 456}], LineBox[{1546, 457}], LineBox[{1547, 458}], 
       LineBox[{1548, 459}], LineBox[{1549, 460}], LineBox[{1550, 461}], 
       LineBox[{1551, 462}], LineBox[{1552, 463}], LineBox[{1553, 464}], 
       LineBox[{1554, 465}], LineBox[{1555, 466}], LineBox[{1556, 467}], 
       LineBox[{1557, 468}], LineBox[{1558, 469}], LineBox[{1561, 472}], 
       LineBox[{1563, 474}], LineBox[{1564, 475}], LineBox[{1565, 476}], 
       LineBox[{1567, 478}], LineBox[{1571, 482}], LineBox[{1572, 483}], 
       LineBox[{1573, 484}], LineBox[{1574, 485}], LineBox[{1575, 486}], 
       LineBox[{1576, 487}], LineBox[{1577, 488}], LineBox[{1578, 489}], 
       LineBox[{1579, 490}], LineBox[{1580, 491}], LineBox[{1581, 492}], 
       LineBox[{1582, 493}], LineBox[{1583, 494}], LineBox[{1584, 495}], 
       LineBox[{1585, 496}], LineBox[{1590, 501}], LineBox[{1591, 502}], 
       LineBox[{1592, 503}], LineBox[{1593, 504}], LineBox[{1594, 505}], 
       LineBox[{1595, 506}], LineBox[{1596, 507}], LineBox[{1599, 510}], 
       LineBox[{1600, 511}], LineBox[{1601, 512}], LineBox[{1602, 513}], 
       LineBox[{1603, 514}], LineBox[{1608, 519}], LineBox[{1609, 520}], 
       LineBox[{1611, 522}], LineBox[{1612, 523}], LineBox[{1614, 525}], 
       LineBox[{1615, 526}], LineBox[{1619, 530}], LineBox[{1620, 531}], 
       LineBox[{1622, 533}], LineBox[{1624, 535}], LineBox[{1625, 536}], 
       LineBox[{1626, 537}], LineBox[{1627, 538}], LineBox[{1631, 542}], 
       LineBox[{1633, 544}], LineBox[{1635, 546}], LineBox[{1640, 551}], 
       LineBox[{1642, 553}], LineBox[{1647, 558}], LineBox[{1652, 563}], 
       LineBox[{1654, 565}], LineBox[{1655, 566}], LineBox[{1660, 571}], 
       LineBox[{1661, 572}], LineBox[{1663, 574}], LineBox[{1665, 576}], 
       LineBox[{1666, 577}], LineBox[{1667, 578}], LineBox[{1668, 579}], 
       LineBox[{1669, 580}], LineBox[{1670, 581}], LineBox[{1678, 589}], 
       LineBox[{1679, 590}], LineBox[{1682, 593}], LineBox[{1683, 594}], 
       LineBox[{1684, 595}], LineBox[{1689, 600}], LineBox[{1695, 606}], 
       LineBox[{1697, 608}], LineBox[{1698, 609}], LineBox[{1699, 610}], 
       LineBox[{1700, 611}], LineBox[{1702, 613}], LineBox[{1703, 614}], 
       LineBox[{1704, 615}], LineBox[{1705, 616}], LineBox[{1706, 617}], 
       LineBox[{1707, 618}], LineBox[{1708, 619}], LineBox[{1709, 620}], 
       LineBox[{1710, 621}], LineBox[{1712, 623}], LineBox[{1713, 624}], 
       LineBox[{1715, 626}], LineBox[{1716, 627}], LineBox[{1717, 628}], 
       LineBox[{1718, 629}], LineBox[{1719, 630}], LineBox[{1721, 632}], 
       LineBox[{1722, 633}], LineBox[{1724, 635}], LineBox[{1725, 636}], 
       LineBox[{1726, 637}], LineBox[{1727, 638}], LineBox[{1728, 639}], 
       LineBox[{1730, 641}], LineBox[{1731, 642}], LineBox[{1732, 643}], 
       LineBox[{1733, 644}], LineBox[{1734, 645}], LineBox[{1735, 646}], 
       LineBox[{1737, 648}], LineBox[{1742, 653}], LineBox[{1743, 654}], 
       LineBox[{1744, 655}], LineBox[{1745, 656}], LineBox[{1746, 657}], 
       LineBox[{1747, 658}], LineBox[{1748, 659}], LineBox[{1749, 660}], 
       LineBox[{1750, 661}], LineBox[{1752, 663}], LineBox[{1753, 664}], 
       LineBox[{1754, 665}], LineBox[{1755, 666}], LineBox[{1756, 667}], 
       LineBox[{1758, 669}], LineBox[{1759, 670}], LineBox[{1760, 671}], 
       LineBox[{1761, 672}], LineBox[{1762, 673}], LineBox[{1763, 674}], 
       LineBox[{1765, 676}], LineBox[{1766, 677}], LineBox[{1767, 678}], 
       LineBox[{1768, 679}], LineBox[{1769, 680}], LineBox[{1771, 682}], 
       LineBox[{1773, 684}], LineBox[{1774, 685}], LineBox[{1775, 686}], 
       LineBox[{1776, 687}], LineBox[{1777, 688}], LineBox[{1781, 692}], 
       LineBox[{1782, 693}], LineBox[{1783, 694}], LineBox[{1784, 695}], 
       LineBox[{1786, 697}], LineBox[{1789, 700}], LineBox[{1791, 702}], 
       LineBox[{1797, 708}], LineBox[{1798, 709}], LineBox[{1799, 710}], 
       LineBox[{1800, 711}], LineBox[{1801, 712}], LineBox[{1802, 713}], 
       LineBox[{1804, 715}], LineBox[{1805, 716}], LineBox[{1806, 717}], 
       LineBox[{1808, 719}], LineBox[{1809, 720}], LineBox[{1811, 722}], 
       LineBox[{1812, 723}], LineBox[{1813, 724}], LineBox[{1822, 733}], 
       LineBox[{1823, 734}], LineBox[{1825, 736}], LineBox[{1829, 740}], 
       LineBox[{1834, 745}], LineBox[{1837, 748}], LineBox[{1838, 749}], 
       LineBox[{1839, 750}], LineBox[{1840, 751}], LineBox[{1841, 752}], 
       LineBox[{1843, 754}], LineBox[{1844, 755}], LineBox[{1845, 756}], 
       LineBox[{1846, 757}], LineBox[{1847, 758}], LineBox[{1848, 759}], 
       LineBox[{1849, 760}], LineBox[{1850, 761}], LineBox[{1851, 762}], 
       LineBox[{1852, 763}], LineBox[{1853, 764}], LineBox[{1858, 769}], 
       LineBox[{1863, 774}], LineBox[{1864, 775}], LineBox[{1865, 776}], 
       LineBox[{1866, 777}], LineBox[{1868, 779}], LineBox[{1869, 780}], 
       LineBox[{1878, 789}], LineBox[{1879, 790}], LineBox[{1880, 791}], 
       LineBox[{1881, 792}], LineBox[{1883, 794}], LineBox[{1884, 795}], 
       LineBox[{1886, 797}], LineBox[{1888, 799}], LineBox[{1889, 800}], 
       LineBox[{1890, 801}], LineBox[{1891, 802}], LineBox[{1892, 803}], 
       LineBox[{1895, 806}], LineBox[{1896, 807}], LineBox[{1897, 808}], 
       LineBox[{1901, 812}], LineBox[{1902, 813}], LineBox[{1906, 817}], 
       LineBox[{1908, 819}], LineBox[{1911, 822}], LineBox[{1913, 824}], 
       LineBox[{1917, 828}], LineBox[{1918, 829}], LineBox[{1919, 830}], 
       LineBox[{1920, 831}], LineBox[{1921, 832}], LineBox[{1922, 833}], 
       LineBox[{1923, 834}], LineBox[{1924, 835}], LineBox[{1925, 836}], 
       LineBox[{1926, 837}], LineBox[{1927, 838}], LineBox[{1928, 839}], 
       LineBox[{1932, 843}], LineBox[{1933, 844}], LineBox[{1936, 847}], 
       LineBox[{1937, 848}], LineBox[{1938, 849}], LineBox[{1939, 850}], 
       LineBox[{1941, 852}], LineBox[{1944, 855}], LineBox[{1949, 860}], 
       LineBox[{1950, 861}], LineBox[{1952, 863}], LineBox[{1953, 864}], 
       LineBox[{1954, 865}], LineBox[{1957, 868}], LineBox[{1960, 871}], 
       LineBox[{1961, 872}], LineBox[{1965, 876}], LineBox[{1966, 877}], 
       LineBox[{1970, 881}], LineBox[{1971, 882}], LineBox[{1974, 885}], 
       LineBox[{1975, 886}], LineBox[{1976, 887}], LineBox[{1978, 889}], 
       LineBox[{1987, 898}], LineBox[{1991, 902}], LineBox[{1999, 910}], 
       LineBox[{2000, 911}], LineBox[{2007, 918}], LineBox[{2011, 922}], 
       LineBox[{2012, 923}], LineBox[{2015, 926}], LineBox[{2019, 930}], 
       LineBox[{2020, 931}], LineBox[{2024, 935}], LineBox[{2025, 936}], 
       LineBox[{2030, 941}], LineBox[{2031, 942}], LineBox[{2032, 943}], 
       LineBox[{2033, 944}], LineBox[{2034, 945}], LineBox[{2035, 946}], 
       LineBox[{2036, 947}], LineBox[{2037, 948}], LineBox[{2039, 950}], 
       LineBox[{2040, 951}], LineBox[{2041, 952}], LineBox[{2042, 953}], 
       LineBox[{2044, 955}], LineBox[{2046, 957}], LineBox[{2047, 958}], 
       LineBox[{2048, 959}], LineBox[{2049, 960}], LineBox[{2053, 964}], 
       LineBox[{2054, 965}], LineBox[{2058, 969}], LineBox[{2059, 970}], 
       LineBox[{2060, 971}], LineBox[{2061, 972}], LineBox[{2062, 973}], 
       LineBox[{2066, 977}], LineBox[{2067, 978}], LineBox[{2068, 979}], 
       LineBox[{2069, 980}], LineBox[{2072, 983}], LineBox[{2073, 984}], 
       LineBox[{2074, 985}], LineBox[{2075, 986}], LineBox[{2076, 987}], 
       LineBox[{2077, 988}], LineBox[{2078, 989}], LineBox[{2079, 990}], 
       LineBox[{2080, 991}], LineBox[{2082, 993}], LineBox[{2083, 994}], 
       LineBox[{2084, 995}], LineBox[{2085, 996}], LineBox[{2086, 997}], 
       LineBox[{2087, 998}], LineBox[{2088, 999}], LineBox[{2089, 1000}], 
       LineBox[{2090, 1001}], LineBox[{2091, 1002}], LineBox[{2092, 1003}], 
       LineBox[{2093, 1004}], LineBox[{2094, 1005}], LineBox[{2095, 1006}], 
       LineBox[{2096, 1007}], LineBox[{2097, 1008}], LineBox[{2098, 1009}], 
       LineBox[{2099, 1010}], LineBox[{2100, 1011}], LineBox[{2101, 1012}], 
       LineBox[{2102, 1013}], LineBox[{2103, 1014}], LineBox[{2104, 1015}], 
       LineBox[{2105, 1016}], LineBox[{2106, 1017}], LineBox[{2108, 1019}], 
       LineBox[{2109, 1020}], LineBox[{2110, 1021}], LineBox[{2112, 1023}], 
       LineBox[{2113, 1024}], LineBox[{2114, 1025}], LineBox[{2116, 1027}], 
       LineBox[{2117, 1028}], LineBox[{2118, 1029}], LineBox[{2119, 1030}], 
       LineBox[{2120, 1031}], LineBox[{2121, 1032}], LineBox[{2123, 1034}], 
       LineBox[{2124, 1035}], LineBox[{2125, 1036}], LineBox[{2126, 1037}], 
       LineBox[{2128, 1039}], LineBox[{2129, 1040}], LineBox[{2130, 1041}], 
       LineBox[{2132, 1043}], LineBox[{2133, 1044}], LineBox[{2136, 1047}], 
       LineBox[{2139, 1050}], LineBox[{2140, 1051}], LineBox[{2141, 1052}], 
       LineBox[{2142, 1053}], LineBox[{2143, 1054}], LineBox[{2144, 1055}], 
       LineBox[{2145, 1056}], LineBox[{2146, 1057}], LineBox[{2147, 1058}], 
       LineBox[{2156, 1067}], LineBox[{2157, 1068}], LineBox[{2163, 1074}], 
       LineBox[{2166, 1077}], LineBox[{2167, 1078}], LineBox[{2171, 1082}], 
       LineBox[{2172, 1083}], LineBox[{2173, 1084}], LineBox[{2176, 1087}], 
       LineBox[{2178, 1089}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{1093, 4}], LineBox[{1095, 6}], LineBox[{1096, 7}], 
       LineBox[{1097, 8}], LineBox[{1098, 9}], LineBox[{1099, 10}], 
       LineBox[{1103, 14}], LineBox[{1104, 15}], LineBox[{1105, 16}], 
       LineBox[{1106, 17}], LineBox[{1107, 18}], LineBox[{1110, 21}], 
       LineBox[{1111, 22}], LineBox[{1112, 23}], LineBox[{1113, 24}], 
       LineBox[{1114, 25}], LineBox[{1117, 28}], LineBox[{1119, 30}], 
       LineBox[{1120, 31}], LineBox[{1121, 32}], LineBox[{1122, 33}], 
       LineBox[{1123, 34}], LineBox[{1124, 35}], LineBox[{1125, 36}], 
       LineBox[{1126, 37}], LineBox[{1130, 41}], LineBox[{1131, 42}], 
       LineBox[{1132, 43}], LineBox[{1133, 44}], LineBox[{1135, 46}], 
       LineBox[{1136, 47}], LineBox[{1137, 48}], LineBox[{1138, 49}], 
       LineBox[{1140, 51}], LineBox[{1141, 52}], LineBox[{1142, 53}], 
       LineBox[{1143, 54}], LineBox[{1144, 55}], LineBox[{1145, 56}], 
       LineBox[{1146, 57}], LineBox[{1147, 58}], LineBox[{1148, 59}], 
       LineBox[{1153, 64}], LineBox[{1154, 65}], LineBox[{1155, 66}], 
       LineBox[{1156, 67}], LineBox[{1157, 68}], LineBox[{1158, 69}], 
       LineBox[{1159, 70}], LineBox[{1160, 71}], LineBox[{1161, 72}], 
       LineBox[{1163, 74}], LineBox[{1164, 75}], LineBox[{1166, 77}], 
       LineBox[{1167, 78}], LineBox[{1168, 79}], LineBox[{1169, 80}], 
       LineBox[{1170, 81}], LineBox[{1171, 82}], LineBox[{1173, 84}], 
       LineBox[{1174, 85}], LineBox[{1176, 87}], LineBox[{1178, 89}], 
       LineBox[{1179, 90}], LineBox[{1183, 94}], LineBox[{1184, 95}], 
       LineBox[{1186, 97}], LineBox[{1187, 98}], LineBox[{1188, 99}], 
       LineBox[{1190, 101}], LineBox[{1191, 102}], LineBox[{1193, 104}], 
       LineBox[{1194, 105}], LineBox[{1195, 106}], LineBox[{1196, 107}], 
       LineBox[{1197, 108}], LineBox[{1198, 109}], LineBox[{1199, 110}], 
       LineBox[{1200, 111}], LineBox[{1202, 113}], LineBox[{1203, 114}], 
       LineBox[{1204, 115}], LineBox[{1205, 116}], LineBox[{1207, 118}], 
       LineBox[{1213, 124}], LineBox[{1214, 125}], LineBox[{1215, 126}], 
       LineBox[{1216, 127}], LineBox[{1217, 128}], LineBox[{1218, 129}], 
       LineBox[{1219, 130}], LineBox[{1220, 131}], LineBox[{1221, 132}], 
       LineBox[{1222, 133}], LineBox[{1223, 134}], LineBox[{1224, 135}], 
       LineBox[{1225, 136}], LineBox[{1226, 137}], LineBox[{1227, 138}], 
       LineBox[{1228, 139}], LineBox[{1229, 140}], LineBox[{1231, 142}], 
       LineBox[{1232, 143}], LineBox[{1234, 145}], LineBox[{1238, 149}], 
       LineBox[{1242, 153}], LineBox[{1243, 154}], LineBox[{1244, 155}], 
       LineBox[{1245, 156}], LineBox[{1247, 158}], LineBox[{1248, 159}], 
       LineBox[{1249, 160}], LineBox[{1250, 161}], LineBox[{1251, 162}], 
       LineBox[{1252, 163}], LineBox[{1253, 164}], LineBox[{1254, 165}], 
       LineBox[{1255, 166}], LineBox[{1256, 167}], LineBox[{1257, 168}], 
       LineBox[{1258, 169}], LineBox[{1259, 170}], LineBox[{1260, 171}], 
       LineBox[{1261, 172}], LineBox[{1263, 174}], LineBox[{1264, 175}], 
       LineBox[{1269, 180}], LineBox[{1270, 181}], LineBox[{1271, 182}], 
       LineBox[{1273, 184}], LineBox[{1274, 185}], LineBox[{1275, 186}], 
       LineBox[{1276, 187}], LineBox[{1277, 188}], LineBox[{1278, 189}], 
       LineBox[{1279, 190}], LineBox[{1280, 191}], LineBox[{1281, 192}], 
       LineBox[{1282, 193}], LineBox[{1283, 194}], LineBox[{1284, 195}], 
       LineBox[{1285, 196}], LineBox[{1286, 197}], LineBox[{1287, 198}], 
       LineBox[{1288, 199}], LineBox[{1289, 200}], LineBox[{1290, 201}], 
       LineBox[{1291, 202}], LineBox[{1292, 203}], LineBox[{1295, 206}], 
       LineBox[{1296, 207}], LineBox[{1297, 208}], LineBox[{1298, 209}], 
       LineBox[{1299, 210}], LineBox[{1300, 211}], LineBox[{1301, 212}], 
       LineBox[{1302, 213}], LineBox[{1303, 214}], LineBox[{1304, 215}], 
       LineBox[{1305, 216}], LineBox[{1308, 219}], LineBox[{1309, 220}], 
       LineBox[{1310, 221}], LineBox[{1311, 222}], LineBox[{1313, 224}], 
       LineBox[{1314, 225}], LineBox[{1315, 226}], LineBox[{1316, 227}], 
       LineBox[{1317, 228}], LineBox[{1318, 229}], LineBox[{1320, 231}], 
       LineBox[{1321, 232}], LineBox[{1322, 233}], LineBox[{1323, 234}], 
       LineBox[{1324, 235}], LineBox[{1327, 238}], LineBox[{1328, 239}], 
       LineBox[{1329, 240}], LineBox[{1330, 241}], LineBox[{1331, 242}], 
       LineBox[{1332, 243}], LineBox[{1333, 244}], LineBox[{1343, 254}], 
       LineBox[{1344, 255}], LineBox[{1354, 265}], LineBox[{1355, 266}], 
       LineBox[{1374, 285}], LineBox[{1379, 290}], LineBox[{1384, 295}], 
       LineBox[{1385, 296}], LineBox[{1390, 301}], LineBox[{1395, 306}], 
       LineBox[{1397, 308}], LineBox[{1398, 309}], LineBox[{1416, 327}], 
       LineBox[{1430, 341}], LineBox[{1445, 356}], LineBox[{1446, 357}], 
       LineBox[{1447, 358}], LineBox[{1453, 364}], LineBox[{1454, 365}], 
       LineBox[{1455, 366}], LineBox[{1456, 367}], LineBox[{1457, 368}], 
       LineBox[{1458, 369}], LineBox[{1459, 370}], LineBox[{1460, 371}], 
       LineBox[{1461, 372}], LineBox[{1462, 373}], LineBox[{1470, 381}], 
       LineBox[{1471, 382}], LineBox[{1476, 387}], LineBox[{1482, 393}], 
       LineBox[{1489, 400}], LineBox[{1490, 401}], LineBox[{1495, 406}], 
       LineBox[{1497, 408}], LineBox[{1498, 409}], LineBox[{1499, 410}], 
       LineBox[{1504, 415}], LineBox[{1505, 416}], LineBox[{1512, 423}], 
       LineBox[{1513, 424}], LineBox[{1514, 425}], LineBox[{1521, 432}], 
       LineBox[{1524, 435}], LineBox[{1525, 436}], LineBox[{1528, 439}], 
       LineBox[{1529, 440}], LineBox[{1530, 441}], LineBox[{1531, 442}], 
       LineBox[{1532, 443}], LineBox[{1533, 444}], LineBox[{1535, 446}], 
       LineBox[{1539, 450}], LineBox[{1542, 453}], LineBox[{1559, 470}], 
       LineBox[{1560, 471}], LineBox[{1562, 473}], LineBox[{1566, 477}], 
       LineBox[{1568, 479}], LineBox[{1569, 480}], LineBox[{1570, 481}], 
       LineBox[{1586, 497}], LineBox[{1587, 498}], LineBox[{1588, 499}], 
       LineBox[{1589, 500}], LineBox[{1597, 508}], LineBox[{1598, 509}], 
       LineBox[{1604, 515}], LineBox[{1605, 516}], LineBox[{1606, 517}], 
       LineBox[{1607, 518}], LineBox[{1610, 521}], LineBox[{1613, 524}], 
       LineBox[{1616, 527}], LineBox[{1617, 528}], LineBox[{1618, 529}], 
       LineBox[{1621, 532}], LineBox[{1623, 534}], LineBox[{1628, 539}], 
       LineBox[{1629, 540}], LineBox[{1630, 541}], LineBox[{1632, 543}], 
       LineBox[{1634, 545}], LineBox[{1636, 547}], LineBox[{1637, 548}], 
       LineBox[{1638, 549}], LineBox[{1639, 550}], LineBox[{1641, 552}], 
       LineBox[{1643, 554}], LineBox[{1644, 555}], LineBox[{1645, 556}], 
       LineBox[{1646, 557}], LineBox[{1648, 559}], LineBox[{1649, 560}], 
       LineBox[{1650, 561}], LineBox[{1651, 562}], LineBox[{1653, 564}], 
       LineBox[{1656, 567}], LineBox[{1657, 568}], LineBox[{1658, 569}], 
       LineBox[{1659, 570}], LineBox[{1662, 573}], LineBox[{1664, 575}], 
       LineBox[{1671, 582}], LineBox[{1672, 583}], LineBox[{1673, 584}], 
       LineBox[{1674, 585}], LineBox[{1675, 586}], LineBox[{1676, 587}], 
       LineBox[{1677, 588}], LineBox[{1680, 591}], LineBox[{1681, 592}], 
       LineBox[{1685, 596}], LineBox[{1686, 597}], LineBox[{1687, 598}], 
       LineBox[{1688, 599}], LineBox[{1690, 601}], LineBox[{1691, 602}], 
       LineBox[{1692, 603}], LineBox[{1693, 604}], LineBox[{1694, 605}], 
       LineBox[{1696, 607}], LineBox[{1701, 612}], LineBox[{1711, 622}], 
       LineBox[{1714, 625}], LineBox[{1720, 631}], LineBox[{1723, 634}], 
       LineBox[{1729, 640}], LineBox[{1736, 647}], LineBox[{1738, 649}], 
       LineBox[{1739, 650}], LineBox[{1740, 651}], LineBox[{1741, 652}], 
       LineBox[{1751, 662}], LineBox[{1757, 668}], LineBox[{1764, 675}], 
       LineBox[{1770, 681}], LineBox[{1772, 683}], LineBox[{1778, 689}], 
       LineBox[{1779, 690}], LineBox[{1780, 691}], LineBox[{1785, 696}], 
       LineBox[{1787, 698}], LineBox[{1788, 699}], LineBox[{1790, 701}], 
       LineBox[{1792, 703}], LineBox[{1793, 704}], LineBox[{1794, 705}], 
       LineBox[{1795, 706}], LineBox[{1796, 707}], LineBox[{1803, 714}], 
       LineBox[{1807, 718}], LineBox[{1810, 721}], LineBox[{1814, 725}], 
       LineBox[{1815, 726}], LineBox[{1816, 727}], LineBox[{1817, 728}], 
       LineBox[{1818, 729}], LineBox[{1819, 730}], LineBox[{1820, 731}], 
       LineBox[{1821, 732}], LineBox[{1824, 735}], LineBox[{1826, 737}], 
       LineBox[{1827, 738}], LineBox[{1828, 739}], LineBox[{1830, 741}], 
       LineBox[{1831, 742}], LineBox[{1832, 743}], LineBox[{1833, 744}], 
       LineBox[{1835, 746}], LineBox[{1836, 747}], LineBox[{1842, 753}], 
       LineBox[{1854, 765}], LineBox[{1855, 766}], LineBox[{1856, 767}], 
       LineBox[{1857, 768}], LineBox[{1859, 770}], LineBox[{1860, 771}], 
       LineBox[{1861, 772}], LineBox[{1862, 773}], LineBox[{1867, 778}], 
       LineBox[{1870, 781}], LineBox[{1871, 782}], LineBox[{1872, 783}], 
       LineBox[{1873, 784}], LineBox[{1874, 785}], LineBox[{1875, 786}], 
       LineBox[{1876, 787}], LineBox[{1877, 788}], LineBox[{1882, 793}], 
       LineBox[{1885, 796}], LineBox[{1887, 798}], LineBox[{1893, 804}], 
       LineBox[{1894, 805}], LineBox[{1898, 809}], LineBox[{1899, 810}], 
       LineBox[{1900, 811}], LineBox[{1903, 814}], LineBox[{1904, 815}], 
       LineBox[{1905, 816}], LineBox[{1907, 818}], LineBox[{1909, 820}], 
       LineBox[{1910, 821}], LineBox[{1912, 823}], LineBox[{1914, 825}], 
       LineBox[{1915, 826}], LineBox[{1916, 827}], LineBox[{1929, 840}], 
       LineBox[{1930, 841}], LineBox[{1931, 842}], LineBox[{1934, 845}], 
       LineBox[{1935, 846}], LineBox[{1940, 851}], LineBox[{1942, 853}], 
       LineBox[{1943, 854}], LineBox[{1945, 856}], LineBox[{1946, 857}], 
       LineBox[{1947, 858}], LineBox[{1948, 859}], LineBox[{1951, 862}], 
       LineBox[{1955, 866}], LineBox[{1956, 867}], LineBox[{1958, 869}], 
       LineBox[{1959, 870}], LineBox[{1962, 873}], LineBox[{1963, 874}], 
       LineBox[{1964, 875}], LineBox[{1967, 878}], LineBox[{1968, 879}], 
       LineBox[{1969, 880}], LineBox[{1972, 883}], LineBox[{1973, 884}], 
       LineBox[{1977, 888}], LineBox[{1979, 890}], LineBox[{1980, 891}], 
       LineBox[{1981, 892}], LineBox[{1982, 893}], LineBox[{1983, 894}], 
       LineBox[{1984, 895}], LineBox[{1985, 896}], LineBox[{1986, 897}], 
       LineBox[{1988, 899}], LineBox[{1989, 900}], LineBox[{1990, 901}], 
       LineBox[{1992, 903}], LineBox[{1993, 904}], LineBox[{1994, 905}], 
       LineBox[{1995, 906}], LineBox[{1996, 907}], LineBox[{1997, 908}], 
       LineBox[{1998, 909}], LineBox[{2001, 912}], LineBox[{2002, 913}], 
       LineBox[{2003, 914}], LineBox[{2004, 915}], LineBox[{2005, 916}], 
       LineBox[{2006, 917}], LineBox[{2008, 919}], LineBox[{2009, 920}], 
       LineBox[{2010, 921}], LineBox[{2013, 924}], LineBox[{2014, 925}], 
       LineBox[{2016, 927}], LineBox[{2017, 928}], LineBox[{2018, 929}], 
       LineBox[{2021, 932}], LineBox[{2022, 933}], LineBox[{2023, 934}], 
       LineBox[{2026, 937}], LineBox[{2027, 938}], LineBox[{2028, 939}], 
       LineBox[{2029, 940}], LineBox[{2038, 949}], LineBox[{2043, 954}], 
       LineBox[{2045, 956}], LineBox[{2050, 961}], LineBox[{2051, 962}], 
       LineBox[{2052, 963}], LineBox[{2055, 966}], LineBox[{2056, 967}], 
       LineBox[{2057, 968}], LineBox[{2063, 974}], LineBox[{2064, 975}], 
       LineBox[{2065, 976}], LineBox[{2070, 981}], LineBox[{2071, 982}], 
       LineBox[{2081, 992}], LineBox[{2107, 1018}], LineBox[{2111, 1022}], 
       LineBox[{2115, 1026}], LineBox[{2122, 1033}], LineBox[{2127, 1038}], 
       LineBox[{2131, 1042}], LineBox[{2134, 1045}], LineBox[{2135, 1046}], 
       LineBox[{2137, 1048}], LineBox[{2138, 1049}], LineBox[{2148, 1059}], 
       LineBox[{2149, 1060}], LineBox[{2150, 1061}], LineBox[{2151, 1062}], 
       LineBox[{2152, 1063}], LineBox[{2153, 1064}], LineBox[{2154, 1065}], 
       LineBox[{2155, 1066}], LineBox[{2158, 1069}], LineBox[{2159, 1070}], 
       LineBox[{2160, 1071}], LineBox[{2161, 1072}], LineBox[{2162, 1073}], 
       LineBox[{2164, 1075}], LineBox[{2165, 1076}], LineBox[{2168, 1079}], 
       LineBox[{2169, 1080}], LineBox[{2170, 1081}], LineBox[{2174, 1085}], 
       LineBox[{2175, 1086}], LineBox[{2177, 1088}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.004583333333333334], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwN00OiGAoCALA3tW3btm3btm392rZt27Zt27Y7WeQISdiofaV2/wsICCgY
JCBgUIiAgMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7z
mM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exhL/vY
zwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu97jP
Ax7yiMc84SnPeM4LXvKK17zhLe94zwc+8onPfOEr3/jOD37yi9/84S//CAgZ
EPA/AhGYIAQlGMEJQUhCEZowhCUc4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJ
QEISkZgkJCUZyUlBSlKRmjSkJR3pyUBGMpGZLGQlG9nJQU5ykZs85CUf+SlA
QQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa1alBTWpRmzrUpR71aUBD
GtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50pRvd6UFPetGbPvSlH//RnwEM
ZBCDGcJQhjGcEYxkFKMZw1jGMZ4JTGQSk5nCVKYxnRnMZBazmcNc5jGfBSxk
EYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb2cJWtrGdHexkF7vZw172sZ8DHOQQ
hznCUY5xnBOc5BSnOcNZznGeC1zkEpe5wlWucZ0b3OQWt7nDXe5xnwc85BGP
ecJTnvGcF7zkFa95w1ve8Z4PfOQTn/nCV77xnR/85Be/+cNf/hEQyn8CEZgg
BCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4xCUe8UlAQhKRmCQk
JRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzkJR/5KUBBClGYIhSl
GMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSlHvVpQEMa0ZgmNKUZ
zWlBS1rRmja0pR3t6UBHOtGZLnSlG93pQU960Zs+9KUf/9GfAQxkEIMZwlCG
MZwRjGQUoxnDWMYxnglMZBKTmcJUpjGdGcxkFrOZw1zmMZ8FLGQRi1nCUpax
nBWsZBWrWcNa1rGeDWxkE5vZwla2sZ0d7GQXu9nDXvaxnwMc5BCHOcJRjnGc
E5zkFKc5w1nOcZ4LXOQSl7nCVa5xnRvc5Ba3ucNd7nGfBzzkEY95wlOe8ZwX
vOQVr3nDW97xng985BOf+cJXvvGdH/zkF7/5w1/+ERDafwIRmCAEJRjBCUFI
QhGaMIQlHOGJQEQiEZkoRCUa0YlBTGIRmzjEJR7xSUBCEpGYJCQlGclJQUpS
kZo0pCUd6clARjKRmSxkJRvZyUFOcpGbPOQlH/kpQEEKUZgiFKUYxSlBSUpR
mjKUpRzlqUBFKlGZKlSlGtWpQU1qUZs61KUe9WlAQxrRmCY0pRnNaUFLWtGa
NrSlHe3pQEc60ZkudKUb3elBT3rRmz70pR//0Z8BDGQQgxnCUIYxnBGMZBSj
GcNYxjGeCUxkEpOZwlSmMZ0ZzGQWs5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZ
w1rWsZ4NbGQTm9nCVraxnR3sZBe72cNe9rGfAxzkEIc5wlGOcZwTnOQUpznD
Wc5xngtc5BKXucJVrnGdG9zkFre5w13ucZ8HPOQRj3nCU57xnBe85BWvecNb
3vGeD3zkE5/5wle+8Z0f/OQXv/nDX/4REMZ/AhGYIAQlGMEJQUhCEZowhCUc
4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJQEISkZgkJCUZyUlBSlKRmjSkJR3p
yUBGMpGZLGQlG9nJQU5ykZs85CUf+SlAQQpRmCIUpRjFKUFJSlGaMpSlHOWp
QEUqUZkqVKUa1alBTWpRmzrUpR71aUBDGtGYJjSlGc1pQUta0Zo2tKUd7elA
RzrRmS50pRvd6UFPetGbPvSlH//RnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4J
TGQSk5nCVKYxnRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1s
ZBOb2cJWtrGdHexkF7vZw172sZ8DHOQQ/wfgGlSS
        "]]}, {}}}], {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"actual value - predicted value\"", TraditionalForm], None}, {
     FormBox["\"predicted value\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.128539080729708, 0.04988338876118475}, {-4.497122029583985, 
   4.497122029583985}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.710061836689308*^9, 3.7100628110815926`*^9, 
  3.710069389700388*^9, 3.710069568545144*^9, 3.710069738693161*^9, 
  3.7100702032770443`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Ok, those results aren\[CloseCurlyQuote]t great. What would happen if we use \
a more sophisticated algorithm (see \
https://www.linkedin.com/pulse/gaussian-process-better-random-forest-pratyush-\
kumar-sinha) AND restrict ourselves to just including those retrogressions \
with strong differences?\
\>", "Chapter",
 CellChangeTimes->{{3.709948052372204*^9, 3.7099481229266396`*^9}, {
  3.709949496742728*^9, 3.7099495046133385`*^9}, {3.709949813612561*^9, 
  3.70994981976682*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"trainingset", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"6", ",", "7", ",", "8"}], "}"}]}], "]"}], "]"}], "\[Rule]", 
     RowBox[{"trainingset", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "9"}], "]"}], "]"}]}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<GaussianProcess\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.709938311722932*^9, 3.709938323528329*^9}, {
   3.7099383939406323`*^9, 3.709938396706202*^9}, {3.7099384786168337`*^9, 
   3.7099384822875795`*^9}, {3.7099385224777436`*^9, 3.7099385275187683`*^9}, 
   3.709947964195163*^9, 3.7099556142407765`*^9, 3.7100753378300614`*^9}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{}, {{}, {
                  PointSize[0.125], 
                  GrayLevel[0.55], 
                  
                  PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                    4, 4.}}]}, {
                  GrayLevel[0.7], 
                  AbsoluteThickness[1.5], 
                  
                  BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                   5, 4}}]}}, {}}, Axes -> {False, False}, 
               AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
               BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {All, All}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"GaussianProcess\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of features: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{}, {{}, {
                  PointSize[0.125], 
                  GrayLevel[0.55], 
                  
                  PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                    4, 4.}}]}, {
                  GrayLevel[0.7], 
                  AbsoluteThickness[1.5], 
                  
                  BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {
                   5, 4}}]}}, {}}, Axes -> {False, False}, 
               AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
               BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {All, All}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{1, 1}, {1, 1}}, Ticks -> {None, None}, 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"GaussianProcess\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of features: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["8073", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7100436244128404`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "=", 
  RowBox[{"PredictorMeasurements", "[", 
   RowBox[{"p", ",", 
    RowBox[{
     RowBox[{"testset", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"6", ",", "7", ",", "8"}], "}"}]}], "]"}], "]"}], "\[Rule]", 
     RowBox[{"testset", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "9"}], "]"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7099479414545097`*^9, 3.7099479532639265`*^9}, {
   3.7099556231346016`*^9, 3.7099556237257233`*^9}, 3.7100753420399017`*^9}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PredictorMeasurementsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  GrayLevel[0.6], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  Dashing[{Small, Small}], 
                  
                  LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                   11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                   GrayLevel[0.4], 
                   PointSize[0.09], 
                   AbsoluteThickness[1.6], 
                   
                   PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                    2.227816320451859, 2.584653237430766}, {3.043099335090081,
                     4.798822972025658}, {3.5728355469237116`, 
                    5.9507424155697155`}, {4.158566334344331, 
                    5.2097676165465385`}, {4.824808988689111, 
                    7.23346088027902}, {6.88649660338492, 
                    5.297021421229134}, {7.819072150835878, 
                    6.533166043611269}, {8.437306856915493, 
                    8.81724006216815}, {8.604907881861761, 
                    11.302704526196452`}}]}, {}}, {}}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"GaussianProcess\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1089", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  GrayLevel[0.6], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  Dashing[{Small, Small}], 
                  
                  LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                   11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                   GrayLevel[0.4], 
                   PointSize[0.09], 
                   AbsoluteThickness[1.6], 
                   
                   PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                    2.227816320451859, 2.584653237430766}, {3.043099335090081,
                     4.798822972025658}, {3.5728355469237116`, 
                    5.9507424155697155`}, {4.158566334344331, 
                    5.2097676165465385`}, {4.824808988689111, 
                    7.23346088027902}, {6.88649660338492, 
                    5.297021421229134}, {7.819072150835878, 
                    6.533166043611269}, {8.437306856915493, 
                    8.81724006216815}, {8.604907881861761, 
                    11.302704526196452`}}]}, {}}, {}}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"GaussianProcess\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1089", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"StandardDeviation: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["0.8142673349260959`", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PredictorMeasurementsObject[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7100436386674833`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ComparisonPlot\>\"", "]"}]], "Input"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.004583333333333334], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1: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
ltBRobcE/bN84Pc+jhbot5xVLl/+hGL/s5f4vv35hPX5Pj59DL2oh/HGk/xn
utDnvgs9dTtegnqkv/h2+RXAP+hDi/iLV6hfR/vwMa19yFeJ+UXKxjTqsTH0
SLvDDftcMd9stQDqMZCccmRbQL6UyffXhlyw32um2IgyL7COkntGewKehwgK
+UKWE8jXqrS6pvMjM8Ev6fSczIqo8T2NTY6mNYqe4DLlwBIaCdTzOsw4Y60I
+XVfXDlQYgm7V8dYfQw/9KxNAs10nhq4H5v1c8h+kArvd38/c12LfYP3tWSp
mkE+TegjWjJO7IvHSe6/rUypRbRhfapqvIjJMuLVn44jEzkAPSHxgLFynQ3u
P76oeBg74oL3welHmTc+foB+enWqRiVpnY2oT2Qgpu0OE4k+FJ2kr9YKniv+
/LvfHPz75LaqwyT351Tshs6nH8P5aSx6F7TvE/r3Om+9QmqchWB3bYtvEW2o
9/n9Es5vZ/D+WxwoGLGUDP8tVjsdeq3AiQoyTw+I4bz4q4TwZgzifO0JkPE/
OI/zFz8jwLJlC/KrlA/0lzWFf9DVff1KrfDvuKK3N0sU/a2ovFhk8gb62vfI
pM+f5GG/k6jO1MmCeo7sfdIvJ4P7ZAs0rU4qAiT60ohoOAvJ/Vh/C497V+kx
r2O5a9VhmzHvbzmT/4Js0W8jCV+Vc/3Yn//Snpf8Gdj/i6bAaZFnOA/k3i2b
GP0QXytypSnaFfX0pKapcZLou/LrVE1iSchf59kQj2sR8lW0kjMJJKlvNlx0
eQvJ/dYtUdaZ1VyYp8UDla78DuzfTqlLy1cHPYvdWnJvsh7WG9yt5JawRj4i
/unP1XRRv+nl27tOh2J9qZx2zsNV8NL6GaUzkejP+tyvghqS7y+DdmHHlH3B
3tYB/cok31cc4odVbwnB3sZrXTM+TXJffGow0ofkPjSf2cFuqlH4z1tQpnbN
4PdhclM5r3sV5qnCuzJwxBv+TdGCpWrrsMf1CnJwOqKftV/O1rCkoB7TQ26u
zXHQdzoSNSiWRzFPDffEuiFTxM8SsjcT38B5qA9yHvkei/vNxT/MOgd6qAg+
YatNmzWM+UwLTHcInkZ+c0Jp/p0k97ObqDpiSu6CVVJVg7lIvjcIWw+6xdAh
/9MWbdr6JP37XS9TTEaD+EZlGnxaZThfX+7qyl0pwn3q+GTnffsMcN++U/+A
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
9aTLejgfOg2l6mEd6P8V7ldklI6cdf8HvXUsqA==
          "]]}, {}}}, {}, {}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           GrayLevel[0.5], 
           Dashing[{Small, Small}], 
           Thickness[0.002]], 
          LineBox[CompressedData["
1:eJxFxX0w03EcAOCfmUrKiHmbeSt60/ya3FUuDWE5RNOVnAvn5bgL4bwkWZhT
E7sWt9LWHOfl6sh5yVs2rymUc846Jm23c21tnFTqRC9/+Hz/eO5xjE29GE/A
MCz4n/+vfqFWnAi2l25vkr2QKAlE4wQhI5CJTrOy/XrNF71yzuYS9xRaJ7Sg
KJ3R6gukhootO1jRhkk0LWhtcu1mvAGaweHvpCVQ4Zzj60LyW1t4fMLGd9AB
nTjObestpMB23X30mzIbuOdkjNcVN7SIwiIXPbBG64gb6Z+t4CUn4vOW82gz
TZbaqNkSjhQ3eRwzQGu7DwdXJ1rAgsGkjHd9ZPhQFNXFkYzWi7Srk+aYw98D
FnHn92YwXaArncXRXFnvShBnHzzWuKlUyk3hkIWympGz6BVMnnK90gRuJa0a
D2tJcJC3aYS23Ri2D2uVimL3woUHtf0alz0wVV4/J53aDRe0M0mzbEM4g8WZ
Kw7YBQunvIdere2AI8wf+fA6DeCFPNlcTQERFgxU8s7Q9OGlyWV5+poenNz1
2p8uwuA/01nlFpItyfa9t1wH/EN+wyqlgsZt/AXjsxNvCPg6rOG8fFpe+A32
yE9rEChWYT/9/q5n88vwRvFjQcg9NbzuoJy+zFfBRwRlip7kRZjyiWVoOT8D
493K8QJsFBYRSNP5jSOwUZDnh7xQ9NJHvipbPAxXE/02UxlD8I7QBlo0Wwp3
Tcqc7mCdMD8ad8sP7YBT1ko9c8Xt8H7r0+E3GG1wedwTTgz7BTz2Y2CqCKuH
b9tmqPPEdbC7zwFCJqMWFt0vcY9ji2E1s8r1LlYFhz/8GZXL4MOSxasVSWwe
fFTnpeJjJbBesX5AJpsNN3vwWE1YFtwxSqfPYAkwMb2IGZbK6d/+L/NredM=

           "]]}, 
         Annotation[#, "Charting`Private`Tag$21959#1"]& ]}}, {}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, 
     PlotRange -> {{-7.825395969067491, 0}, {-7.825395969067491, 0}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"actual value\"", TraditionalForm], None}, {
        FormBox["\"predicted value\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-7.825395969067491, 0}, {-7.825395969067491, 0}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"predictions\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"perfect prediction line\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}], 
                    Thickness[0.018000000000000002`]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}], 
                    Thickness[0.018000000000000002`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.5]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7100436389849386`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ResidualHistogram\>\"", "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.46199999999999997`], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.46199999999999997`], Thickness[Small]}], 
     RectangleBox[{-3., 0}, {-2.8, 1},
      RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 3},
      RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 1},
      RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 10},
      RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 11},
      RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 33},
      RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 64},
      RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 83},
      RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 102},
      RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 131},
      RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 131},
      RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 109},
      RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 87},
      RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 72},
      RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 62},
      RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 51},
      RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 47},
      RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 25},
      RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 22},
      RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 11},
      RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 8},
      RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 7},
      RoundingRadius->0], RectangleBox[{2., 0}, {2.2, 6},
      RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 1},
      RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 4},
      RoundingRadius->0], RectangleBox[{2.6, 0}, {2.8, 2},
      RoundingRadius->0], RectangleBox[{3., 0}, {3.2, 3},
      RoundingRadius->0], RectangleBox[{3.2, 0}, {3.4, 2},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{-3.128, 0},
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"count\"", TraditionalForm], None}, {
     FormBox["\"actual value - predicted value\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-3., 3.4}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7100608219284005`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<StandardDeviation\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7099568621778393`*^9, 3.709956865159451*^9}}],

Cell[BoxData["0.8142673349260959`"], "Output",
 CellChangeTimes->{3.7100436391323357`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ResidualPlot\>\"", "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJztvXtUzF///z1RCUUhKklUSoXoKNJEqJRClEOMcwiDoiiGUHKaKCWlKSGE
UUk6aHQuHaZz0WF0LpXpKJX8vvda92c/Z93rXuu+r/U9fK7r+rr+udZz7ffe
771f+7XfPvPYr16vOXuOb9w/hkKhpIlTKP/X/wc5n6bXi0txBlPHJAYWtKb8
pVmFk08+c6wjmq6yJeW7aBnRFAd+aXcfz/gvzb+ffM/BtIO0P1Hc+MLWdoC0
662vKj37aiz1L3145npz20ARom+oyVp2qKCdJ1MR6r2njvRvjSlSFluK+SU9
5sat8O8mutXWeFT2cAvRlgOa894Ld5D+D7XXmoT95BNNOaDCergxkDzP6y++
5rDlI2k3GF2c/c6hhWhe96rQS7Sv5PnA7M+T9oVDc7o4fVSRAqIdnTMOt36q
IP13D3/Nb+VTyPrWC2vUt1eNknaWwYzt0b2ZRLua/6y1bqkn43FzHniumNFF
dLCEepusaSd5nitR+CTfh4fnBx1O7FXlEk0d22q8vyaGaNeptkHR/HrSX+Zi
rbnMLeynd660ovzUL0Sbbba/mLu3gWinoVW3dtH7ieb8WKJl7fKJjE8TWvRm
cg/m763gJTzOtpHobCf5zJEZ7fCnmJHaay152A/xsQsNWj8SLWnVF3VatgTj
D6yw2RObj/189aTw6OvPpF1rVy/NfSKeL24vTarj9JLnmfE8I+PObsx/S9BU
u3vJRGuZ+9F+JVWQ/gpNP+U3Bvdhv5ZcMLnvmQP/lOuvVjjWRHRwm4FX31kx
st+TvCd52jqMJ1oz3j7ksSH8oTXizL6z2dAclYIHTf3YL5bH3KJdc7KIHkyc
XuvRDHtGvhFv5xvC3oonFfsOxuO8KnbveSYxgPNBybxXlD4mGf4hv2us8cEM
2N9T32+UhfXFOox/rOfZSrTi6q1Ja+SqYP99KayWMg+MT9uorWSD+VN1aXO9
jUqJZj96mUaRxP54lyTFjGfDfxWPeVZ8fpqP8Taui9u5JQDtq+vPnGNjfZyP
PzXEI+AvnPtxK3rUOEQzJk44fCI1FVqvrt7LnoP55zHp7z6xiaY2Ngz6RUfj
PC+9J+N+gY/voRzrrk9eGXmecXDGxRMJ0bAP3W3645nVmP+PtnszQu7g/DV/
f6Hu9Q3z8WWoWMRHpNzIfLTYbskUjqhmu993Pt/4L035tlr02Lh80s52XRz6
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
CVvJWQdUhYjmtz/XvTUd2rtE7e71HGGiOfQRWp1bJfZL9XVkiTzm4z5zorSH
Eewh2St1IOQZfv+yt1LXmdSBBzHYl9+84D8CD6EO6Xo+SMPzUemLnb/i78k5
uiyXrXzwsUqfvvikYwJ8bquDdbwb7msYj7dfH+tZTebXIWIj1zEBfD/ptUmk
oyjuY5Q3bv7a8XII/jl0rj4iHvF+lP/7f3/0H/1H/9F/9N+jwYP/6P8J/Wc/
/+j/So18EX/0P4P+Z9svwl/+6P8W/We//uh/J0343P9S/ceef/TfqQkv+6P/
W/TfvT9/9+/9f3f9X+0vf/d6/ug/+o/+o//o/3f9d/O3v5sf/1e3/6O8+r+a
d//d9v2j/7V49j/a/5+Nz/7d7/9n49H/bjz0H7XH382P//DsP/p/kn/+q/PT
/+r1/rPrv9vef/T/Lt78/zXf/2z7Pztv/kf37//Z/nf/Pv+v5rn/03z4f5o3
/+HTf/Qf/Uf/0f+e+j/Ld//d9T/Kr/+77f+HX//R/0y8+F9N/7H3PxcP/e+e
z/807/5X348/+o/+d+Kv/9vX/0f/a/Prv/v9/2w8+j/L2/9R/d/Nj//V9d/N
L/7R+f3/fX4wdUxiYIFAvbnCySefOaL+H11lS8p3UdQrpDjwS7v7UE+Pfz/5
noMp6o09Udz4wtYW9ab01leVnn01lvqXPjxzvbltoAjRN9RkLTtU0M6TqQj1
3lNH+rfGFCmLLcX8kh5z41b4I39pq63xqOxh5Nu1HNCc914Y+Y8faq81CfuJ
fMeUAyqshxsDkT+6v/iaw5aPyHczujj7nUML8mF3rwq9RPuK/LvZnyftC4fm
dHH6qCLIj+vonHG49RPyYe8e/prfyke+4vXCGvXtVaOknWUwY3t0bybRruY/
a61bkA+Gm/PAc8UM1A8NllBvkzVF/nGuROGTfB/k4+UOOpzYq4r849Sxrcb7
a5CP23WqbVA0v570l7lYay5zC/vpnSutKD8V+X7MNttfzN2LfEBOQ6tu7aIj
3zTnxxIta5dPyHcstOjN5B7M31vBS3icLerJZTvJZ47MQP4cSsxI7bUW5D/n
iY9daND6EfmfrfqiTsuWYPyBFTZ7YvOxn6+eFB59jfzTWrt6ae4T8Xxxe2lS
HQf1QZnxPCPjTuTP4WwJmmp3L5loLXM/2q+kCtJfoemn/MbgPuzXkgsm9z1R
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
Ux34e0xcWq8ZeKxMV+GTtUad4LNzdi7odIB/JrVpzi69j/VS5i/wviF6D/bS
3E1vmXVT4Ly0tTq7xKB9yLp69QYBfm7nKNQfCX9mdiikhlcL3Md0qd7MVL+E
/o27BkPdwOu5eq8zHgYVo50+xe6XPOqRMW67NjStTwM/TA9xm8TMAT+/MHsM
dz34OsP7UvKJYDZ4zTvr/KJHPIwXKuVk/xl8lPddNHjhGNRzo26KezMm9BPq
uT01O/jmPN7v6lKS52qMenWcgEoHoxHwP75tM5UrUO+ME8RqP08pBL8zPtt7
YKSKzNcmgc5a6lNK5kd95KPBZ2Tj/Y+Kj+0qRD3EykRPyXOr8T1R+/x8q82x
7xhvC6t4qKcX9nx7oKDrIOzL+9S789Y51G9NVwyqD7LB8yzm4MfFgQL1NlXV
Dg29SRLw13vD3/3ArylM77I22wNEi8sccF1zTqBe5gKjMKEk1HezX7dyckyZ
AN+Vo6SMbckk2t3J7fD47agvSfWaPMNJMx889uZxWuhTtLPoyvZFA+Dz9D2z
bR9VgudTnI39f1z8SHRlNc9ksBf1Hk03tJy54I/6ja803lKWTxgm7xvJMjzo
3436goptFx49Fykg7QmmHjYRJydQ/9L+s9Rmv2WPJ7ot5O0UORFhoge3Kf4a
7BW4z/h86FTURfDvbKtV67zjMD9eGn18Xwp4MjfzhmhatwB/jti9uSwOvJhz
rX6hrrMAn0wel7o5EDyewpWOjnd6Cz5dOnvaVfF3ZD2t518r3c/F/HgLFrRK
/BLg94pLip5Lg3dVTzzk/80a9RMZNVYFXj6oX0hZ63OwUyiD8DU285Iyp6AU
7S82LjYs9cN4V9xcVzHBSxW9pxzdUDII/rYm+xxrIvhb6ZjHuq1LBPgq58dV
WmYWWY9rpNDXg+Hg19yl4yKdKfC/vOVPPE3N0N97YYZj+3X4E6ft4b2S7Z/A
ayddOZ/1NJ2sh3ZaqdLgMAf8/DuraagumbRLhlS4+U1CvcTIJZtmt+WBX1fG
z7v9dup39D9EudFhz8X35rJu/6Ia+IdjqqfbBPtvWJ9eWEuv2CjRz+eVvJxi
MYDvXWLtCl4V/IXaK969fP9b2Lc+Ztqad2jndW6wihLgtwsfWrEfR/0gv7ds
eEox71LAazhH8k+tLEe8H60rQZ69EXyEm6AxWV0I/JrzkblQ7i2eV6ONMm/u
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
+NyU/wNhFO68
    "], {{{}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{1090, 1}], LineBox[{1091, 2}], LineBox[{1092, 3}], 
       LineBox[{1094, 5}], LineBox[{1100, 11}], LineBox[{1101, 12}], 
       LineBox[{1102, 13}], LineBox[{1105, 16}], LineBox[{1108, 19}], 
       LineBox[{1109, 20}], LineBox[{1110, 21}], LineBox[{1115, 26}], 
       LineBox[{1116, 27}], LineBox[{1118, 29}], LineBox[{1119, 30}], 
       LineBox[{1120, 31}], LineBox[{1126, 37}], LineBox[{1127, 38}], 
       LineBox[{1128, 39}], LineBox[{1129, 40}], LineBox[{1130, 41}], 
       LineBox[{1131, 42}], LineBox[{1132, 43}], LineBox[{1134, 45}], 
       LineBox[{1135, 46}], LineBox[{1139, 50}], LineBox[{1147, 58}], 
       LineBox[{1148, 59}], LineBox[{1149, 60}], LineBox[{1150, 61}], 
       LineBox[{1151, 62}], LineBox[{1152, 63}], LineBox[{1153, 64}], 
       LineBox[{1154, 65}], LineBox[{1158, 69}], LineBox[{1159, 70}], 
       LineBox[{1160, 71}], LineBox[{1161, 72}], LineBox[{1162, 73}], 
       LineBox[{1163, 74}], LineBox[{1164, 75}], LineBox[{1165, 76}], 
       LineBox[{1166, 77}], LineBox[{1167, 78}], LineBox[{1168, 79}], 
       LineBox[{1171, 82}], LineBox[{1172, 83}], LineBox[{1175, 86}], 
       LineBox[{1176, 87}], LineBox[{1177, 88}], LineBox[{1178, 89}], 
       LineBox[{1180, 91}], LineBox[{1181, 92}], LineBox[{1182, 93}], 
       LineBox[{1185, 96}], LineBox[{1189, 100}], LineBox[{1192, 103}], 
       LineBox[{1201, 112}], LineBox[{1202, 113}], LineBox[{1206, 117}], 
       LineBox[{1208, 119}], LineBox[{1209, 120}], LineBox[{1210, 121}], 
       LineBox[{1211, 122}], LineBox[{1212, 123}], LineBox[{1230, 141}], 
       LineBox[{1233, 144}], LineBox[{1235, 146}], LineBox[{1236, 147}], 
       LineBox[{1237, 148}], LineBox[{1239, 150}], LineBox[{1240, 151}], 
       LineBox[{1241, 152}], LineBox[{1244, 155}], LineBox[{1245, 156}], 
       LineBox[{1246, 157}], LineBox[{1247, 158}], LineBox[{1252, 163}], 
       LineBox[{1259, 170}], LineBox[{1260, 171}], LineBox[{1262, 173}], 
       LineBox[{1265, 176}], LineBox[{1266, 177}], LineBox[{1267, 178}], 
       LineBox[{1268, 179}], LineBox[{1272, 183}], LineBox[{1273, 184}], 
       LineBox[{1284, 195}], LineBox[{1293, 204}], LineBox[{1294, 205}], 
       LineBox[{1296, 207}], LineBox[{1298, 209}], LineBox[{1306, 217}], 
       LineBox[{1307, 218}], LineBox[{1312, 223}], LineBox[{1319, 230}], 
       LineBox[{1325, 236}], LineBox[{1326, 237}], LineBox[{1331, 242}], 
       LineBox[{1334, 245}], LineBox[{1335, 246}], LineBox[{1336, 247}], 
       LineBox[{1337, 248}], LineBox[{1338, 249}], LineBox[{1339, 250}], 
       LineBox[{1340, 251}], LineBox[{1341, 252}], LineBox[{1342, 253}], 
       LineBox[{1345, 256}], LineBox[{1346, 257}], LineBox[{1347, 258}], 
       LineBox[{1348, 259}], LineBox[{1349, 260}], LineBox[{1350, 261}], 
       LineBox[{1351, 262}], LineBox[{1352, 263}], LineBox[{1353, 264}], 
       LineBox[{1356, 267}], LineBox[{1357, 268}], LineBox[{1358, 269}], 
       LineBox[{1359, 270}], LineBox[{1360, 271}], LineBox[{1361, 272}], 
       LineBox[{1362, 273}], LineBox[{1363, 274}], LineBox[{1364, 275}], 
       LineBox[{1365, 276}], LineBox[{1366, 277}], LineBox[{1367, 278}], 
       LineBox[{1368, 279}], LineBox[{1369, 280}], LineBox[{1370, 281}], 
       LineBox[{1371, 282}], LineBox[{1372, 283}], LineBox[{1373, 284}], 
       LineBox[{1375, 286}], LineBox[{1376, 287}], LineBox[{1377, 288}], 
       LineBox[{1378, 289}], LineBox[{1380, 291}], LineBox[{1381, 292}], 
       LineBox[{1382, 293}], LineBox[{1383, 294}], LineBox[{1386, 297}], 
       LineBox[{1387, 298}], LineBox[{1388, 299}], LineBox[{1389, 300}], 
       LineBox[{1391, 302}], LineBox[{1392, 303}], LineBox[{1393, 304}], 
       LineBox[{1394, 305}], LineBox[{1396, 307}], LineBox[{1399, 310}], 
       LineBox[{1400, 311}], LineBox[{1401, 312}], LineBox[{1402, 313}], 
       LineBox[{1403, 314}], LineBox[{1404, 315}], LineBox[{1405, 316}], 
       LineBox[{1406, 317}], LineBox[{1407, 318}], LineBox[{1408, 319}], 
       LineBox[{1409, 320}], LineBox[{1410, 321}], LineBox[{1411, 322}], 
       LineBox[{1412, 323}], LineBox[{1413, 324}], LineBox[{1414, 325}], 
       LineBox[{1415, 326}], LineBox[{1417, 328}], LineBox[{1418, 329}], 
       LineBox[{1419, 330}], LineBox[{1420, 331}], LineBox[{1421, 332}], 
       LineBox[{1422, 333}], LineBox[{1423, 334}], LineBox[{1424, 335}], 
       LineBox[{1425, 336}], LineBox[{1426, 337}], LineBox[{1427, 338}], 
       LineBox[{1428, 339}], LineBox[{1429, 340}], LineBox[{1430, 341}], 
       LineBox[{1431, 342}], LineBox[{1432, 343}], LineBox[{1433, 344}], 
       LineBox[{1434, 345}], LineBox[{1435, 346}], LineBox[{1436, 347}], 
       LineBox[{1437, 348}], LineBox[{1438, 349}], LineBox[{1439, 350}], 
       LineBox[{1440, 351}], LineBox[{1441, 352}], LineBox[{1442, 353}], 
       LineBox[{1443, 354}], LineBox[{1444, 355}], LineBox[{1448, 359}], 
       LineBox[{1449, 360}], LineBox[{1450, 361}], LineBox[{1451, 362}], 
       LineBox[{1452, 363}], LineBox[{1459, 370}], LineBox[{1461, 372}], 
       LineBox[{1462, 373}], LineBox[{1463, 374}], LineBox[{1464, 375}], 
       LineBox[{1465, 376}], LineBox[{1466, 377}], LineBox[{1467, 378}], 
       LineBox[{1468, 379}], LineBox[{1469, 380}], LineBox[{1471, 382}], 
       LineBox[{1472, 383}], LineBox[{1473, 384}], LineBox[{1474, 385}], 
       LineBox[{1475, 386}], LineBox[{1476, 387}], LineBox[{1477, 388}], 
       LineBox[{1478, 389}], LineBox[{1479, 390}], LineBox[{1480, 391}], 
       LineBox[{1481, 392}], LineBox[{1482, 393}], LineBox[{1483, 394}], 
       LineBox[{1484, 395}], LineBox[{1485, 396}], LineBox[{1486, 397}], 
       LineBox[{1487, 398}], LineBox[{1488, 399}], LineBox[{1491, 402}], 
       LineBox[{1492, 403}], LineBox[{1493, 404}], LineBox[{1494, 405}], 
       LineBox[{1495, 406}], LineBox[{1496, 407}], LineBox[{1498, 409}], 
       LineBox[{1500, 411}], LineBox[{1501, 412}], LineBox[{1502, 413}], 
       LineBox[{1503, 414}], LineBox[{1504, 415}], LineBox[{1506, 417}], 
       LineBox[{1507, 418}], LineBox[{1508, 419}], LineBox[{1509, 420}], 
       LineBox[{1510, 421}], LineBox[{1511, 422}], LineBox[{1512, 423}], 
       LineBox[{1515, 426}], LineBox[{1516, 427}], LineBox[{1517, 428}], 
       LineBox[{1518, 429}], LineBox[{1519, 430}], LineBox[{1520, 431}], 
       LineBox[{1521, 432}], LineBox[{1522, 433}], LineBox[{1523, 434}], 
       LineBox[{1524, 435}], LineBox[{1525, 436}], LineBox[{1526, 437}], 
       LineBox[{1527, 438}], LineBox[{1528, 439}], LineBox[{1529, 440}], 
       LineBox[{1532, 443}], LineBox[{1534, 445}], LineBox[{1536, 447}], 
       LineBox[{1537, 448}], LineBox[{1538, 449}], LineBox[{1539, 450}], 
       LineBox[{1540, 451}], LineBox[{1541, 452}], LineBox[{1542, 453}], 
       LineBox[{1543, 454}], LineBox[{1544, 455}], LineBox[{1545, 456}], 
       LineBox[{1546, 457}], LineBox[{1547, 458}], LineBox[{1548, 459}], 
       LineBox[{1549, 460}], LineBox[{1550, 461}], LineBox[{1551, 462}], 
       LineBox[{1552, 463}], LineBox[{1553, 464}], LineBox[{1554, 465}], 
       LineBox[{1555, 466}], LineBox[{1556, 467}], LineBox[{1557, 468}], 
       LineBox[{1558, 469}], LineBox[{1561, 472}], LineBox[{1563, 474}], 
       LineBox[{1564, 475}], LineBox[{1565, 476}], LineBox[{1567, 478}], 
       LineBox[{1571, 482}], LineBox[{1572, 483}], LineBox[{1573, 484}], 
       LineBox[{1574, 485}], LineBox[{1575, 486}], LineBox[{1576, 487}], 
       LineBox[{1577, 488}], LineBox[{1578, 489}], LineBox[{1579, 490}], 
       LineBox[{1580, 491}], LineBox[{1581, 492}], LineBox[{1582, 493}], 
       LineBox[{1583, 494}], LineBox[{1584, 495}], LineBox[{1585, 496}], 
       LineBox[{1590, 501}], LineBox[{1591, 502}], LineBox[{1592, 503}], 
       LineBox[{1593, 504}], LineBox[{1594, 505}], LineBox[{1595, 506}], 
       LineBox[{1596, 507}], LineBox[{1599, 510}], LineBox[{1600, 511}], 
       LineBox[{1601, 512}], LineBox[{1602, 513}], LineBox[{1603, 514}], 
       LineBox[{1604, 515}], LineBox[{1608, 519}], LineBox[{1609, 520}], 
       LineBox[{1611, 522}], LineBox[{1612, 523}], LineBox[{1614, 525}], 
       LineBox[{1615, 526}], LineBox[{1616, 527}], LineBox[{1617, 528}], 
       LineBox[{1619, 530}], LineBox[{1620, 531}], LineBox[{1621, 532}], 
       LineBox[{1622, 533}], LineBox[{1624, 535}], LineBox[{1625, 536}], 
       LineBox[{1626, 537}], LineBox[{1627, 538}], LineBox[{1628, 539}], 
       LineBox[{1630, 541}], LineBox[{1631, 542}], LineBox[{1632, 543}], 
       LineBox[{1633, 544}], LineBox[{1635, 546}], LineBox[{1640, 551}], 
       LineBox[{1642, 553}], LineBox[{1647, 558}], LineBox[{1652, 563}], 
       LineBox[{1654, 565}], LineBox[{1655, 566}], LineBox[{1657, 568}], 
       LineBox[{1660, 571}], LineBox[{1661, 572}], LineBox[{1662, 573}], 
       LineBox[{1663, 574}], LineBox[{1665, 576}], LineBox[{1666, 577}], 
       LineBox[{1667, 578}], LineBox[{1668, 579}], LineBox[{1669, 580}], 
       LineBox[{1670, 581}], LineBox[{1678, 589}], LineBox[{1679, 590}], 
       LineBox[{1682, 593}], LineBox[{1683, 594}], LineBox[{1684, 595}], 
       LineBox[{1687, 598}], LineBox[{1689, 600}], LineBox[{1693, 604}], 
       LineBox[{1695, 606}], LineBox[{1697, 608}], LineBox[{1698, 609}], 
       LineBox[{1699, 610}], LineBox[{1700, 611}], LineBox[{1702, 613}], 
       LineBox[{1703, 614}], LineBox[{1704, 615}], LineBox[{1705, 616}], 
       LineBox[{1706, 617}], LineBox[{1707, 618}], LineBox[{1708, 619}], 
       LineBox[{1709, 620}], LineBox[{1710, 621}], LineBox[{1712, 623}], 
       LineBox[{1713, 624}], LineBox[{1715, 626}], LineBox[{1716, 627}], 
       LineBox[{1717, 628}], LineBox[{1718, 629}], LineBox[{1719, 630}], 
       LineBox[{1721, 632}], LineBox[{1722, 633}], LineBox[{1723, 634}], 
       LineBox[{1724, 635}], LineBox[{1725, 636}], LineBox[{1726, 637}], 
       LineBox[{1727, 638}], LineBox[{1728, 639}], LineBox[{1730, 641}], 
       LineBox[{1731, 642}], LineBox[{1732, 643}], LineBox[{1733, 644}], 
       LineBox[{1734, 645}], LineBox[{1735, 646}], LineBox[{1737, 648}], 
       LineBox[{1742, 653}], LineBox[{1743, 654}], LineBox[{1744, 655}], 
       LineBox[{1745, 656}], LineBox[{1746, 657}], LineBox[{1747, 658}], 
       LineBox[{1748, 659}], LineBox[{1749, 660}], LineBox[{1750, 661}], 
       LineBox[{1752, 663}], LineBox[{1753, 664}], LineBox[{1754, 665}], 
       LineBox[{1755, 666}], LineBox[{1756, 667}], LineBox[{1758, 669}], 
       LineBox[{1759, 670}], LineBox[{1760, 671}], LineBox[{1761, 672}], 
       LineBox[{1762, 673}], LineBox[{1763, 674}], LineBox[{1765, 676}], 
       LineBox[{1766, 677}], LineBox[{1767, 678}], LineBox[{1768, 679}], 
       LineBox[{1769, 680}], LineBox[{1771, 682}], LineBox[{1773, 684}], 
       LineBox[{1774, 685}], LineBox[{1775, 686}], LineBox[{1776, 687}], 
       LineBox[{1777, 688}], LineBox[{1781, 692}], LineBox[{1782, 693}], 
       LineBox[{1783, 694}], LineBox[{1784, 695}], LineBox[{1786, 697}], 
       LineBox[{1787, 698}], LineBox[{1789, 700}], LineBox[{1790, 701}], 
       LineBox[{1791, 702}], LineBox[{1797, 708}], LineBox[{1798, 709}], 
       LineBox[{1799, 710}], LineBox[{1800, 711}], LineBox[{1801, 712}], 
       LineBox[{1802, 713}], LineBox[{1804, 715}], LineBox[{1805, 716}], 
       LineBox[{1806, 717}], LineBox[{1808, 719}], LineBox[{1809, 720}], 
       LineBox[{1811, 722}], LineBox[{1812, 723}], LineBox[{1813, 724}], 
       LineBox[{1817, 728}], LineBox[{1819, 730}], LineBox[{1820, 731}], 
       LineBox[{1822, 733}], LineBox[{1823, 734}], LineBox[{1825, 736}], 
       LineBox[{1829, 740}], LineBox[{1831, 742}], LineBox[{1833, 744}], 
       LineBox[{1834, 745}], LineBox[{1837, 748}], LineBox[{1838, 749}], 
       LineBox[{1839, 750}], LineBox[{1840, 751}], LineBox[{1841, 752}], 
       LineBox[{1843, 754}], LineBox[{1844, 755}], LineBox[{1845, 756}], 
       LineBox[{1846, 757}], LineBox[{1847, 758}], LineBox[{1848, 759}], 
       LineBox[{1849, 760}], LineBox[{1850, 761}], LineBox[{1851, 762}], 
       LineBox[{1852, 763}], LineBox[{1853, 764}], LineBox[{1854, 765}], 
       LineBox[{1858, 769}], LineBox[{1863, 774}], LineBox[{1864, 775}], 
       LineBox[{1865, 776}], LineBox[{1866, 777}], LineBox[{1868, 779}], 
       LineBox[{1869, 780}], LineBox[{1875, 786}], LineBox[{1878, 789}], 
       LineBox[{1879, 790}], LineBox[{1880, 791}], LineBox[{1881, 792}], 
       LineBox[{1883, 794}], LineBox[{1884, 795}], LineBox[{1886, 797}], 
       LineBox[{1888, 799}], LineBox[{1889, 800}], LineBox[{1890, 801}], 
       LineBox[{1891, 802}], LineBox[{1892, 803}], LineBox[{1894, 805}], 
       LineBox[{1895, 806}], LineBox[{1896, 807}], LineBox[{1897, 808}], 
       LineBox[{1901, 812}], LineBox[{1902, 813}], LineBox[{1906, 817}], 
       LineBox[{1908, 819}], LineBox[{1911, 822}], LineBox[{1913, 824}], 
       LineBox[{1917, 828}], LineBox[{1918, 829}], LineBox[{1919, 830}], 
       LineBox[{1920, 831}], LineBox[{1921, 832}], LineBox[{1922, 833}], 
       LineBox[{1923, 834}], LineBox[{1924, 835}], LineBox[{1925, 836}], 
       LineBox[{1926, 837}], LineBox[{1927, 838}], LineBox[{1928, 839}], 
       LineBox[{1932, 843}], LineBox[{1933, 844}], LineBox[{1934, 845}], 
       LineBox[{1936, 847}], LineBox[{1937, 848}], LineBox[{1938, 849}], 
       LineBox[{1939, 850}], LineBox[{1941, 852}], LineBox[{1944, 855}], 
       LineBox[{1949, 860}], LineBox[{1950, 861}], LineBox[{1952, 863}], 
       LineBox[{1953, 864}], LineBox[{1954, 865}], LineBox[{1957, 868}], 
       LineBox[{1960, 871}], LineBox[{1961, 872}], LineBox[{1965, 876}], 
       LineBox[{1966, 877}], LineBox[{1968, 879}], LineBox[{1970, 881}], 
       LineBox[{1971, 882}], LineBox[{1974, 885}], LineBox[{1975, 886}], 
       LineBox[{1976, 887}], LineBox[{1977, 888}], LineBox[{1978, 889}], 
       LineBox[{1979, 890}], LineBox[{1987, 898}], LineBox[{1991, 902}], 
       LineBox[{1992, 903}], LineBox[{1999, 910}], LineBox[{2000, 911}], 
       LineBox[{2001, 912}], LineBox[{2007, 918}], LineBox[{2010, 921}], 
       LineBox[{2011, 922}], LineBox[{2012, 923}], LineBox[{2015, 926}], 
       LineBox[{2019, 930}], LineBox[{2020, 931}], LineBox[{2024, 935}], 
       LineBox[{2025, 936}], LineBox[{2030, 941}], LineBox[{2031, 942}], 
       LineBox[{2032, 943}], LineBox[{2033, 944}], LineBox[{2034, 945}], 
       LineBox[{2035, 946}], LineBox[{2036, 947}], LineBox[{2037, 948}], 
       LineBox[{2039, 950}], LineBox[{2040, 951}], LineBox[{2041, 952}], 
       LineBox[{2042, 953}], LineBox[{2044, 955}], LineBox[{2046, 957}], 
       LineBox[{2047, 958}], LineBox[{2048, 959}], LineBox[{2049, 960}], 
       LineBox[{2052, 963}], LineBox[{2053, 964}], LineBox[{2054, 965}], 
       LineBox[{2058, 969}], LineBox[{2059, 970}], LineBox[{2060, 971}], 
       LineBox[{2061, 972}], LineBox[{2062, 973}], LineBox[{2066, 977}], 
       LineBox[{2067, 978}], LineBox[{2068, 979}], LineBox[{2069, 980}], 
       LineBox[{2072, 983}], LineBox[{2073, 984}], LineBox[{2074, 985}], 
       LineBox[{2075, 986}], LineBox[{2076, 987}], LineBox[{2077, 988}], 
       LineBox[{2078, 989}], LineBox[{2079, 990}], LineBox[{2080, 991}], 
       LineBox[{2082, 993}], LineBox[{2083, 994}], LineBox[{2084, 995}], 
       LineBox[{2085, 996}], LineBox[{2086, 997}], LineBox[{2087, 998}], 
       LineBox[{2088, 999}], LineBox[{2089, 1000}], LineBox[{2090, 1001}], 
       LineBox[{2091, 1002}], LineBox[{2092, 1003}], LineBox[{2093, 1004}], 
       LineBox[{2094, 1005}], LineBox[{2095, 1006}], LineBox[{2096, 1007}], 
       LineBox[{2097, 1008}], LineBox[{2098, 1009}], LineBox[{2099, 1010}], 
       LineBox[{2100, 1011}], LineBox[{2101, 1012}], LineBox[{2102, 1013}], 
       LineBox[{2103, 1014}], LineBox[{2104, 1015}], LineBox[{2105, 1016}], 
       LineBox[{2106, 1017}], LineBox[{2108, 1019}], LineBox[{2109, 1020}], 
       LineBox[{2110, 1021}], LineBox[{2112, 1023}], LineBox[{2113, 1024}], 
       LineBox[{2114, 1025}], LineBox[{2115, 1026}], LineBox[{2116, 1027}], 
       LineBox[{2117, 1028}], LineBox[{2118, 1029}], LineBox[{2119, 1030}], 
       LineBox[{2120, 1031}], LineBox[{2121, 1032}], LineBox[{2123, 1034}], 
       LineBox[{2124, 1035}], LineBox[{2125, 1036}], LineBox[{2126, 1037}], 
       LineBox[{2128, 1039}], LineBox[{2129, 1040}], LineBox[{2130, 1041}], 
       LineBox[{2132, 1043}], LineBox[{2133, 1044}], LineBox[{2136, 1047}], 
       LineBox[{2139, 1050}], LineBox[{2140, 1051}], LineBox[{2141, 1052}], 
       LineBox[{2142, 1053}], LineBox[{2143, 1054}], LineBox[{2144, 1055}], 
       LineBox[{2145, 1056}], LineBox[{2146, 1057}], LineBox[{2147, 1058}], 
       LineBox[{2151, 1062}], LineBox[{2156, 1067}], LineBox[{2157, 1068}], 
       LineBox[{2163, 1074}], LineBox[{2166, 1077}], LineBox[{2167, 1078}], 
       LineBox[{2168, 1079}], LineBox[{2169, 1080}], LineBox[{2171, 1082}], 
       LineBox[{2172, 1083}], LineBox[{2173, 1084}], LineBox[{2176, 1087}], 
       LineBox[{2178, 1089}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{1093, 4}], LineBox[{1095, 6}], LineBox[{1096, 7}], 
       LineBox[{1097, 8}], LineBox[{1098, 9}], LineBox[{1099, 10}], 
       LineBox[{1103, 14}], LineBox[{1104, 15}], LineBox[{1106, 17}], 
       LineBox[{1107, 18}], LineBox[{1111, 22}], LineBox[{1112, 23}], 
       LineBox[{1113, 24}], LineBox[{1114, 25}], LineBox[{1117, 28}], 
       LineBox[{1121, 32}], LineBox[{1122, 33}], LineBox[{1123, 34}], 
       LineBox[{1124, 35}], LineBox[{1125, 36}], LineBox[{1133, 44}], 
       LineBox[{1136, 47}], LineBox[{1137, 48}], LineBox[{1138, 49}], 
       LineBox[{1140, 51}], LineBox[{1141, 52}], LineBox[{1142, 53}], 
       LineBox[{1143, 54}], LineBox[{1144, 55}], LineBox[{1145, 56}], 
       LineBox[{1146, 57}], LineBox[{1155, 66}], LineBox[{1156, 67}], 
       LineBox[{1157, 68}], LineBox[{1169, 80}], LineBox[{1170, 81}], 
       LineBox[{1173, 84}], LineBox[{1174, 85}], LineBox[{1179, 90}], 
       LineBox[{1183, 94}], LineBox[{1184, 95}], LineBox[{1186, 97}], 
       LineBox[{1187, 98}], LineBox[{1188, 99}], LineBox[{1190, 101}], 
       LineBox[{1191, 102}], LineBox[{1193, 104}], LineBox[{1194, 105}], 
       LineBox[{1195, 106}], LineBox[{1196, 107}], LineBox[{1197, 108}], 
       LineBox[{1198, 109}], LineBox[{1199, 110}], LineBox[{1200, 111}], 
       LineBox[{1203, 114}], LineBox[{1204, 115}], LineBox[{1205, 116}], 
       LineBox[{1207, 118}], LineBox[{1213, 124}], LineBox[{1214, 125}], 
       LineBox[{1215, 126}], LineBox[{1216, 127}], LineBox[{1217, 128}], 
       LineBox[{1218, 129}], LineBox[{1219, 130}], LineBox[{1220, 131}], 
       LineBox[{1221, 132}], LineBox[{1222, 133}], LineBox[{1223, 134}], 
       LineBox[{1224, 135}], LineBox[{1225, 136}], LineBox[{1226, 137}], 
       LineBox[{1227, 138}], LineBox[{1228, 139}], LineBox[{1229, 140}], 
       LineBox[{1231, 142}], LineBox[{1232, 143}], LineBox[{1234, 145}], 
       LineBox[{1238, 149}], LineBox[{1242, 153}], LineBox[{1243, 154}], 
       LineBox[{1248, 159}], LineBox[{1249, 160}], LineBox[{1250, 161}], 
       LineBox[{1251, 162}], LineBox[{1253, 164}], LineBox[{1254, 165}], 
       LineBox[{1255, 166}], LineBox[{1256, 167}], LineBox[{1257, 168}], 
       LineBox[{1258, 169}], LineBox[{1261, 172}], LineBox[{1263, 174}], 
       LineBox[{1264, 175}], LineBox[{1269, 180}], LineBox[{1270, 181}], 
       LineBox[{1271, 182}], LineBox[{1274, 185}], LineBox[{1275, 186}], 
       LineBox[{1276, 187}], LineBox[{1277, 188}], LineBox[{1278, 189}], 
       LineBox[{1279, 190}], LineBox[{1280, 191}], LineBox[{1281, 192}], 
       LineBox[{1282, 193}], LineBox[{1283, 194}], LineBox[{1285, 196}], 
       LineBox[{1286, 197}], LineBox[{1287, 198}], LineBox[{1288, 199}], 
       LineBox[{1289, 200}], LineBox[{1290, 201}], LineBox[{1291, 202}], 
       LineBox[{1292, 203}], LineBox[{1295, 206}], LineBox[{1297, 208}], 
       LineBox[{1299, 210}], LineBox[{1300, 211}], LineBox[{1301, 212}], 
       LineBox[{1302, 213}], LineBox[{1303, 214}], LineBox[{1304, 215}], 
       LineBox[{1305, 216}], LineBox[{1308, 219}], LineBox[{1309, 220}], 
       LineBox[{1310, 221}], LineBox[{1311, 222}], LineBox[{1313, 224}], 
       LineBox[{1314, 225}], LineBox[{1315, 226}], LineBox[{1316, 227}], 
       LineBox[{1317, 228}], LineBox[{1318, 229}], LineBox[{1320, 231}], 
       LineBox[{1321, 232}], LineBox[{1322, 233}], LineBox[{1323, 234}], 
       LineBox[{1324, 235}], LineBox[{1327, 238}], LineBox[{1328, 239}], 
       LineBox[{1329, 240}], LineBox[{1330, 241}], LineBox[{1332, 243}], 
       LineBox[{1333, 244}], LineBox[{1343, 254}], LineBox[{1344, 255}], 
       LineBox[{1354, 265}], LineBox[{1355, 266}], LineBox[{1374, 285}], 
       LineBox[{1379, 290}], LineBox[{1384, 295}], LineBox[{1385, 296}], 
       LineBox[{1390, 301}], LineBox[{1395, 306}], LineBox[{1397, 308}], 
       LineBox[{1398, 309}], LineBox[{1416, 327}], LineBox[{1445, 356}], 
       LineBox[{1446, 357}], LineBox[{1447, 358}], LineBox[{1453, 364}], 
       LineBox[{1454, 365}], LineBox[{1455, 366}], LineBox[{1456, 367}], 
       LineBox[{1457, 368}], LineBox[{1458, 369}], LineBox[{1460, 371}], 
       LineBox[{1470, 381}], LineBox[{1489, 400}], LineBox[{1490, 401}], 
       LineBox[{1497, 408}], LineBox[{1499, 410}], LineBox[{1505, 416}], 
       LineBox[{1513, 424}], LineBox[{1514, 425}], LineBox[{1530, 441}], 
       LineBox[{1531, 442}], LineBox[{1533, 444}], LineBox[{1535, 446}], 
       LineBox[{1559, 470}], LineBox[{1560, 471}], LineBox[{1562, 473}], 
       LineBox[{1566, 477}], LineBox[{1568, 479}], LineBox[{1569, 480}], 
       LineBox[{1570, 481}], LineBox[{1586, 497}], LineBox[{1587, 498}], 
       LineBox[{1588, 499}], LineBox[{1589, 500}], LineBox[{1597, 508}], 
       LineBox[{1598, 509}], LineBox[{1605, 516}], LineBox[{1606, 517}], 
       LineBox[{1607, 518}], LineBox[{1610, 521}], LineBox[{1613, 524}], 
       LineBox[{1618, 529}], LineBox[{1623, 534}], LineBox[{1629, 540}], 
       LineBox[{1634, 545}], LineBox[{1636, 547}], LineBox[{1637, 548}], 
       LineBox[{1638, 549}], LineBox[{1639, 550}], LineBox[{1641, 552}], 
       LineBox[{1643, 554}], LineBox[{1644, 555}], LineBox[{1645, 556}], 
       LineBox[{1646, 557}], LineBox[{1648, 559}], LineBox[{1649, 560}], 
       LineBox[{1650, 561}], LineBox[{1651, 562}], LineBox[{1653, 564}], 
       LineBox[{1656, 567}], LineBox[{1658, 569}], LineBox[{1659, 570}], 
       LineBox[{1664, 575}], LineBox[{1671, 582}], LineBox[{1672, 583}], 
       LineBox[{1673, 584}], LineBox[{1674, 585}], LineBox[{1675, 586}], 
       LineBox[{1676, 587}], LineBox[{1677, 588}], LineBox[{1680, 591}], 
       LineBox[{1681, 592}], LineBox[{1685, 596}], LineBox[{1686, 597}], 
       LineBox[{1688, 599}], LineBox[{1690, 601}], LineBox[{1691, 602}], 
       LineBox[{1692, 603}], LineBox[{1694, 605}], LineBox[{1696, 607}], 
       LineBox[{1701, 612}], LineBox[{1711, 622}], LineBox[{1714, 625}], 
       LineBox[{1720, 631}], LineBox[{1729, 640}], LineBox[{1736, 647}], 
       LineBox[{1738, 649}], LineBox[{1739, 650}], LineBox[{1740, 651}], 
       LineBox[{1741, 652}], LineBox[{1751, 662}], LineBox[{1757, 668}], 
       LineBox[{1764, 675}], LineBox[{1770, 681}], LineBox[{1772, 683}], 
       LineBox[{1778, 689}], LineBox[{1779, 690}], LineBox[{1780, 691}], 
       LineBox[{1785, 696}], LineBox[{1788, 699}], LineBox[{1792, 703}], 
       LineBox[{1793, 704}], LineBox[{1794, 705}], LineBox[{1795, 706}], 
       LineBox[{1796, 707}], LineBox[{1803, 714}], LineBox[{1807, 718}], 
       LineBox[{1810, 721}], LineBox[{1814, 725}], LineBox[{1815, 726}], 
       LineBox[{1816, 727}], LineBox[{1818, 729}], LineBox[{1821, 732}], 
       LineBox[{1824, 735}], LineBox[{1826, 737}], LineBox[{1827, 738}], 
       LineBox[{1828, 739}], LineBox[{1830, 741}], LineBox[{1832, 743}], 
       LineBox[{1835, 746}], LineBox[{1836, 747}], LineBox[{1842, 753}], 
       LineBox[{1855, 766}], LineBox[{1856, 767}], LineBox[{1857, 768}], 
       LineBox[{1859, 770}], LineBox[{1860, 771}], LineBox[{1861, 772}], 
       LineBox[{1862, 773}], LineBox[{1867, 778}], LineBox[{1870, 781}], 
       LineBox[{1871, 782}], LineBox[{1872, 783}], LineBox[{1873, 784}], 
       LineBox[{1874, 785}], LineBox[{1876, 787}], LineBox[{1877, 788}], 
       LineBox[{1882, 793}], LineBox[{1885, 796}], LineBox[{1887, 798}], 
       LineBox[{1893, 804}], LineBox[{1898, 809}], LineBox[{1899, 810}], 
       LineBox[{1900, 811}], LineBox[{1903, 814}], LineBox[{1904, 815}], 
       LineBox[{1905, 816}], LineBox[{1907, 818}], LineBox[{1909, 820}], 
       LineBox[{1910, 821}], LineBox[{1912, 823}], LineBox[{1914, 825}], 
       LineBox[{1915, 826}], LineBox[{1916, 827}], LineBox[{1929, 840}], 
       LineBox[{1930, 841}], LineBox[{1931, 842}], LineBox[{1935, 846}], 
       LineBox[{1940, 851}], LineBox[{1942, 853}], LineBox[{1943, 854}], 
       LineBox[{1945, 856}], LineBox[{1946, 857}], LineBox[{1947, 858}], 
       LineBox[{1948, 859}], LineBox[{1951, 862}], LineBox[{1955, 866}], 
       LineBox[{1956, 867}], LineBox[{1958, 869}], LineBox[{1959, 870}], 
       LineBox[{1962, 873}], LineBox[{1963, 874}], LineBox[{1964, 875}], 
       LineBox[{1967, 878}], LineBox[{1969, 880}], LineBox[{1972, 883}], 
       LineBox[{1973, 884}], LineBox[{1980, 891}], LineBox[{1981, 892}], 
       LineBox[{1982, 893}], LineBox[{1983, 894}], LineBox[{1984, 895}], 
       LineBox[{1985, 896}], LineBox[{1986, 897}], LineBox[{1988, 899}], 
       LineBox[{1989, 900}], LineBox[{1990, 901}], LineBox[{1993, 904}], 
       LineBox[{1994, 905}], LineBox[{1995, 906}], LineBox[{1996, 907}], 
       LineBox[{1997, 908}], LineBox[{1998, 909}], LineBox[{2002, 913}], 
       LineBox[{2003, 914}], LineBox[{2004, 915}], LineBox[{2005, 916}], 
       LineBox[{2006, 917}], LineBox[{2008, 919}], LineBox[{2009, 920}], 
       LineBox[{2013, 924}], LineBox[{2014, 925}], LineBox[{2016, 927}], 
       LineBox[{2017, 928}], LineBox[{2018, 929}], LineBox[{2021, 932}], 
       LineBox[{2022, 933}], LineBox[{2023, 934}], LineBox[{2026, 937}], 
       LineBox[{2027, 938}], LineBox[{2028, 939}], LineBox[{2029, 940}], 
       LineBox[{2038, 949}], LineBox[{2043, 954}], LineBox[{2045, 956}], 
       LineBox[{2050, 961}], LineBox[{2051, 962}], LineBox[{2055, 966}], 
       LineBox[{2056, 967}], LineBox[{2057, 968}], LineBox[{2063, 974}], 
       LineBox[{2064, 975}], LineBox[{2065, 976}], LineBox[{2070, 981}], 
       LineBox[{2071, 982}], LineBox[{2081, 992}], LineBox[{2107, 1018}], 
       LineBox[{2111, 1022}], LineBox[{2122, 1033}], LineBox[{2127, 1038}], 
       LineBox[{2131, 1042}], LineBox[{2134, 1045}], LineBox[{2135, 1046}], 
       LineBox[{2137, 1048}], LineBox[{2138, 1049}], LineBox[{2148, 1059}], 
       LineBox[{2149, 1060}], LineBox[{2150, 1061}], LineBox[{2152, 1063}], 
       LineBox[{2153, 1064}], LineBox[{2154, 1065}], LineBox[{2155, 1066}], 
       LineBox[{2158, 1069}], LineBox[{2159, 1070}], LineBox[{2160, 1071}], 
       LineBox[{2161, 1072}], LineBox[{2162, 1073}], LineBox[{2164, 1075}], 
       LineBox[{2165, 1076}], LineBox[{2170, 1081}], LineBox[{2174, 1085}], 
       LineBox[{2175, 1086}], LineBox[{2177, 1088}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.004583333333333334], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwN00OiGAoCALA3tW3btm3btm392rZt27Zt27Y7WeQISdiofaV2/wsICCgY
JCBgUIiAgMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7z
mM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exhL/vY
zwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu97jP
Ax7yiMc84SnPeM4LXvKK17zhLe94zwc+8onPfOEr3/jOD37yi9/84S//CAgZ
EPA/AhGYIAQlGMEJQUhCEZowhCUc4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJ
QEISkZgkJCUZyUlBSlKRmjSkJR3pyUBGMpGZLGQlG9nJQU5ykZs85CUf+SlA
QQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa1alBTWpRmzrUpR71aUBD
GtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50pRvd6UFPetGbPvSlH//RnwEM
ZBCDGcJQhjGcEYxkFKMZw1jGMZ4JTGQSk5nCVKYxnRnMZBazmcNc5jGfBSxk
EYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb2cJWtrGdHexkF7vZw172sZ8DHOQQ
hznCUY5xnBOc5BSnOcNZznGeC1zkEpe5wlWucZ0b3OQWt7nDXe5xnwc85BGP
ecJTnvGcF7zkFa95w1ve8Z4PfOQTn/nCV77xnR/85Be/+cNf/hEQyn8CEZgg
BCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4xCUe8UlAQhKRmCQk
JRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzkJR/5KUBBClGYIhSl
GMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSlHvVpQEMa0ZgmNKUZ
zWlBS1rRmja0pR3t6UBHOtGZLnSlG93pQU960Zs+9KUf/9GfAQxkEIMZwlCG
MZwRjGQUoxnDWMYxnglMZBKTmcJUpjGdGcxkFrOZw1zmMZ8FLGQRi1nCUpax
nBWsZBWrWcNa1rGeDWxkE5vZwla2sZ0d7GQXu9nDXvaxnwMc5BCHOcJRjnGc
E5zkFKc5w1nOcZ4LXOQSl7nCVa5xnRvc5Ba3ucNd7nGfBzzkEY95wlOe8ZwX
vOQVr3nDW97xng985BOf+cJXvvGdH/zkF7/5w1/+ERDafwIRmCAEJRjBCUFI
QhGaMIQlHOGJQEQiEZkoRCUa0YlBTGIRmzjEJR7xSUBCEpGYJCQlGclJQUpS
kZo0pCUd6clARjKRmSxkJRvZyUFOcpGbPOQlH/kpQEEKUZgiFKUYxSlBSUpR
mjKUpRzlqUBFKlGZKlSlGtWpQU1qUZs61KUe9WlAQxrRmCY0pRnNaUFLWtGa
NrSlHe3pQEc60ZkudKUb3elBT3rRmz70pR//0Z8BDGQQgxnCUIYxnBGMZBSj
GcNYxjGeCUxkEpOZwlSmMZ0ZzGQWs5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZ
w1rWsZ4NbGQTm9nCVraxnR3sZBe72cNe9rGfAxzkEIc5wlGOcZwTnOQUpznD
Wc5xngtc5BKXucJVrnGdG9zkFre5w13ucZ8HPOQRj3nCU57xnBe85BWvecNb
3vGeD3zkE5/5wle+8Z0f/OQXv/nDX/4REMZ/AhGYIAQlGMEJQUhCEZowhCUc
4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJQEISkZgkJCUZyUlBSlKRmjSkJR3p
yUBGMpGZLGQlG9nJQU5ykZs85CUf+SlAQQpRmCIUpRjFKUFJSlGaMpSlHOWp
QEUqUZkqVKUa1alBTWpRmzrUpR71aUBDGtGYJjSlGc1pQUta0Zo2tKUd7elA
RzrRmS50pRvd6UFPetGbPvSlH//RnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4J
TGQSk5nCVKYxnRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1s
ZBOb2cJWtrGdHexkF7vZw172sZ8DHOQQ/wfgGlSS
        "]]}, {}}}], {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{None, None},
  AxesOrigin->{-4.256641429940279, 0.},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"actual value - predicted value\"", TraditionalForm], None}, {
     FormBox["\"predicted value\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-4.642814065283728, -4.262582547407101}, {-3.471276340736422, 
   3.471276340736422}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7100613557509747`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"trainingset", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "6", ",", "8"}], "}"}]}], "]"}], "]"}], "\[Rule]", 
     RowBox[{"trainingset", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "9"}], "]"}], "]"}]}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<GaussianProcess\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7100754760146866`*^9, 3.7100754782751403`*^9}}],

Cell[BoxData[
 RowBox[{"pm", "=", 
  RowBox[{"PredictorMeasurements", "[", 
   RowBox[{"p", ",", 
    RowBox[{
     RowBox[{"testset", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "6", ",", "8"}], "}"}]}], "]"}], "]"}], "\[Rule]", 
     RowBox[{"testset", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "9"}], "]"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7100754956596146`*^9, 3.71007549628874*^9}}],

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ComparisonPlot\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<ResidualHistogram\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"pm", "[", "\"\<StandardDeviation\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Beep", "[", "]"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Let\[CloseCurlyQuote]s recap what just happened. We found out that during \
retrogressions of most planets (Mars, Saturn, Uranus, Neptune, and Pluto -- \
the malefics) a CHANGE of up to 37 percent happened! This is sufficient \
discernment ability to have hope in building a predictor of flight \
cancellations. 

When the predictor is applied to two years of FUTURE, unconnected dates, the \
standard deviation from actual flight cancellations is ~0.81. Better modeling \
may be needed. To see more on this kind of thing, go to AyurAstro.com.\
\>", "Chapter",
 CellChangeTimes->{{3.7099371635626907`*^9, 3.709937350648697*^9}, {
  3.709937888954048*^9, 3.7099379571398993`*^9}, {3.709941916268335*^9, 
  3.709941959472111*^9}, {3.7099420247683754`*^9, 3.7099420255845423`*^9}, {
  3.709944936614012*^9, 3.70994493690407*^9}, {3.7099513616492944`*^9, 
  3.7099513657111263`*^9}, {3.710006814289624*^9, 3.710006818675935*^9}, {
  3.7100613873807073`*^9, 3.7100614263496027`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7099498999612265`*^9, 3.7099499123917713`*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.7 Inherited,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[1486, 35, 595, 10, 283, "Title"],
Cell[2084, 47, 388, 5, 277, "Text"],
Cell[2475, 54, 605, 14, 179, "Text"],
Cell[3083, 70, 330, 9, 85, "Input"],
Cell[CellGroupData[{
Cell[3438, 83, 2624, 62, 250, "Input"],
Cell[6065, 147, 344, 9, 51, "Output"]
}, Open  ]],
Cell[6424, 159, 355, 6, 50, "Text"],
Cell[CellGroupData[{
Cell[6804, 169, 608, 10, 383, "Chapter"],
Cell[7415, 181, 11451, 270, 1174, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18903, 456, 264, 5, 209, "Chapter"],
Cell[CellGroupData[{
Cell[19192, 465, 169, 3, 51, "Input"],
Cell[19364, 470, 15573, 391, 421, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34974, 866, 318, 6, 51, "Input"],
Cell[35295, 874, 14449, 373, 387, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49781, 1252, 152, 3, 51, "Input"],
Cell[49936, 1257, 257, 7, 51, "Output"]
}, Open  ]],
Cell[50208, 1267, 876, 23, 51, "Input"],
Cell[CellGroupData[{
Cell[51109, 1294, 257, 5, 51, "Input"],
Cell[51369, 1301, 39122, 857, 649, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90528, 2163, 131, 2, 86, "Input"],
Cell[90662, 2167, 294, 4, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90993, 2176, 746, 18, 120, "Input"],
Cell[91742, 2196, 277, 6, 64, "Message"],
Cell[92022, 2204, 275, 6, 64, "Message"],
Cell[92300, 2212, 275, 6, 64, "Message"],
Cell[92578, 2220, 371, 7, 64, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92986, 2232, 303, 5, 86, "Input"],
Cell[93292, 2239, 94, 1, 86, "Output"]
}, Open  ]],
Cell[93401, 2243, 203, 4, 86, "Input"],
Cell[CellGroupData[{
Cell[93629, 2251, 139, 2, 86, "Input"],
Cell[93771, 2255, 73, 1, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93881, 2261, 654, 17, 86, "Input"],
Cell[94538, 2280, 140148, 2457, 700, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234723, 4742, 246, 5, 86, "Input"],
Cell[234972, 4749, 453, 12, 86, "Output"]
}, Open  ]],
Cell[235440, 4764, 203, 3, 86, "Input"],
Cell[CellGroupData[{
Cell[235668, 4771, 447, 12, 86, "Input"],
Cell[236118, 4785, 674, 16, 113, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236829, 4806, 544, 13, 86, "Input"],
Cell[237376, 4821, 349, 7, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[237762, 4833, 206, 5, 86, "Input"],
Cell[237971, 4840, 709, 17, 115, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238717, 4862, 433, 13, 86, "Input"],
Cell[239153, 4877, 172, 4, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239362, 4886, 435, 13, 86, "Input"],
Cell[239800, 4901, 144, 3, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239981, 4909, 433, 13, 86, "Input"],
Cell[240417, 4924, 120, 3, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240574, 4932, 421, 8, 86, "Input"],
Cell[240998, 4942, 623, 16, 86, "Output"]
}, Open  ]],
Cell[241636, 4961, 598, 16, 86, "Input"],
Cell[CellGroupData[{
Cell[242259, 4981, 931, 20, 86, "Input"],
Cell[243193, 5003, 27020, 603, 727, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[270250, 5611, 250, 5, 86, "Input"],
Cell[270503, 5618, 140260, 2459, 700, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[410800, 8082, 137, 2, 86, "Input"],
Cell[410940, 8086, 73, 1, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[411050, 8092, 132, 2, 86, "Input"],
Cell[411185, 8096, 73, 1, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[411295, 8102, 538, 14, 86, "Input"],
Cell[411836, 8118, 12326, 310, 496, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[424199, 8433, 124, 2, 86, "Input"],
Cell[424326, 8437, 4688, 109, 204, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[429051, 8551, 130, 2, 86, "Input"],
Cell[429184, 8555, 75, 1, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[429296, 8561, 414, 8, 86, "Input"],
Cell[429713, 8571, 214, 3, 86, "Output"]
}, Open  ]],
Cell[429942, 8577, 336, 9, 86, "Input"],
Cell[CellGroupData[{
Cell[430303, 8590, 1184, 31, 144, "Input"],
Cell[431490, 8623, 893, 19, 137, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[432420, 8647, 247, 6, 86, "Input"],
Cell[432670, 8655, 7604, 130, 681, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[440311, 8790, 267, 6, 86, "Input"],
Cell[440581, 8798, 530, 14, 86, "Output"]
}, Open  ]],
Cell[441126, 8815, 704, 15, 86, "Input"],
Cell[CellGroupData[{
Cell[441855, 8834, 269, 6, 86, "Input"],
Cell[442127, 8842, 244, 3, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[442408, 8850, 185, 3, 86, "Input"],
Cell[442596, 8855, 260, 4, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[442893, 8864, 151, 2, 86, "Input"],
Cell[443047, 8868, 220, 3, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[443304, 8876, 241, 4, 86, "Input"],
Cell[443548, 8882, 13531, 349, 783, 10196, 293, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[457116, 9236, 253, 4, 86, "Input"],
Cell[457372, 9242, 153121, 2526, 1524, "Output"]
}, Open  ]],
Cell[610508, 11771, 71, 1, 86, "Input"],
Cell[CellGroupData[{
Cell[610604, 11776, 140, 2, 86, "Input"],
Cell[610747, 11780, 99, 1, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[610883, 11786, 220, 5, 86, "Input"],
Cell[611106, 11793, 99, 1, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[611242, 11799, 911, 18, 86, "Input"],
Cell[612156, 11819, 3343, 77, 222, "Output"]
}, Open  ]],
Cell[615514, 11899, 120, 2, 86, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[615671, 11906, 524, 8, 307, "Chapter"],
Cell[CellGroupData[{
Cell[616220, 11918, 635, 16, 86, "Input"],
Cell[616858, 11936, 254, 6, 64, "Message"],
Cell[617115, 11944, 254, 6, 64, "Message"],
Cell[617372, 11952, 254, 6, 38, "Message"],
Cell[617629, 11960, 348, 7, 38, "Message"]
}, Open  ]],
Cell[617992, 11970, 303, 7, 51, "Input"],
Cell[CellGroupData[{
Cell[618320, 11981, 682, 17, 75, "Input"],
Cell[619005, 12000, 252, 6, 38, "Message"]
}, Open  ]],
Cell[619272, 12009, 305, 7, 51, "Input"],
Cell[CellGroupData[{
Cell[619602, 12020, 693, 17, 75, "Input"],
Cell[620298, 12039, 254, 6, 38, "Message"],
Cell[620555, 12047, 254, 6, 38, "Message"],
Cell[620812, 12055, 254, 6, 38, "Message"],
Cell[621069, 12063, 348, 7, 38, "Message"]
}, Open  ]],
Cell[621432, 12073, 256, 6, 51, "Input"],
Cell[CellGroupData[{
Cell[621713, 12083, 741, 18, 75, "Input"],
Cell[622457, 12103, 254, 6, 38, "Message"],
Cell[622714, 12111, 254, 6, 38, "Message"]
}, Open  ]],
Cell[622983, 12120, 256, 6, 51, "Input"],
Cell[CellGroupData[{
Cell[623264, 12130, 692, 17, 75, "Input"],
Cell[623959, 12149, 254, 6, 38, "Message"],
Cell[624216, 12157, 252, 6, 38, "Message"],
Cell[624471, 12165, 252, 6, 38, "Message"],
Cell[624726, 12173, 348, 7, 38, "Message"]
}, Open  ]],
Cell[625089, 12183, 254, 6, 51, "Input"],
Cell[CellGroupData[{
Cell[625368, 12193, 695, 17, 120, "Input"],
Cell[626066, 12212, 250, 6, 64, "Message"],
Cell[626319, 12220, 252, 6, 64, "Message"],
Cell[626574, 12228, 252, 6, 64, "Message"],
Cell[626829, 12236, 346, 7, 64, "Message"]
}, Open  ]],
Cell[627190, 12246, 201, 5, 86, "Input"],
Cell[CellGroupData[{
Cell[627416, 12255, 723, 18, 120, "Input"],
Cell[628142, 12275, 252, 6, 64, "Message"],
Cell[628397, 12283, 252, 6, 64, "Message"],
Cell[628652, 12291, 251, 6, 64, "Message"],
Cell[628906, 12299, 348, 7, 64, "Message"]
}, Open  ]],
Cell[629269, 12309, 254, 6, 86, "Input"],
Cell[629526, 12317, 229, 5, 86, "Input"],
Cell[629758, 12324, 227, 5, 86, "Input"],
Cell[629988, 12331, 228, 5, 86, "Input"],
Cell[630219, 12338, 224, 5, 86, "Input"],
Cell[630446, 12345, 230, 5, 86, "Input"],
Cell[630679, 12352, 227, 5, 86, "Input"],
Cell[630909, 12359, 228, 5, 86, "Input"],
Cell[631140, 12366, 228, 5, 86, "Input"],
Cell[631371, 12373, 1365, 34, 144, "Input"],
Cell[CellGroupData[{
Cell[632761, 12411, 131, 2, 86, "Input"],
Cell[632895, 12415, 884, 19, 86, "Output"]
}, Open  ]],
Cell[633794, 12437, 528, 15, 86, "Input"],
Cell[CellGroupData[{
Cell[634347, 12456, 363, 7, 86, "Input"],
Cell[634713, 12465, 215, 2, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[634965, 12472, 805, 18, 144, "Input"],
Cell[635773, 12492, 2176, 59, 200, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[637986, 12556, 138, 2, 51, "Input"],
Cell[638127, 12560, 122, 2, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[638286, 12567, 172, 3, 51, "Input"],
Cell[638461, 12572, 1805, 41, 403, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[640303, 12618, 890, 23, 51, "Input"],
Cell[641196, 12643, 241, 3, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[641474, 12651, 180, 4, 51, "Input"],
Cell[641657, 12657, 88, 1, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[641782, 12663, 830, 23, 51, "Input"],
Cell[642615, 12688, 90, 1, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[642742, 12694, 180, 4, 51, "Input"],
Cell[642925, 12700, 91, 1, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[643053, 12706, 790, 22, 51, "Input"],
Cell[643846, 12730, 188, 2, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[644071, 12737, 180, 4, 51, "Input"],
Cell[644254, 12743, 91, 1, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[644382, 12749, 758, 21, 51, "Input"],
Cell[645143, 12772, 134, 2, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[645314, 12779, 178, 4, 51, "Input"],
Cell[645495, 12785, 91, 1, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[645623, 12791, 788, 22, 51, "Input"],
Cell[646414, 12815, 166, 2, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[646617, 12822, 180, 4, 51, "Input"],
Cell[646800, 12828, 91, 1, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[646928, 12834, 797, 23, 51, "Input"],
Cell[647728, 12859, 167, 3, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[647932, 12867, 178, 4, 51, "Input"],
Cell[648113, 12873, 89, 1, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[648239, 12879, 825, 23, 51, "Input"],
Cell[649067, 12904, 138, 2, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[649242, 12911, 178, 4, 51, "Input"],
Cell[649423, 12917, 91, 1, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[649551, 12923, 795, 23, 51, "Input"],
Cell[650349, 12948, 136, 2, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[650522, 12955, 180, 4, 51, "Input"],
Cell[650705, 12961, 89, 1, 51, "Output"]
}, Open  ]],
Cell[650809, 12965, 139, 2, 51, "Input"],
Cell[CellGroupData[{
Cell[650973, 12971, 781, 17, 85, "Input"],
Cell[651757, 12990, 528, 10, 71, "Message"],
Cell[652288, 13002, 445, 9, 38, "Message"],
Cell[652736, 13013, 34035, 676, 2706, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[686808, 13694, 1538, 41, 118, "Input"],
Cell[688349, 13737, 381, 6, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[688767, 13748, 1447, 40, 118, "Input"],
Cell[690217, 13790, 282, 4, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[690536, 13799, 1396, 39, 118, "Input"],
Cell[691935, 13840, 252, 4, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[692224, 13849, 1389, 39, 118, "Input"],
Cell[693616, 13890, 222, 3, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[693875, 13898, 1394, 39, 118, "Input"],
Cell[695272, 13939, 211, 3, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[695520, 13947, 1348, 39, 118, "Input"],
Cell[696871, 13988, 208, 4, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[697116, 13997, 224, 3, 114, "Subchapter"],
Cell[697343, 14002, 6780, 169, 778, "Input"],
Cell[CellGroupData[{
Cell[704148, 14175, 97, 1, 51, "Input"],
Cell[704248, 14178, 11287, 280, 189, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[715572, 14463, 318, 6, 51, "Input"],
Cell[715893, 14471, 9965, 257, 223, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[725895, 14733, 203, 4, 51, "Input"],
Cell[726101, 14739, 27539, 538, 406, "Output"]
}, Open  ]],
Cell[753655, 15280, 930, 24, 51, "Input"],
Cell[CellGroupData[{
Cell[754610, 15308, 104, 1, 51, "Input"],
Cell[754717, 15311, 14664, 348, 279, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[769418, 15664, 803, 19, 75, "Input"],
Cell[770224, 15685, 255, 6, 38, "Message"]
}, Open  ]],
Cell[770494, 15694, 404, 8, 51, "Input"],
Cell[CellGroupData[{
Cell[770923, 15706, 740, 17, 51, "Input"],
Cell[771666, 15725, 255, 6, 38, "Message"],
Cell[771924, 15733, 253, 6, 38, "Message"]
}, Open  ]],
Cell[772192, 15742, 353, 7, 51, "Input"],
Cell[772548, 15751, 787, 19, 75, "Input"],
Cell[773338, 15772, 357, 7, 51, "Input"],
Cell[773698, 15781, 799, 19, 75, "Input"],
Cell[774500, 15802, 311, 7, 51, "Input"],
Cell[CellGroupData[{
Cell[774836, 15813, 846, 19, 75, "Input"],
Cell[775685, 15834, 253, 6, 38, "Message"]
}, Open  ]],
Cell[775953, 15843, 309, 7, 51, "Input"],
Cell[CellGroupData[{
Cell[776287, 15854, 795, 19, 75, "Input"],
Cell[777085, 15875, 253, 6, 38, "Message"]
}, Open  ]],
Cell[777353, 15884, 307, 7, 51, "Input"],
Cell[CellGroupData[{
Cell[777685, 15895, 801, 19, 75, "Input"],
Cell[778489, 15916, 255, 6, 38, "Message"],
Cell[778747, 15924, 253, 6, 38, "Message"]
}, Open  ]],
Cell[779015, 15933, 256, 6, 51, "Input"],
Cell[779274, 15941, 829, 20, 75, "Input"],
Cell[780106, 15963, 205, 5, 51, "Input"],
Cell[780314, 15970, 1172, 31, 85, "Input"],
Cell[CellGroupData[{
Cell[781511, 16005, 909, 20, 118, "Input"],
Cell[782423, 16027, 348, 10, 51, "Output"]
}, Open  ]],
Cell[782786, 16040, 441, 12, 51, "Input"],
Cell[CellGroupData[{
Cell[783252, 16056, 132, 2, 51, "Input"],
Cell[783387, 16060, 73, 1, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[783497, 16066, 125, 2, 51, "Input"],
Cell[783625, 16070, 120, 1, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[783782, 16076, 182, 3, 51, "Input"],
Cell[783967, 16081, 8602, 216, 189, "Output"]
}, Open  ]],
Cell[792584, 16300, 277, 7, 51, "Input"],
Cell[792864, 16309, 2315, 60, 151, "Input"],
Cell[795182, 16371, 224, 5, 51, "Input"],
Cell[CellGroupData[{
Cell[795431, 16380, 130, 2, 51, "Input"],
Cell[795564, 16384, 173, 2, 51, "Output"]
}, Open  ]],
Cell[795752, 16389, 220, 5, 108, "Input"],
Cell[CellGroupData[{
Cell[795997, 16398, 137, 2, 51, "Input"],
Cell[796137, 16402, 75, 1, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[796249, 16408, 256, 6, 51, "Input"],
Cell[796508, 16416, 10830, 312, 401, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[807375, 16733, 789, 19, 51, "Input"],
Cell[808167, 16754, 7957, 163, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[816161, 16922, 690, 16, 51, "Input"],
Cell[816854, 16940, 8008, 164, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[824899, 17109, 76, 1, 51, "Input"],
Cell[824978, 17112, 27996, 517, 638, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[853011, 17634, 147, 2, 51, "Input"],
Cell[853161, 17638, 165, 2, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[853363, 17645, 74, 1, 51, "Input"],
Cell[853440, 17648, 57211, 873, 425, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[910688, 18526, 734, 17, 51, "Input"],
Cell[911425, 18545, 7933, 163, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[919395, 18713, 688, 16, 51, "Input"],
Cell[920086, 18731, 7958, 163, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[928081, 18899, 76, 1, 51, "Input"],
Cell[928160, 18902, 27980, 517, 638, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[956177, 19424, 74, 1, 51, "Input"],
Cell[956254, 19427, 57187, 872, 423, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1013478, 20304, 147, 2, 51, "Input"],
Cell[1013628, 20308, 236, 3, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1013901, 20316, 406, 8, 51, "Input"],
Cell[1014310, 20326, 10909, 314, 401, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1025256, 20645, 79, 1, 51, "Input"],
Cell[1025338, 20648, 11091, 317, 419, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1036466, 20970, 74, 1, 51, "Input"],
Cell[1036543, 20973, 57231, 872, 423, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1093811, 21850, 147, 2, 51, "Input"],
Cell[1093961, 21854, 212, 3, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1094210, 21862, 406, 8, 51, "Input"],
Cell[1094619, 21872, 10907, 314, 401, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1105563, 22191, 1021, 21, 51, "Input"],
Cell[1106587, 22214, 7843, 161, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1114467, 22380, 770, 18, 51, "Input"],
Cell[1115240, 22400, 7977, 163, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1123254, 22568, 76, 1, 51, "Input"],
Cell[1123333, 22571, 27774, 513, 638, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1151144, 23089, 79, 1, 51, "Input"],
Cell[1151226, 23092, 256, 3, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1151519, 23100, 79, 1, 51, "Input"],
Cell[1151601, 23103, 11085, 316, 425, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1162723, 23424, 74, 1, 51, "Input"],
Cell[1162800, 23427, 56424, 859, 423, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1219261, 24291, 835, 18, 51, "Input"],
Cell[1220099, 24311, 8098, 165, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1228234, 24481, 674, 16, 51, "Input"],
Cell[1228911, 24499, 8008, 164, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1236956, 24668, 140, 2, 51, "Input"],
Cell[1237099, 24672, 624, 11, 85, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1237760, 24688, 145, 2, 51, "Input"],
Cell[1237908, 24692, 123, 2, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1238068, 24699, 76, 1, 51, "Input"],
Cell[1238147, 24702, 27799, 514, 638, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1265983, 25221, 79, 1, 51, "Input"],
Cell[1266065, 25224, 316, 5, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1266418, 25234, 79, 1, 51, "Input"],
Cell[1266500, 25237, 10470, 299, 419, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1277007, 25541, 74, 1, 51, "Input"],
Cell[1277084, 25544, 56365, 859, 423, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1333486, 26408, 140, 2, 51, "Input"],
Cell[1333629, 26412, 648, 12, 85, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1334314, 26429, 173, 3, 51, "Input"],
Cell[1334490, 26434, 43739, 812, 2758, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1378266, 27251, 938, 21, 51, "Input"],
Cell[1379207, 27274, 8067, 164, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1387311, 27443, 674, 16, 51, "Input"],
Cell[1387988, 27461, 7983, 163, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1396008, 27629, 76, 1, 51, "Input"],
Cell[1396087, 27632, 27771, 513, 638, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1423895, 28150, 79, 1, 51, "Input"],
Cell[1423977, 28153, 285, 4, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1424299, 28162, 79, 1, 51, "Input"],
Cell[1424381, 28165, 11080, 316, 419, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1435498, 28486, 74, 1, 51, "Input"],
Cell[1435575, 28489, 56312, 857, 423, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1491924, 29351, 173, 3, 51, "Input"],
Cell[1492100, 29356, 42880, 795, 2758, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1535017, 30156, 195, 4, 51, "Input"],
Cell[1535215, 30162, 21215, 614, 402, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1556467, 30781, 356, 8, 51, "Input"],
Cell[1556826, 30791, 771, 18, 109, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1557634, 30814, 340, 8, 51, "Input"],
Cell[1557977, 30824, 776, 17, 109, "Output"]
}, Open  ]],
Cell[1558768, 30844, 318, 8, 51, "Input"],
Cell[CellGroupData[{
Cell[1559111, 30856, 859, 18, 51, "Input"],
Cell[1559973, 30876, 7990, 163, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1568000, 31044, 624, 16, 51, "Input"],
Cell[1568627, 31062, 7900, 162, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1576564, 31229, 76, 1, 51, "Input"],
Cell[1576643, 31232, 27730, 512, 638, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1604410, 31749, 79, 1, 51, "Input"],
Cell[1604492, 31752, 236, 3, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1604765, 31760, 79, 1, 51, "Input"],
Cell[1604847, 31763, 10430, 298, 419, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1615314, 32066, 74, 1, 51, "Input"],
Cell[1615391, 32069, 56306, 857, 423, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1671734, 32931, 1085, 24, 51, "Input"],
Cell[1672822, 32957, 8047, 164, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1680906, 33126, 672, 16, 51, "Input"],
Cell[1681581, 33144, 7952, 162, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1689570, 33311, 76, 1, 51, "Input"],
Cell[1689649, 33314, 27767, 513, 638, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1717453, 33832, 79, 1, 51, "Input"],
Cell[1717535, 33835, 283, 4, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1717855, 33844, 79, 1, 51, "Input"],
Cell[1717937, 33847, 11064, 316, 419, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1729038, 34168, 74, 1, 51, "Input"],
Cell[1729115, 34171, 56323, 858, 420, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1785499, 35036, 492, 9, 383, "Chapter"],
Cell[CellGroupData[{
Cell[1786016, 35049, 761, 18, 51, "Input"],
Cell[1786780, 35069, 7756, 160, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1794573, 35234, 558, 14, 51, "Input"],
Cell[1795134, 35250, 7784, 160, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1802955, 35415, 76, 1, 51, "Input"],
Cell[1803034, 35418, 26816, 499, 643, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1829887, 35922, 79, 1, 51, "Input"],
Cell[1829969, 35925, 2817, 55, 419, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1832823, 35985, 147, 2, 51, "Input"],
Cell[1832973, 35989, 90, 1, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1833100, 35995, 74, 1, 51, "Input"],
Cell[1833177, 35998, 55774, 849, 423, "Output"]
}, Open  ]],
Cell[1888966, 36850, 535, 15, 51, "Input"],
Cell[1889504, 36867, 477, 13, 51, "Input"],
Cell[1889984, 36882, 76, 1, 51, "Input"],
Cell[1890063, 36885, 79, 1, 51, "Input"],
Cell[1890145, 36888, 79, 1, 51, "Input"],
Cell[1890227, 36891, 52, 1, 51, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1890316, 36897, 988, 16, 817, "Chapter"],
Cell[1891307, 36915, 96, 1, 86, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* NotebookSignature 8wTkQdJovGOtFDwPitYVwOaB *)
